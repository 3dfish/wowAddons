
PlaterDB = {
["captured_spells"] = {
[445470] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "卡赫提狙丝手",
["npcID"] = 222106,
},
[371584] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "阿奎利恩",
["npcID"] = 220274,
},
[450188] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "翻捡的泥鼻鼹鼠",
["npcID"] = 225482,
},
[457902] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "贝雷达尔之裔",
["npcID"] = 207802,
},
[59638] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "镜像",
["npcID"] = 31216,
},
[383061] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "岩浆图腾",
["npcID"] = 97369,
},
[430109] = {
["isChanneled"] = false,
["source"] = "被诅咒的雷霆使",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207198,
},
[459753] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "芬雷尔",
["npcID"] = 228224,
},
[445984] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "山顶利颚爬行者",
["npcID"] = 227980,
},
[454782] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "贝雷达尔之裔",
["npcID"] = 207802,
},
[114893] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "石壁图腾",
["npcID"] = 59712,
},
[331045] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "蛮翼恐爪鸟",
["npcID"] = 170067,
},
[388231] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "海象人训练假人",
["npcID"] = 196394,
},
[431645] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "网语者格里吉克",
["npcID"] = 216041,
},
[17253] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "狼",
["npcID"] = 165189,
},
[452813] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "狩猎的剃天者",
["npcID"] = 226150,
},
[377589] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "瘟疫掠夺者",
["npcID"] = 26125,
},
[190614] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "沉眠版",
["npcID"] = 104096,
},
[16827] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "伊拉贡",
["npcID"] = 165189,
},
[115804] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "大地之灵",
["npcID"] = 69792,
},
[431907] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "失落的利特方",
["npcID"] = 165189,
},
[258222] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "成熟的星界黄蜂",
["npcID"] = 170451,
},
[442618] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "虚居守卫",
["npcID"] = 220976,
},
[459512] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "鲁乌克",
["npcID"] = 218214,
},
[443001] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "车队领袖",
["npcID"] = 226382,
},
[333670] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "德鲁斯特斩心者",
["npcID"] = 170871,
},
[49966] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "弗特莱",
["npcID"] = 165189,
},
[430125] = {
["type"] = "BUFF",
["source"] = "军需官科拉泰特",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 209801,
},
[290577] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "憎恶",
["npcID"] = 149555,
},
[445236] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "激动的鳗鱼",
["npcID"] = 227369,
},
[427323] = {
["isChanneled"] = false,
["source"] = "驭虚者",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212786,
},
[452250] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "深沟囫囵者",
["npcID"] = 217717,
},
[427325] = {
["isChanneled"] = false,
["source"] = "驭虚者",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212786,
},
[135029] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "水元素",
["npcID"] = 208441,
},
[453463] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "被抑制的工人",
["npcID"] = 225436,
},
[430450] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "污浊软泥",
["npcID"] = 223473,
},
[1126] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "科蕾娜·大地之女",
["npcID"] = 209072,
},
[24394] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "野兽",
["npcID"] = 62005,
},
[442627] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "死忠纤丝之刃",
["npcID"] = 221190,
},
[446325] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "炫目雌孔雀",
["npcID"] = 221523,
},
[372503] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "死忠纤丝之刃",
["npcID"] = 221190,
},
[36213] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "原始土元素",
["npcID"] = 61056,
},
[157375] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "原始风暴元素",
["npcID"] = 77942,
},
[53824] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "暗流深渔者",
["npcID"] = 226961,
},
[377923] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "升腾岩浆",
["npcID"] = 225390,
},
[447921] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "飞瀑守卫",
["npcID"] = 214594,
},
[431920] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "扬升监督者",
["npcID"] = 215755,
},
[446519] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "半影岩角麋",
["npcID"] = 227933,
},
[398643] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "不安的蜗牛",
["npcID"] = 220764,
},
[207707] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "潜伏的混血犬",
["npcID"] = 225612,
},
[447987] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "废土剥石者",
["npcID"] = 221017,
},
[443461] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "一桶烟花",
["npcID"] = 221183,
},
[360969] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "狼",
["npcID"] = 165189,
},
[433198] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "海潮领主孽齿",
["npcID"] = 216527,
},
[455447] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "维恩",
["npcID"] = 226271,
},
[400050] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "深岩剥石者猎人",
["npcID"] = 221198,
},
[445504] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "大领主达里安·莫格莱尼",
["npcID"] = 221632,
},
[325782] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "暗穴喷毒者",
["npcID"] = 164038,
},
[444740] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "索拉斯·托尔贝恩国王",
["npcID"] = 221635,
},
[186258] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "失落的利特方",
["npcID"] = 165189,
},
[108446] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "未知目标",
["npcID"] = 17252,
},
[2649] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "失落的利特方",
["npcID"] = 165189,
},
[224126] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "幽灵狼",
["npcID"] = 100820,
},
[157348] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "原始风暴元素",
["npcID"] = 77942,
},
[447994] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "废土剥石者",
["npcID"] = 221017,
},
[445508] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "纳兹戈林",
["npcID"] = 221634,
},
[160058] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "弗特莱",
["npcID"] = 165189,
},
[224127] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "幽灵狼",
["npcID"] = 100820,
},
[427404] = {
["isChanneled"] = true,
["source"] = "驭虚者",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212786,
},
[1459] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "梅瑞迪·寻涌",
["npcID"] = 209059,
},
[427024] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "萤光虫群",
["npcID"] = 224595,
},
[444683] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "狂野的磐羊",
["npcID"] = 221023,
},
[446533] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "被激怒的岩角麋",
["npcID"] = 221024,
},
[443027] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "车队护卫者",
["npcID"] = 226383,
},
[446535] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "被激怒的岩角麋",
["npcID"] = 221024,
},
[201754] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "伊拉贡",
["npcID"] = 165189,
},
[439523] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "贝雷达尔之裔",
["npcID"] = 207802,
},
[436272] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "泽什洞行者",
["npcID"] = 218014,
},
[205644] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "树人",
["npcID"] = 103822,
},
[61684] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "失落的利特方",
["npcID"] = 165189,
},
[452469] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "布莱斯顿",
["npcID"] = 224764,
},
[192226] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "岩浆图腾",
["npcID"] = 97369,
},
[444692] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "狂野的磐羊",
["npcID"] = 221023,
},
[452699] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "苍郁巨兽",
["npcID"] = 215813,
},
[460595] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "干渴的回收者",
["npcID"] = 220756,
},
[282449] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "阿卡丽之魂",
["npcID"] = 144961,
},
[385023] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "海滨噬污者",
["npcID"] = 229067,
},
[456212] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "缠网矿脉",
["npcID"] = 226716,
},
[31707] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "水元素",
["npcID"] = 208441,
},
[440550] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "怒鳍处刑者",
["npcID"] = 213408,
},
[323446] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "幻影炽蓝蛾",
["npcID"] = 169798,
},
[426893] = {
["isChanneled"] = false,
["source"] = "军需官科拉泰特",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209801,
},
[19483] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "地狱火爪牙",
["npcID"] = 89,
},
[440551] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "怒鳍处刑者",
["npcID"] = 213408,
},
[456735] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "阿奎利恩",
["npcID"] = 220274,
},
[445513] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "大检察官怀特迈恩",
["npcID"] = 221633,
},
[440912] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "鞭笞菇伏击者",
["npcID"] = 224607,
},
[444377] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "晦崖灰熊",
["npcID"] = 228875,
},
[449960] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "怒鳍削凿者",
["npcID"] = 215652,
},
[338935] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "潜伏的鞭笞者",
["npcID"] = 170449,
},
[453392] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "苏雷吉根除者",
["npcID"] = 225408,
},
[453773] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "纳兹戈林",
["npcID"] = 221634,
},
[208963] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "天怒图腾",
["npcID"] = 105427,
},
[441256] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "幽滴爬行者",
["npcID"] = 223069,
},
[452730] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "苍郁巨兽",
["npcID"] = 215813,
},
[96243] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "水元素",
["npcID"] = 208441,
},
[444474] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "大领主达里安·莫格莱尼",
["npcID"] = 221632,
},
[1604] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "影叶幼芽",
["npcID"] = 214001,
},
[386176] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "未知目标",
["npcID"] = 17252,
},
[263840] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "狼",
["npcID"] = 165189,
},
[444826] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "索拉斯·托尔贝恩国王",
["npcID"] = 221635,
},
[450628] = {
["isChanneled"] = true,
["source"] = "军需官科拉泰特",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209801,
},
[440195] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "恶意暗影",
["npcID"] = 225338,
},
[263892] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "失落的利特方",
["npcID"] = 165189,
},
[91797] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "瘟疫掠夺者",
["npcID"] = 26125,
},
[446549] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "未成年的岩角麋",
["npcID"] = 228012,
},
[427402] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "被诅咒的雷鸫守卫",
["npcID"] = 207197,
},
[388897] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "游荡的碎步壳蟹",
["npcID"] = 229820,
},
[444741] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "索拉斯·托尔贝恩国王",
["npcID"] = 221635,
},
[454199] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "霉菌利颚爬行者",
["npcID"] = 225488,
},
[273892] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "符文追猎者",
["npcID"] = 169915,
},
[432135] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "入侵的狗头人",
["npcID"] = 216157,
},
[431697] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "车队领袖",
["npcID"] = 226382,
},
[455281] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "凄斩",
["npcID"] = 221551,
},
[58729] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "牦牛人灵魂医者",
["npcID"] = 31841,
},
[331044] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "蛮翼恐爪鸟",
["npcID"] = 170067,
},
[118345] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "原始土元素",
["npcID"] = 61056,
},
[457938] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "贝雷达尔之裔",
["npcID"] = 207802,
},
[455380] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "失控的轨机",
["npcID"] = 218251,
},
[445507] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "索拉斯·托尔贝恩国王",
["npcID"] = 221635,
},
},
["profileKeys"] = {
["彭浦新村 - 芬里斯"] = "Default",
["共康路 - 芬里斯"] = "Whiiskeyz || Plater",
},
["captured_casts"] = {
[450435] = {
["source"] = "伊泰基",
["event"] = "SPELL_CAST_START",
["npcID"] = 215660,
},
[453507] = {
["source"] = "皇家军需官泽埃里克",
["event"] = "SPELL_CAST_START",
["npcID"] = 215988,
},
[405391] = {
["encounterName"] = "被遗忘的实验体",
["source"] = "里翁苏斯",
["npcID"] = 200918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[376727] = {
["encounterName"] = "巴拉卡可汗",
["source"] = "巴拉卡可汗",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[444296] = {
["source"] = "阿拉希骑士",
["event"] = "SPELL_CAST_START",
["npcID"] = 206696,
},
[426893] = {
["source"] = "军需官科拉泰特",
["event"] = "SPELL_CAST_START",
["npcID"] = 209801,
},
[196587] = {
["encounterName"] = "融合之魂",
["source"] = "融合之魂",
["npcID"] = 98542,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1832,
},
[392087] = {
["event"] = "SPELL_CAST_START",
["source"] = "反胃的龙蛙",
["npcID"] = 194003,
},
[118529] = {
["event"] = "SPELL_CAST_START",
["source"] = "魔古山藏秘者",
["npcID"] = 61131,
},
[410516] = {
["encounterName"] = "扎卡利突袭",
["source"] = "督军卡格尼",
["npcID"] = 199659,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[440205] = {
["event"] = "SPELL_CAST_START",
["source"] = "苦痛梦魇",
["npcID"] = 214415,
},
[400279] = {
["source"] = "扎卡利祭师",
["event"] = "SPELL_CAST_START",
["npcID"] = 199971,
},
[458634] = {
["source"] = "觉醒的积焰之蛇",
["event"] = "SPELL_CAST_START",
["npcID"] = 225895,
},
[440207] = {
["source"] = "虚空石畸体",
["event"] = "SPELL_CAST_START",
["npcID"] = 207207,
},
[367521] = {
["event"] = "SPELL_CAST_START",
["source"] = "骨箭猎手",
["npcID"] = 185534,
},
[413590] = {
["encounterName"] = "迦拉克隆之荒",
["source"] = "达扎克",
["encounterID"] = 2668,
["event"] = "SPELL_CAST_START",
["npcID"] = 201788,
},
[196078] = {
["encounterName"] = "融合之魂",
["source"] = "融合之魂",
["npcID"] = 98542,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1832,
},
[448399] = {
["source"] = "狗头人领职者",
["event"] = "SPELL_CAST_START",
["npcID"] = 204127,
},
[400283] = {
["source"] = "扎卡利维护者",
["event"] = "SPELL_CAST_START",
["npcID"] = 199972,
},
[429973] = {
["encounterName"] = "拉罗达尔，烈焰守护者",
["source"] = "拉罗达尔，烈焰守护者",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[369573] = {
["encounterName"] = "失落的矮人",
["source"] = "巴尔洛戈",
["npcID"] = 184581,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2555,
},
[199663] = {
["event"] = "SPELL_CAST_START",
["source"] = "幽灵顾问",
["npcID"] = 98370,
},
[408476] = {
["encounterName"] = "被遗忘的实验体",
["source"] = "古怪残迹",
["npcID"] = 202824,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[382883] = {
["event"] = "SPELL_CAST_START",
["source"] = "恶毒的腐烂妖术师",
["npcID"] = 187224,
},
[377765] = {
["event"] = "SPELL_CAST_START",
["source"] = "拜荒者风暴",
["npcID"] = 190946,
},
[400288] = {
["source"] = "无常剧痛",
["event"] = "SPELL_CAST_START",
["npcID"] = 201290,
},
[197105] = {
["event"] = "SPELL_CAST_START",
["source"] = "积怨奥术师",
["npcID"] = 97171,
},
[198641] = {
["encounterName"] = "库塔洛斯·拉文凯斯",
["source"] = "库塔洛斯·拉文凯斯",
["npcID"] = 98965,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[385958] = {
["encounterName"] = "维克萨姆斯",
["source"] = "维克萨姆斯",
["npcID"] = 194181,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2562,
},
[385959] = {
["source"] = "泰坦防御矩阵",
["event"] = "SPELL_CAST_START",
["npcID"] = 193244,
},
[440218] = {
["encounterName"] = "女王之牙",
["source"] = "维克斯",
["npcID"] = 216649,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2908,
},
[441242] = {
["event"] = "SPELL_CAST_START",
["source"] = "美味测试员",
["npcID"] = 220060,
},
[401316] = {
["encounterName"] = "狱铸者卡扎拉",
["source"] = "狱铸者卡扎拉",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[374699] = {
["event"] = "SPELL_CAST_START",
["source"] = "召焰者艾米",
["npcID"] = 190368,
},
[408483] = {
["source"] = "扎卡利熔岩之舌",
["event"] = "SPELL_CAST_START",
["npcID"] = 208661,
},
[432030] = {
["source"] = "苏雷吉尖啸者",
["event"] = "SPELL_CAST_START",
["npcID"] = 215411,
},
[405413] = {
["encounterName"] = "被遗忘的实验体",
["source"] = "里翁苏斯",
["npcID"] = 200918,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2693,
},
[401319] = {
["encounterName"] = "狱铸者卡扎拉",
["source"] = "狱铸者卡扎拉",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[440222] = {
["source"] = "暗狂收割者",
["event"] = "SPELL_CAST_START",
["npcID"] = 206067,
},
[400296] = {
["source"] = "扎卡利维护者",
["event"] = "SPELL_CAST_START",
["npcID"] = 199972,
},
[214001] = {
["event"] = "SPELL_CAST_START",
["source"] = "复活的长枪兵",
["npcID"] = 102095,
},
[375727] = {
["encounterName"] = "时空领主戴欧斯",
["source"] = "时空领主戴欧斯",
["npcID"] = 184125,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2559,
},
[373680] = {
["encounterName"] = "梅莉杜莎·寒妆",
["source"] = "梅莉杜莎·寒妆",
["npcID"] = 188252,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2609,
},
[428963] = {
["encounterName"] = "火光之龙菲莱克",
["source"] = "燃烧的巨像",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 207796,
},
[413607] = {
["event"] = "SPELL_CAST_START",
["source"] = "永恒暮光大法师",
["npcID"] = 201223,
},
[226287] = {
["event"] = "SPELL_CAST_START",
["source"] = "邪裂巨人",
["npcID"] = 101438,
},
[410537] = {
["source"] = "鳞长萨卡雷斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 199984,
},
[374706] = {
["event"] = "SPELL_CAST_START",
["source"] = "召焰者艾米",
["npcID"] = 190368,
},
[192504] = {
["encounterName"] = "提拉宋·萨瑟利尔",
["source"] = "提拉宋·萨瑟利尔",
["npcID"] = 95885,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1815,
},
[432037] = {
["event"] = "SPELL_CAST_START",
["source"] = "花火捣键者",
["npcID"] = 212596,
},
[401325] = {
["encounterName"] = "鳞长萨卡雷斯",
["source"] = "萨卡雷斯",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[441252] = {
["source"] = "可怖的涌泻软泥",
["event"] = "SPELL_CAST_START",
["npcID"] = 211866,
},
[444324] = {
["encounterName"] = "凯里欧斯",
["source"] = "凯里欧斯",
["encounterID"] = 2816,
["event"] = "SPELL_CAST_START",
["npcID"] = 209230,
},
[458657] = {
["source"] = "觉醒的巨像",
["event"] = "SPELL_CAST_START",
["npcID"] = 225898,
},
[370615] = {
["encounterName"] = "艾拉诺格",
["source"] = "艾拉诺格",
["npcID"] = 184972,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2587,
},
[193018] = {
["encounterName"] = "深须国王",
["source"] = "深须国王",
["npcID"] = 91797,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1812,
},
[440231] = {
["source"] = "暗狂收割者",
["event"] = "SPELL_CAST_START",
["npcID"] = 206067,
},
[434089] = {
["encounterName"] = "拉夏南",
["source"] = "拉夏南",
["encounterID"] = 2839,
["event"] = "SPELL_CAST_START",
["npcID"] = 213937,
},
[200185] = {
["encounterName"] = "萨维斯之影",
["source"] = "萨维斯之影",
["npcID"] = 99192,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1839,
},
[288719] = {
["encounterName"] = "吉安娜·普罗德摩尔",
["source"] = "吉安娜·普罗德摩尔",
["encounterID"] = 2281,
["event"] = "SPELL_CAST_START",
["npcID"] = 146409,
},
[404403] = {
["encounterName"] = "鳞长萨卡雷斯",
["source"] = "萨卡雷斯",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[427950] = {
["source"] = "铸炉大师达米安",
["event"] = "SPELL_CAST_START",
["npcID"] = 212831,
},
[373692] = {
["event"] = "SPELL_CAST_START",
["source"] = "炎缚毁灭者",
["npcID"] = 190034,
},
[373693] = {
["event"] = "SPELL_CAST_START",
["source"] = "炎缚毁灭者",
["npcID"] = 190034,
},
[449451] = {
["isChanneled"] = true,
["source"] = "米兹克",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211582,
},
[408502] = {
["event"] = "SPELL_CAST_START",
["source"] = "格罗姆姆·地勒勒尔",
["npcID"] = 204412,
},
[405431] = {
["encounterName"] = "时间流具象",
["source"] = "时间流具象",
["encounterID"] = 2667,
["event"] = "SPELL_CAST_START",
["npcID"] = 198996,
},
[448429] = {
["source"] = "狗头人秘法师",
["event"] = "SPELL_CAST_START",
["npcID"] = 203878,
},
[413622] = {
["source"] = "永恒渗透者",
["event"] = "SPELL_CAST_START",
["npcID"] = 206214,
},
[427955] = {
["source"] = "职阶监督者",
["event"] = "SPELL_CAST_START",
["npcID"] = 211121,
},
[405433] = {
["encounterName"] = "奈萨里奥的回响",
["source"] = "奈萨里奥",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[422837] = {
["encounterName"] = "火光之龙菲莱克",
["source"] = "菲莱克",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[387006] = {
["source"] = "腐烂的树人",
["event"] = "SPELL_CAST_START",
["npcID"] = 186361,
},
[449455] = {
["source"] = "阴森的虚空之魂",
["event"] = "SPELL_CAST_START",
["npcID"] = 212453,
},
[389054] = {
["event"] = "SPELL_CAST_START",
["source"] = "奥术抢劫者",
["npcID"] = 196694,
},
[209404] = {
["event"] = "SPELL_CAST_START",
["source"] = "暮色卫队奥术师",
["npcID"] = 104247,
},
[378818] = {
["event"] = "SPELL_CAST_START",
["source"] = "卡拉希奇术师",
["npcID"] = 192788,
},
[389056] = {
["encounterName"] = "看护者伊里度斯",
["source"] = "看护者伊里度斯",
["npcID"] = 189719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[374724] = {
["event"] = "SPELL_CAST_START",
["source"] = "召焰者艾米",
["npcID"] = 190368,
},
[453553] = {
["source"] = "焦灼散播者",
["event"] = "SPELL_CAST_START",
["npcID"] = 220267,
},
[421817] = {
["encounterName"] = "布雷炙孔",
["source"] = "布雷炙孔",
["encounterID"] = 2826,
["event"] = "SPELL_CAST_START",
["npcID"] = 208743,
},
[414652] = {
["encounterName"] = "伊律迪孔",
["source"] = "伊律迪孔",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[404415] = {
["event"] = "SPELL_CAST_START",
["source"] = "监工赛姆拉",
["npcID"] = 200186,
},
[458675] = {
["source"] = "觉醒的巨像",
["event"] = "SPELL_CAST_START",
["npcID"] = 225898,
},
[192003] = {
["encounterName"] = "瑟芬崔斯克",
["source"] = "烈焰多头蛇子嗣",
["npcID"] = 97259,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1813,
},
[432059] = {
["event"] = "SPELL_CAST_START",
["source"] = "曳焰地卜师",
["npcID"] = 212528,
},
[8873] = {
["source"] = "灼鳞幼龙",
["event"] = "SPELL_CAST_START",
["npcID"] = 23687,
},
[372683] = {
["event"] = "SPELL_CAST_START",
["source"] = "注能龙崽",
["npcID"] = 187894,
},
[426943] = {
["encounterName"] = "黑暗之主",
["source"] = "黑暗之主",
["encounterID"] = 2788,
["event"] = "SPELL_CAST_START",
["npcID"] = 208747,
},
[378827] = {
["event"] = "SPELL_CAST_START",
["source"] = "卡拉希抢夺者",
["npcID"] = 192786,
},
[192005] = {
["encounterName"] = "瑟芬崔斯克",
["source"] = "奥术多头蛇子嗣",
["npcID"] = 97260,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1813,
},
[376780] = {
["encounterName"] = "督军莎尔佳",
["source"] = "督军莎尔佳",
["npcID"] = 189901,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2611,
},
[448443] = {
["encounterName"] = "蛛网将军阿贝纳尔",
["source"] = "蛛网将军阿贝纳尔",
["encounterID"] = 2877,
["event"] = "SPELL_CAST_START",
["npcID"] = 221896,
},
[452539] = {
["source"] = "熔炉恐魔",
["event"] = "SPELL_CAST_START",
["npcID"] = 220271,
},
[42131] = {
["event"] = "SPELL_CAST_START",
["source"] = "卫兵莱斯特",
["npcID"] = 4973,
},
[374735] = {
["event"] = "SPELL_CAST_START",
["source"] = "召焰者艾米",
["npcID"] = 190368,
},
[13736] = {
["isChanneled"] = true,
["source"] = "德雷克塔尔",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11946,
},
[407496] = {
["encounterName"] = "鳞长萨卡雷斯",
["source"] = "萨卡雷斯",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[457660] = {
["source"] = "回溯恩诺姆斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 225274,
},
[201733] = {
["encounterName"] = "库塔洛斯·拉文凯斯",
["source"] = "丹塔利纳克斯",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[388046] = {
["event"] = "SPELL_CAST_START",
["source"] = "臭息",
["npcID"] = 187033,
},
[458685] = {
["source"] = "莫斯艾兹克",
["event"] = "SPELL_CAST_START",
["npcID"] = 206203,
},
[391118] = {
["event"] = "SPELL_CAST_START",
["source"] = "刃鳞副官",
["npcID"] = 191739,
},
[424903] = {
["encounterName"] = "E.D.N.A.",
["source"] = "E.D.N.A",
["encounterID"] = 2854,
["event"] = "SPELL_CAST_START",
["npcID"] = 210108,
},
[462782] = {
["event"] = "SPELL_CAST_START",
["source"] = "出故障的防御炮台",
["npcID"] = 229678,
},
[378835] = {
["source"] = "蕨皮掷腐者",
["event"] = "SPELL_CAST_START",
["npcID"] = 186362,
},
[384978] = {
["encounterName"] = "安布雷斯库",
["source"] = "安布雷斯库",
["npcID"] = 186738,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2584,
},
[209413] = {
["event"] = "SPELL_CAST_START",
["source"] = "构造体卫兵",
["npcID"] = 104270,
},
[400335] = {
["event"] = "SPELL_CAST_START",
["source"] = "监工赛姆拉",
["npcID"] = 200186,
},
[401361] = {
["source"] = "可怖防御者",
["event"] = "SPELL_CAST_START",
["npcID"] = 203842,
},
[407504] = {
["encounterName"] = "米罗克",
["source"] = "米罗克",
["npcID"] = 198999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[434122] = {
["event"] = "SPELL_CAST_START",
["source"] = "扬升新兵",
["npcID"] = 216326,
},
[406481] = {
["encounterName"] = "米罗克",
["source"] = "米罗克",
["npcID"] = 198999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[441289] = {
["encounterName"] = "凝结聚合体",
["source"] = "凝结聚合体",
["npcID"] = 216320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2905,
},
[440266] = {
["source"] = "暮生黑暗犬",
["event"] = "SPELL_CAST_START",
["npcID"] = 229170,
},
[446409] = {
["source"] = "被惊扰的海藻",
["event"] = "SPELL_CAST_START",
["npcID"] = 215702,
},
[435148] = {
["source"] = "复活的步兵",
["event"] = "SPELL_CAST_START",
["npcID"] = 212835,
},
[211464] = {
["event"] = "SPELL_CAST_START",
["source"] = "邪缚执行者",
["npcID"] = 104278,
},
[207881] = {
["encounterName"] = "塔丽克萨·火冠",
["event"] = "SPELL_CAST_START",
["source"] = "塔丽克萨·火冠",
["npcID"] = 104217,
},
[372701] = {
["encounterName"] = "哨兵塔隆达丝",
["source"] = "哨兵塔隆达丝",
["npcID"] = 184124,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2557,
},
[386012] = {
["source"] = "唤雷者博鲁",
["event"] = "SPELL_CAST_START",
["npcID"] = 194317,
},
[388060] = {
["event"] = "SPELL_CAST_START",
["source"] = "臭息",
["npcID"] = 187033,
},
[450509] = {
["source"] = "蛛魔队长",
["event"] = "SPELL_CAST_START",
["npcID"] = 216584,
},
[378847] = {
["event"] = "SPELL_CAST_START",
["source"] = "卡拉希碎脊者",
["npcID"] = 192787,
},
[447439] = {
["encounterName"] = "戴尔克莱上尉",
["source"] = "戴尔克莱上尉",
["encounterID"] = 2847,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207946,
},
[389086] = {
["event"] = "SPELL_CAST_START",
["source"] = "狩猎的獒犬",
["npcID"] = 193741,
},
[386015] = {
["source"] = "拜荒雷语者",
["event"] = "SPELL_CAST_START",
["npcID"] = 194894,
},
[387039] = {
["source"] = "诺库德蛮兵",
["event"] = "SPELL_CAST_START",
["npcID"] = 187299,
},
[196111] = {
["event"] = "SPELL_CAST_START",
["source"] = "逐潮蟹",
["npcID"] = 91793,
},
[390111] = {
["encounterName"] = "不屈者卡金",
["source"] = "不屈者卡金",
["npcID"] = 189727,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2617,
},
[436180] = {
["source"] = "狂放雷霆元素",
["event"] = "SPELL_CAST_START",
["npcID"] = 222888,
},
[194064] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "邪母",
["npcID"] = 98533,
},
[391136] = {
["event"] = "SPELL_CAST_START",
["source"] = "龙人破坏者",
["npcID"] = 187240,
},
[373733] = {
["encounterName"] = "查尔加斯，龙鳞之灾",
["source"] = "查尔加斯，龙鳞之灾",
["npcID"] = 189340,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2613,
},
[427992] = {
["source"] = "梦境守护者",
["event"] = "SPELL_CAST_START",
["npcID"] = 210423,
},
[372711] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "蕨皮塑形者",
["npcID"] = 186220,
},
[462802] = {
["source"] = "被腐蚀的机械师",
["event"] = "SPELL_CAST_START",
["npcID"] = 229695,
},
[211470] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗影女妖",
["npcID"] = 104300,
},
[387045] = {
["event"] = "SPELL_CAST_START",
["source"] = "监工赛姆拉",
["npcID"] = 200186,
},
[451543] = {
["event"] = "SPELL_CAST_START",
["source"] = "高耸虚居居民",
["npcID"] = 219983,
},
[444377] = {
["source"] = "回溯灰熊",
["event"] = "SPELL_CAST_START",
["npcID"] = 226195,
},
[461781] = {
["source"] = "诺克托努斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 216964,
},
[386024] = {
["source"] = "拜荒雷语者",
["event"] = "SPELL_CAST_START",
["npcID"] = 194894,
},
[376811] = {
["encounterName"] = "树口",
["source"] = "树口",
["npcID"] = 186120,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2568,
},
[435165] = {
["source"] = "布朗派克爵士",
["event"] = "SPELL_CAST_START",
["npcID"] = 217658,
},
[387049] = {
["event"] = "SPELL_CAST_START",
["source"] = "贪婪的始祖幼龙",
["npcID"] = 193145,
},
[401382] = {
["event"] = "SPELL_CAST_START",
["source"] = "过去的自己",
["npcID"] = 185800,
},
[386026] = {
["source"] = "不稳定的狂风",
["event"] = "SPELL_CAST_START",
["npcID"] = 194895,
},
[374765] = {
["event"] = "SPELL_CAST_START",
["source"] = "进食的秃鹫",
["npcID"] = 190960,
},
[401383] = {
["encounterName"] = "鳞长萨卡雷斯",
["source"] = "萨卡雷斯",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[373742] = {
["encounterName"] = "查尔加斯，龙鳞之灾",
["source"] = "查尔加斯，龙鳞之灾",
["npcID"] = 189340,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2613,
},
[461785] = {
["source"] = "诺克托努斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 216964,
},
[372719] = {
["encounterName"] = "哨兵塔隆达丝",
["source"] = "哨兵塔隆达丝",
["npcID"] = 184124,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2557,
},
[386028] = {
["source"] = "拜荒雷兽",
["event"] = "SPELL_CAST_START",
["npcID"] = 195696,
},
[404456] = {
["encounterName"] = "鳞长萨卡雷斯",
["source"] = "萨卡雷斯",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[385005] = {
["event"] = "SPELL_CAST_START",
["source"] = "顶石苦力",
["npcID"] = 105636,
},
[440288] = {
["source"] = "暮生黑暗犬",
["event"] = "SPELL_CAST_START",
["npcID"] = 229170,
},
[430051] = {
["encounterName"] = "火光之龙菲莱克",
["source"] = "尖叫之魂",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 214608,
},
[288774] = {
["isChanneled"] = true,
["source"] = "失控的晶塔",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229739,
},
[443363] = {
["event"] = "SPELL_CAST_START",
["source"] = "群聚的喃沙者",
["npcID"] = 215360,
},
[458720] = {
["source"] = "觉醒的熔火之怒",
["event"] = "SPELL_CAST_START",
["npcID"] = 225896,
},
[377844] = {
["encounterName"] = "劈爪的战团",
["source"] = "莉拉·劈爪",
["npcID"] = 186122,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[445412] = {
["source"] = "巨硕螃蟹",
["event"] = "SPELL_CAST_START",
["npcID"] = 224589,
},
[409581] = {
["event"] = "SPELL_CAST_START",
["source"] = "黑暗低语",
["npcID"] = 203806,
},
[211477] = {
["event"] = "SPELL_CAST_START",
["source"] = "军团猎犬",
["npcID"] = 104277,
},
[448485] = {
["source"] = "守卫队长苏雷曼",
["event"] = "SPELL_CAST_START",
["npcID"] = 212826,
},
[199193] = {
["encounterName"] = "库塔洛斯·拉文凯斯",
["source"] = "丹塔利纳克斯",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[118552] = {
["event"] = "SPELL_CAST_START",
["source"] = "魔古山藏秘者",
["npcID"] = 61131,
},
[420846] = {
["encounterName"] = "尼穆威，轮回编织者",
["source"] = "尼穆威",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 206172,
},
[372730] = {
["event"] = "SPELL_CAST_START",
["source"] = "原始主宰",
["npcID"] = 188244,
},
[374778] = {
["event"] = "SPELL_CAST_START",
["source"] = "魔馆守卫",
["npcID"] = 190510,
},
[189469] = {
["event"] = "SPELL_CAST_START",
["source"] = "复仇之魂",
["npcID"] = 100364,
},
[376827] = {
["encounterName"] = "巴拉卡可汗",
["source"] = "巴拉卡可汗",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[406516] = {
["encounterName"] = "狱铸者卡扎拉",
["source"] = "狱铸者卡扎拉",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[436205] = {
["event"] = "SPELL_CAST_START",
["source"] = "不稳定的测试对象",
["npcID"] = 216328,
},
["358320"] = {
["npcID"] = 180162,
},
[376829] = {
["encounterName"] = "巴拉卡可汗",
["source"] = "巴拉卡可汗",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[387067] = {
["event"] = "SPELL_CAST_START",
["source"] = "奥术构造体",
["npcID"] = 186740,
},
[372735] = {
["event"] = "SPELL_CAST_START",
["source"] = "闪霜塑地者",
["npcID"] = 187969,
},
[225814] = {
["event"] = "SPELL_CAST_START",
["source"] = "刃舞者伊莲娜",
["npcID"] = 96657,
},
[432113] = {
["source"] = "主宰",
["event"] = "SPELL_CAST_START",
["npcID"] = 228575,
},
[404472] = {
["encounterName"] = "被遗忘的实验体",
["source"] = "奈尔迪丝",
["npcID"] = 200912,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[462826] = {
["source"] = "爆破炸弹机器人",
["event"] = "SPELL_CAST_START",
["npcID"] = 229706,
},
[428019] = {
["source"] = "皇家点芯者",
["event"] = "SPELL_CAST_START",
["npcID"] = 210812,
},
[195103] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "游荡的硬壳龟",
["npcID"] = 91785,
},
[432116] = {
["event"] = "SPELL_CAST_START",
["source"] = "烛爪骑士",
["npcID"] = 213833,
},
[196127] = {
["event"] = "SPELL_CAST_START",
["source"] = "玛拉纳沙地行者",
["npcID"] = 91790,
},
[385024] = {
["event"] = "SPELL_CAST_START",
["source"] = "水晶钳螈主母",
["npcID"] = 205078,
},
[432117] = {
["encounterName"] = "收割者吉卡塔尔",
["source"] = "收割者吉卡塔尔",
["npcID"] = 215407,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2901,
},
[420856] = {
["encounterName"] = "梦境议会",
["source"] = "艾尔雯",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208365,
},
[428023] = {
["source"] = "梦境守护者",
["event"] = "SPELL_CAST_START",
["npcID"] = 210423,
},
[449522] = {
["source"] = "工虫劫持者",
["event"] = "SPELL_CAST_START",
["npcID"] = 219655,
},
[450546] = {
["source"] = "蛛魔队长",
["event"] = "SPELL_CAST_START",
["npcID"] = 216584,
},
[411644] = {
["event"] = "SPELL_CAST_START",
["source"] = "迷时猎潮者",
["npcID"] = 205365,
},
[427001] = {
["encounterName"] = "阿努布伊卡基",
["source"] = "阿努布伊卡基",
["encounterID"] = 2838,
["event"] = "SPELL_CAST_START",
["npcID"] = 211089,
},
[432120] = {
["source"] = "主宰",
["event"] = "SPELL_CAST_START",
["npcID"] = 228575,
},
[372743] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "闪霜织寒者",
["npcID"] = 188067,
},
[50456] = {
["source"] = "闪电使者西亚斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 28018,
},
[285725] = {
["encounterName"] = "吉安娜·普罗德摩尔",
["source"] = "库尔提拉斯水兵",
["encounterID"] = 2281,
["event"] = "SPELL_CAST_START",
["npcID"] = 148120,
},
[385029] = {
["encounterName"] = "肠击",
["source"] = "裂肉秃鹫",
["npcID"] = 186246,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[6358] = {
["event"] = "SPELL_CAST_START",
["source"] = "布罗利萨",
["npcID"] = 1863,
},
[407552] = {
["encounterName"] = "被遗忘的实验体",
["source"] = "里翁苏斯",
["npcID"] = 200918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[408576] = {
["encounterName"] = "被遗忘的实验体",
["source"] = "里翁苏斯",
["npcID"] = 200918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[369674] = {
["event"] = "SPELL_CAST_START",
["source"] = "石窟地占师",
["npcID"] = 184022,
},
[284703] = {
["source"] = "马斯图斯·雪息",
["event"] = "SPELL_CAST_START",
["npcID"] = 150746,
},
[410625] = {
["encounterName"] = "鳞长萨卡雷斯",
["source"] = "萨卡雷斯",
["npcID"] = 201754,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2685,
},
[403459] = {
["encounterName"] = "融合体密室",
["source"] = "暗影精华",
["npcID"] = 201774,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[424958] = {
["encounterName"] = "雷卫戈伦",
["source"] = "雷卫戈伦",
["encounterID"] = 2861,
["event"] = "SPELL_CAST_START",
["npcID"] = 207205,
},
[432125] = {
["source"] = "宠物鹿壳虫",
["event"] = "SPELL_CAST_START",
["npcID"] = 223458,
},
[369677] = {
["encounterName"] = "失落的矮人",
["source"] = "奥拉夫",
["npcID"] = 184580,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2555,
},
[432127] = {
["source"] = "苏雷吉攻城领主",
["event"] = "SPELL_CAST_START",
["npcID"] = 215599,
},
[386059] = {
["event"] = "SPELL_CAST_START",
["source"] = "巴斯律孔",
["npcID"] = 193535,
},
[207906] = {
["encounterName"] = "塔丽克萨·火冠",
["source"] = "塔丽克萨·火冠",
["npcID"] = 104217,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1869,
},
[458746] = {
["source"] = "旧忆巫妖王",
["event"] = "SPELL_CAST_START",
["npcID"] = 224157,
},
[427011] = {
["encounterName"] = "黑暗之主",
["source"] = "黑暗之主",
["encounterID"] = 2788,
["event"] = "SPELL_CAST_START",
["npcID"] = 208747,
},
[432130] = {
["encounterName"] = "收割者吉卡塔尔",
["source"] = "收割者吉卡塔尔",
["npcID"] = 215407,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2901,
},
[384014] = {
["encounterName"] = "看护者伊里度斯",
["source"] = "看护者伊里度斯",
["npcID"] = 189719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[386063] = {
["encounterName"] = "提拉和马鲁克",
["source"] = "马鲁克",
["npcID"] = 186338,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[456702] = {
["source"] = "暴乱枯败者",
["event"] = "SPELL_CAST_START",
["npcID"] = 220273,
},
[396302] = {
["event"] = "SPELL_CAST_START",
["source"] = "吉欧瑟姆斯",
["npcID"] = 217416,
},
[401421] = {
["encounterName"] = "克罗妮卡",
["source"] = "克罗妮卡",
["encounterID"] = 2666,
["event"] = "SPELL_CAST_START",
["npcID"] = 198995,
},
[409612] = {
["event"] = "SPELL_CAST_START",
["source"] = "黑暗低语",
["npcID"] = 203806,
},
[432135] = {
["event"] = "SPELL_CAST_START",
["source"] = "入侵的狗头人",
["npcID"] = 216157,
},
[421898] = {
["encounterName"] = "瘤根",
["source"] = "瘤根",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[443397] = {
["event"] = "SPELL_CAST_START",
["source"] = "苏雷吉剧毒之刃",
["npcID"] = 220193,
},
[387091] = {
["source"] = "迷时的追日者",
["event"] = "SPELL_CAST_START",
["npcID"] = 187239,
},
[441351] = {
["event"] = "SPELL_CAST_START",
["source"] = "驯蜂者",
["npcID"] = 210264,
},
[425995] = {
["source"] = "梦境守护者",
["event"] = "SPELL_CAST_START",
["npcID"] = 210423,
},
[375834] = {
["encounterName"] = "巢穴守护者迪乌尔娜",
["source"] = "巢穴守护者迪乌尔娜",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[446474] = {
["event"] = "SPELL_CAST_START",
["source"] = "凝结的蜡油巨人",
["npcID"] = 223206,
},
[118049] = {
["encounterName"] = "先王之魂",
["source"] = "迅弓之速不台",
["npcID"] = 60710,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1436,
},
[432142] = {
["source"] = "蛛魔织战者",
["event"] = "SPELL_CAST_START",
["npcID"] = 222731,
},
[420881] = {
["source"] = "扎卡利灰烬看守",
["event"] = "SPELL_CAST_START",
["npcID"] = 208659,
},
[193069] = {
["event"] = "SPELL_CAST_START",
["source"] = "魔誓寄生者",
["npcID"] = 96587,
},
[462856] = {
["source"] = "空值机器人",
["event"] = "SPELL_CAST_START",
["npcID"] = 229729,
},
[427025] = {
["encounterName"] = "黑暗之主",
["source"] = "黑暗之主",
["encounterID"] = 2788,
["event"] = "SPELL_CAST_START",
["npcID"] = 208747,
},
[412693] = {
["source"] = "扎卡利碎梦者",
["event"] = "SPELL_CAST_START",
["npcID"] = 211057,
},
[446477] = {
["event"] = "SPELL_CAST_START",
["source"] = "深水淤泥",
["npcID"] = 216515,
},
[462859] = {
["source"] = "热诚的神射手",
["event"] = "SPELL_CAST_START",
["npcID"] = 206694,
},
[461836] = {
["event"] = "SPELL_CAST_START",
["source"] = "曳焰飞烛者",
["npcID"] = 219341,
},
[376865] = {
["encounterName"] = "巴拉卡可汗",
["source"] = "巴拉卡可汗",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[448528] = {
["source"] = "喷火引线看护者",
["event"] = "SPELL_CAST_START",
["npcID"] = 211777,
},
[445457] = {
["encounterName"] = "斯卡丁巨怪",
["source"] = "虚空石畸体",
["encounterID"] = 2836,
["event"] = "SPELL_CAST_START",
["npcID"] = 207207,
},
[415769] = {
["source"] = "凝结时光",
["event"] = "SPELL_CAST_START",
["npcID"] = 206140,
},
[442387] = {
["source"] = "蛛魔织战者",
["event"] = "SPELL_CAST_START",
["npcID"] = 222731,
},
[415770] = {
["source"] = "凝结时光",
["event"] = "SPELL_CAST_START",
["npcID"] = 206140,
},
[196144] = {
["event"] = "SPELL_CAST_START",
["source"] = "玛拉纳沙地行者",
["npcID"] = 91790,
},
[446483] = {
["event"] = "SPELL_CAST_START",
["source"] = "深水淤泥",
["npcID"] = 216515,
},
[193585] = {
["event"] = "SPELL_CAST_START",
["source"] = "缚石捕兽者",
["npcID"] = 102232,
},
[412700] = {
["source"] = "扎卡利碎梦者",
["event"] = "SPELL_CAST_START",
["npcID"] = 211057,
},
[369703] = {
["encounterName"] = "布罗马奇",
["source"] = "布罗马奇",
["npcID"] = 184018,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2556,
},
[192050] = {
["encounterName"] = "瑟芬崔斯克",
["source"] = "瑟芬崔斯克",
["npcID"] = 91808,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1813,
},
[458770] = {
["source"] = "觉醒的硫磺破坏者",
["event"] = "SPELL_CAST_START",
["npcID"] = 225894,
},
[374823] = {
["event"] = "SPELL_CAST_START",
["source"] = "暴风使者西拉兹",
["npcID"] = 190370,
},
[461842] = {
["encounterName"] = "凝结聚合体",
["source"] = "凝结聚合体",
["npcID"] = 216320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2905,
},
[451605] = {
["encounterName"] = "隐修院长穆普雷",
["source"] = "隐修院长穆普雷",
["encounterID"] = 2848,
["event"] = "SPELL_CAST_START",
["npcID"] = 207940,
},
[419870] = {
["encounterName"] = "凯里欧斯",
["source"] = "凯里欧斯",
["encounterID"] = 2816,
["event"] = "SPELL_CAST_START",
["npcID"] = 209230,
},
[385063] = {
["event"] = "SPELL_CAST_START",
["source"] = "拜荒织烬者",
["npcID"] = 190207,
},
[432156] = {
["event"] = "SPELL_CAST_START",
["source"] = "蜡尾骑兵",
["npcID"] = 213095,
},
[420895] = {
["event"] = "SPELL_CAST_START",
["source"] = "奥罗斯托",
["npcID"] = 209574,
},
[430109] = {
["source"] = "被诅咒的雷霆使",
["event"] = "SPELL_CAST_START",
["npcID"] = 207198,
},
[373803] = {
["encounterName"] = "梅莉杜莎·寒妆",
["source"] = "注能龙崽",
["npcID"] = 189893,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[409635] = {
["encounterName"] = "伊律迪孔",
["source"] = "伊律迪孔",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[396327] = {
["source"] = "格拉西亚斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 199028,
},
[188470] = {
["source"] = "毒性幼苗",
["event"] = "SPELL_CAST_START",
["npcID"] = 211410,
},
[377900] = {
["source"] = "扎卡利地狱火之刃",
["event"] = "SPELL_CAST_START",
["npcID"] = 199865,
},
[406566] = {
["event"] = "SPELL_CAST_START",
["source"] = "原始熔岩元素",
["npcID"] = 202264,
},
[408614] = {
["event"] = "SPELL_CAST_START",
["source"] = "碎裂湮灭者",
["npcID"] = 198869,
},
[385068] = {
["encounterName"] = "莱萨杰丝，噬雷之龙",
["source"] = "巨型风魔",
["npcID"] = 197145,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[428066] = {
["source"] = "职阶监督者",
["event"] = "SPELL_CAST_START",
["npcID"] = 211121,
},
[429091] = {
["source"] = "高阶牧师艾姆雅",
["event"] = "SPELL_CAST_START",
["npcID"] = 212827,
},
[204852] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "梦魇住民",
["npcID"] = 101991,
},
[444449] = {
["source"] = "热诚的神射手",
["event"] = "SPELL_CAST_START",
["npcID"] = 206694,
},
[449568] = {
["encounterName"] = "蛛网将军阿贝纳尔",
["source"] = "蛛网将军阿贝纳尔",
["encounterID"] = 2877,
["event"] = "SPELL_CAST_START",
["npcID"] = 221896,
},
[456735] = {
["event"] = "SPELL_CAST_START",
["source"] = "阿奎利恩",
["npcID"] = 220274,
},
[443427] = {
["event"] = "SPELL_CAST_START",
["source"] = "苏雷吉缚丝者",
["npcID"] = 220195,
},
[407596] = {
["encounterName"] = "长老莱修克",
["source"] = "莱修克",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[408620] = {
["encounterName"] = "扎卡利突袭",
["source"] = "黑曜卫士",
["npcID"] = 200836,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[387122] = {
["event"] = "SPELL_CAST_START",
["source"] = "奥术构造体",
["npcID"] = 186740,
},
[441381] = {
["encounterName"] = "女王之牙",
["source"] = "恩克斯",
["npcID"] = 216648,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2908,
},
[385075] = {
["encounterName"] = "安布雷斯库",
["source"] = "安布雷斯库",
["npcID"] = 186738,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2584,
},
[195129] = {
["event"] = "SPELL_CAST_START",
["source"] = "积怨碾压者",
["npcID"] = 91782,
},
[420907] = {
["encounterName"] = "尼穆威，轮回编织者",
["source"] = "尼穆威",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 206172,
},
[443430] = {
["event"] = "SPELL_CAST_START",
["source"] = "苏雷吉缚丝者",
["npcID"] = 220195,
},
[374839] = {
["encounterName"] = "熔炉主管戈雷克",
["source"] = "熔炉主管戈雷克",
["npcID"] = 189478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2612,
},
[387125] = {
["source"] = "拜荒雷兽",
["event"] = "SPELL_CAST_START",
["npcID"] = 195696,
},
[441384] = {
["encounterName"] = "女王之牙",
["source"] = "维克斯",
["npcID"] = 216649,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2908,
},
[372793] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "原始主宰",
["npcID"] = 188244,
},
[377912] = {
["event"] = "SPELL_CAST_START",
["source"] = "守护者哨兵",
["npcID"] = 192680,
},
[372794] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "亵渎者德拉加尔",
["npcID"] = 187897,
},
[443433] = {
["event"] = "SPELL_CAST_START",
["source"] = "安苏雷克的传令官",
["npcID"] = 220196,
},
[387127] = {
["event"] = "SPELL_CAST_START",
["source"] = "拜荒雷兽",
["npcID"] = 195696,
},
[376892] = {
["encounterName"] = "巴拉卡可汗",
["source"] = "巴拉卡可汗",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[422961] = {
["encounterName"] = "残虐者艾姬拉",
["source"] = "残虐者艾姬拉",
["encounterID"] = 2709,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 200926,
},
[456745] = {
["source"] = "猩红织亡者",
["event"] = "SPELL_CAST_START",
["npcID"] = 222692,
},
[452651] = {
["event"] = "SPELL_CAST_START",
["source"] = "食誓者",
["npcID"] = 206844,
},
[375870] = {
["encounterName"] = "巢穴守护者迪乌尔娜",
["source"] = "巢穴守护者迪乌尔娜",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[389179] = {
["encounterName"] = "看护者伊里度斯",
["source"] = "看护者伊里度斯",
["npcID"] = 189719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[375871] = {
["encounterName"] = "巢穴守护者迪乌尔娜",
["source"] = "巢穴守护者迪乌尔娜",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[422964] = {
["source"] = "奥罗斯托",
["event"] = "SPELL_CAST_START",
["npcID"] = 209574,
},
[456748] = {
["source"] = "黑暗劝导者",
["event"] = "SPELL_CAST_START",
["npcID"] = 224898,
},
[432179] = {
["encounterName"] = "酿造大师阿德里尔",
["source"] = "酿造大师阿德里尔",
["npcID"] = 210271,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[429108] = {
["encounterName"] = "尼穆威，轮回编织者",
["source"] = "轮回守望者",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 209800,
},
[462892] = {
["source"] = "失控的晶塔",
["event"] = "SPELL_CAST_START",
["npcID"] = 229739,
},
[387135] = {
["source"] = "拜荒弧光之刃",
["event"] = "SPELL_CAST_START",
["npcID"] = 194898,
},
[429109] = {
["source"] = "炉铸愈疗者",
["event"] = "SPELL_CAST_START",
["npcID"] = 213338,
},
[398397] = {
["source"] = "啪嗒作响的岩浆爪",
["event"] = "SPELL_CAST_START",
["npcID"] = 205809,
},
[428086] = {
["encounterName"] = "代言人夏多克朗",
["source"] = "代言人夏多克朗",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[429110] = {
["source"] = "炉铸愈疗者",
["event"] = "SPELL_CAST_START",
["npcID"] = 213338,
},
[377923] = {
["event"] = "SPELL_CAST_START",
["source"] = "原始熔岩元素",
["npcID"] = 186438,
},
[440372] = {
["source"] = "猎暗地道蛛",
["event"] = "SPELL_CAST_START",
["npcID"] = 216249,
},
[428089] = {
["source"] = "低贱的鼹鼠倌",
["event"] = "SPELL_CAST_START",
["npcID"] = 210818,
},
[200256] = {
["event"] = "SPELL_CAST_START",
["source"] = "奥术仆从",
["npcID"] = 101549,
},
[200768] = {
["event"] = "SPELL_CAST_START",
["source"] = "发狂的锋喙狮鹫",
["npcID"] = 95766,
},
[372808] = {
["encounterName"] = "梅莉杜莎·寒妆",
["source"] = "梅莉杜莎·寒妆",
["npcID"] = 188252,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[440376] = {
["source"] = "加恩丹德",
["event"] = "SPELL_CAST_START",
["npcID"] = 216561,
},
[420925] = {
["event"] = "SPELL_CAST_START",
["source"] = "奥罗斯托",
["npcID"] = 209574,
},
[446519] = {
["event"] = "SPELL_CAST_START",
["source"] = "半影岩角麋",
["npcID"] = 227933,
},
[212031] = {
["event"] = "SPELL_CAST_START",
["source"] = "被束缚的能量",
["npcID"] = 105705,
},
[370764] = {
["event"] = "SPELL_CAST_START",
["source"] = "水晶之怒",
["npcID"] = 187160,
},
[198723] = {
["event"] = "SPELL_CAST_START",
["source"] = "腐心树妖",
["npcID"] = 99358,
},
[387145] = {
["source"] = "唤雷者阿琳佳",
["event"] = "SPELL_CAST_START",
["npcID"] = 195265,
},
[461879] = {
["event"] = "SPELL_CAST_START",
["source"] = "流蜡液球",
["npcID"] = 213873,
},
[397383] = {
["encounterName"] = "扎卡利突袭",
["source"] = "岩浆秘士",
["npcID"] = 199703,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[193093] = {
["encounterName"] = "深须国王",
["source"] = "深须国王",
["npcID"] = 91797,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1812,
},
[370766] = {
["event"] = "SPELL_CAST_START",
["source"] = "水晶痛击者",
["npcID"] = 187139,
},
[417860] = {
["source"] = "狂野的幽爪熊",
["event"] = "SPELL_CAST_START",
["npcID"] = 211401,
},
[425027] = {
["source"] = "大地注能的魔像",
["event"] = "SPELL_CAST_START",
["npcID"] = 210109,
},
[397386] = {
["encounterName"] = "扎卡利突袭",
["source"] = "岩浆秘士",
["npcID"] = 199703,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[420933] = {
["encounterName"] = "沃尔科罗斯",
["source"] = "沃尔科罗斯",
["encounterID"] = 2737,
["event"] = "SPELL_CAST_START",
["npcID"] = 208478,
},
[401482] = {
["encounterName"] = "永恒守护者提尔",
["source"] = "永恒守护者提尔",
["npcID"] = 198998,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2670,
},
[374865] = {
["source"] = "平原石牙兽",
["event"] = "SPELL_CAST_START",
["npcID"] = 193384,
},
[387151] = {
["encounterName"] = "泰拉什·灰翼",
["source"] = "泰拉什·灰翼",
["npcID"] = 186737,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2583,
},
[425030] = {
["event"] = "SPELL_CAST_START",
["source"] = "扎卡利主宰",
["npcID"] = 210172,
},
[275563] = {
["source"] = "饥影牛蛙",
["event"] = "SPELL_CAST_START",
["npcID"] = 214406,
},
[275564] = {
["source"] = "饥影牛蛙",
["event"] = "SPELL_CAST_START",
["npcID"] = 214406,
},
[432198] = {
["encounterName"] = "酿造大师阿德里尔",
["source"] = "酿造大师阿德里尔",
["npcID"] = 210271,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[369750] = {
["event"] = "SPELL_CAST_START",
["source"] = "卡拉希剥鳞者",
["npcID"] = 187908,
},
[369751] = {
["source"] = "扎卡利锐眼者",
["event"] = "SPELL_CAST_START",
["npcID"] = 208660,
},
[450628] = {
["source"] = "军需官科拉泰特",
["event"] = "SPELL_CAST_START",
["npcID"] = 209801,
},
[397394] = {
["source"] = "诺库德雷霆之拳",
["event"] = "SPELL_CAST_START",
["npcID"] = 193373,
},
[383062] = {
["event"] = "SPELL_CAST_START",
["source"] = "腐朽老树",
["npcID"] = 189531,
},
[10733] = {
["event"] = "SPELL_CAST_START",
["source"] = "旧忆步行坦克",
["npcID"] = 213785,
},
[369754] = {
["encounterName"] = "布罗马奇",
["source"] = "布罗马奇",
["npcID"] = 184018,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2556,
},
[193611] = {
["encounterName"] = "积怨夫人",
["source"] = "积怨夫人",
["npcID"] = 91789,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1811,
},
[425037] = {
["source"] = "上古熔火恶犬",
["event"] = "SPELL_CAST_START",
["npcID"] = 210288,
},
[431180] = {
["event"] = "SPELL_CAST_START",
["source"] = "滑蜡者落耳",
["npcID"] = 213883,
},
[434252] = {
["event"] = "SPELL_CAST_START",
["source"] = "蛛魔搬运者",
["npcID"] = 217039,
},
[411730] = {
["event"] = "SPELL_CAST_START",
["source"] = "熔火猎犬",
["npcID"] = 205611,
},
[392280] = {
["event"] = "SPELL_CAST_START",
["source"] = "考尔迪兹",
["npcID"] = 197835,
},
[420947] = {
["encounterName"] = "梦境议会",
["source"] = "乌克托斯",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208363,
},
[421971] = {
["encounterName"] = "瘤根",
["source"] = "瘤根",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[377950] = {
["encounterName"] = "劈爪的战团",
["source"] = "狡诈图腾",
["npcID"] = 186125,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[393307] = {
["event"] = "SPELL_CAST_START",
["source"] = "火焰守卫",
["npcID"] = 192764,
},
[407640] = {
["encounterName"] = "融合体密室",
["source"] = "暗影精华",
["npcID"] = 201774,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[453709] = {
["source"] = "藻泽",
["event"] = "SPELL_CAST_START",
["npcID"] = 220287,
},
[389213] = {
["event"] = "SPELL_CAST_START",
["source"] = "火焰守卫",
["npcID"] = 192764,
},
[412761] = {
["encounterName"] = "火光之龙菲莱克",
["source"] = "菲莱克",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[401500] = {
["encounterName"] = "鳞长萨卡雷斯",
["source"] = "萨卡雷斯",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[411738] = {
["event"] = "SPELL_CAST_START",
["source"] = "莱修克",
["npcID"] = 201320,
},
[371812] = {
["event"] = "SPELL_CAST_START",
["source"] = "世界侵蚀者乌姆灵",
["npcID"] = 187366,
},
[425048] = {
["encounterName"] = "雷卫戈伦",
["source"] = "雷卫戈伦",
["encounterID"] = 2861,
["event"] = "SPELL_CAST_START",
["npcID"] = 207205,
},
[413787] = {
["event"] = "SPELL_CAST_START",
["source"] = "熵能之憎",
["npcID"] = 203809,
},
[209485] = {
["event"] = "SPELL_CAST_START",
["source"] = "奥术化身",
["npcID"] = 105704,
},
[374885] = {
["event"] = "SPELL_CAST_START",
["source"] = "星界侍从",
["npcID"] = 189555,
},
[376933] = {
["encounterName"] = "树口",
["source"] = "树口",
["npcID"] = 186120,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2568,
},
[283772] = {
["isChanneled"] = true,
["source"] = "雷西娅·加斯戴克",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 150744,
},
[376934] = {
["encounterName"] = "树口",
["source"] = "树口",
["npcID"] = 186120,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2568,
},
[430171] = {
["source"] = "漫游蜡烛",
["event"] = "SPELL_CAST_START",
["npcID"] = 208450,
},
[390245] = {
["source"] = "烬齿矛猎手",
["event"] = "SPELL_CAST_START",
["npcID"] = 188725,
},
[448599] = {
["isChanneled"] = true,
["source"] = "赫沃米克",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211591,
},
[463956] = {
["source"] = "岩浆蛇",
["event"] = "SPELL_CAST_START",
["npcID"] = 215770,
},
[425054] = {
["source"] = "扎卡利传送门守护者",
["event"] = "SPELL_CAST_START",
["npcID"] = 211756,
},
[443482] = {
["source"] = "影潮壁垒",
["event"] = "SPELL_CAST_START",
["npcID"] = 220886,
},
[411747] = {
["event"] = "SPELL_CAST_START",
["source"] = "扭曲的源质",
["npcID"] = 205628,
},
[400486] = {
["isChanneled"] = true,
["source"] = "扎卡利塑烬者",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 199824,
},
[61730] = {
["source"] = "冰原徒工",
["event"] = "SPELL_CAST_START",
["npcID"] = 26705,
},
[408677] = {
["event"] = "SPELL_CAST_START",
["source"] = "碎裂鳞卫",
["npcID"] = 198871,
},
[462936] = {
["source"] = "医疗机器人",
["event"] = "SPELL_CAST_START",
["npcID"] = 229769,
},
[452699] = {
["source"] = "苍郁巨兽",
["event"] = "SPELL_CAST_START",
["npcID"] = 215813,
},
[400488] = {
["isChanneled"] = true,
["source"] = "扎卡利塑烬者",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 199824,
},
[428130] = {
["source"] = "威拉恩·碎木",
["event"] = "SPELL_CAST_START",
["npcID"] = 207554,
},
[375919] = {
["source"] = "食死镰螳",
["event"] = "SPELL_CAST_START",
["npcID"] = 182394,
},
[373872] = {
["event"] = "SPELL_CAST_START",
["source"] = "巨型腐朽",
["npcID"] = 186227,
},
[430179] = {
["source"] = "被腐化的先知",
["event"] = "SPELL_CAST_START",
["npcID"] = 214439,
},
[436322] = {
["event"] = "SPELL_CAST_START",
["source"] = "阿提克",
["npcID"] = 217533,
},
[374898] = {
["event"] = "SPELL_CAST_START",
["source"] = "草蹄麝牛",
["npcID"] = 190905,
},
[425062] = {
["source"] = "扎卡利塑钢者",
["event"] = "SPELL_CAST_START",
["npcID"] = 210173,
},
[372851] = {
["encounterName"] = "梅莉杜莎·寒妆",
["source"] = "梅莉杜莎·寒妆",
["npcID"] = 188252,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[423015] = {
["encounterName"] = "布朗派克男爵",
["source"] = "布朗派克男爵",
["encounterID"] = 2835,
["event"] = "SPELL_CAST_START",
["npcID"] = 207939,
},
[411754] = {
["event"] = "SPELL_CAST_START",
["source"] = "导管护卫",
["npcID"] = 205478,
},
[385137] = {
["event"] = "SPELL_CAST_START",
["source"] = "巴斯律孔",
["npcID"] = 193535,
},
[390256] = {
["source"] = "碎裂劫掠者",
["event"] = "SPELL_CAST_START",
["npcID"] = 199374,
},
[411755] = {
["event"] = "SPELL_CAST_START",
["source"] = "导管护卫",
["npcID"] = 205478,
},
[375924] = {
["encounterName"] = "失落的矮人",
["source"] = "迅捷的埃瑞克",
["npcID"] = 184582,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2555,
},
[445541] = {
["encounterName"] = "机械大师",
["source"] = "代言人布洛克",
["encounterID"] = 2888,
["event"] = "SPELL_CAST_START",
["npcID"] = 213217,
},
[270481] = {
["source"] = "恶魔暴君",
["event"] = "SPELL_CAST_START",
["npcID"] = 135002,
},
[387189] = {
["source"] = "碎裂研究员",
["event"] = "SPELL_CAST_START",
["npcID"] = 199946,
},
[439401] = {
["encounterName"] = "大捻接师艾佐",
["source"] = "大捻接师艾佐",
["npcID"] = 216658,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2909,
},
[375929] = {
["encounterName"] = "巴拉卡可汗",
["source"] = "巴拉卡可汗",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[372858] = {
["encounterName"] = "柯姬雅·焰蹄",
["source"] = "柯姬雅·焰蹄",
["npcID"] = 189232,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2606,
},
[448616] = {
["source"] = "赫沃米克",
["event"] = "SPELL_CAST_START",
["npcID"] = 211591,
},
[449640] = {
["event"] = "SPELL_CAST_START",
["source"] = "癫狂的攻城轰炸者",
["npcID"] = 216044,
},
[369788] = {
["source"] = "卡拉希贾拉丁",
["event"] = "SPELL_CAST_START",
["npcID"] = 195032,
},
[385145] = {
["source"] = "迷时迅猛龙",
["event"] = "SPELL_CAST_START",
["npcID"] = 187256,
},
[411763] = {
["encounterName"] = "时空领主戴欧斯",
["source"] = "永恒守护者",
["npcID"] = 205212,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[443500] = {
["event"] = "SPELL_CAST_START",
["source"] = "皇家虫群卫士",
["npcID"] = 220197,
},
[448619] = {
["event"] = "SPELL_CAST_START",
["source"] = "粗心的酒花大地精",
["npcID"] = 223423,
},
[369791] = {
["encounterName"] = "失落的矮人",
["source"] = "迅捷的埃瑞克",
["npcID"] = 184582,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2555,
},
[372863] = {
["encounterName"] = "柯姬雅·焰蹄",
["source"] = "柯姬雅·焰蹄",
["npcID"] = 189232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[386173] = {
["encounterName"] = "维克萨姆斯",
["source"] = "维克萨姆斯",
["npcID"] = 194181,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2562,
},
[389245] = {
["source"] = "碎裂废墟追猎者",
["event"] = "SPELL_CAST_START",
["npcID"] = 199379,
},
[375937] = {
["encounterName"] = "巴拉卡可汗",
["source"] = "巴拉卡可汗",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[409721] = {
["event"] = "SPELL_CAST_START",
["source"] = "翼尉德兹兰",
["npcID"] = 202610,
},
[51879] = {
["source"] = "掘洞冰虫",
["event"] = "SPELL_CAST_START",
["npcID"] = 26467,
},
[428150] = {
["event"] = "SPELL_CAST_START",
["source"] = "高阶牧师艾姆雅",
["npcID"] = 212827,
},
[443507] = {
["event"] = "SPELL_CAST_START",
["source"] = "皇家虫群卫士",
["npcID"] = 220197,
},
[398463] = {
["source"] = "岩浆爆发者",
["event"] = "SPELL_CAST_START",
["npcID"] = 200801,
},
[193633] = {
["event"] = "SPELL_CAST_START",
["source"] = "复活的弓箭手",
["npcID"] = 98275,
},
[384132] = {
["encounterName"] = "青刃",
["source"] = "青刃",
["npcID"] = 186739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[389251] = {
["event"] = "SPELL_CAST_START",
["source"] = "摩尔拉什",
["npcID"] = 201549,
},
[375943] = {
["encounterName"] = "巴拉卡可汗",
["source"] = "巴拉卡可汗",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[377991] = {
["event"] = "SPELL_CAST_START",
["source"] = "守护者哨兵",
["npcID"] = 192680,
},
[453749] = {
["source"] = "藻泽",
["event"] = "SPELL_CAST_START",
["npcID"] = 220287,
},
[204896] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "血气地狱犬",
["npcID"] = 98813,
},
[373897] = {
["event"] = "SPELL_CAST_START",
["source"] = "腐朽老树",
["npcID"] = 189531,
},
[429180] = {
["source"] = "轮回守望者",
["event"] = "SPELL_CAST_START",
["npcID"] = 210518,
},
[465012] = {
["event"] = "SPELL_CAST_START",
["source"] = "魁梧的血卫",
["npcID"] = 216338,
},
[195172] = {
["event"] = "SPELL_CAST_START",
["source"] = "积怨碾压者",
["npcID"] = 91782,
},
[200291] = {
["event"] = "SPELL_CAST_START",
["source"] = "复活的斥候",
["npcID"] = 98691,
},
[152175] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "大地之灵",
["npcID"] = 69792,
},
[452730] = {
["source"] = "苍郁巨兽",
["event"] = "SPELL_CAST_START",
["npcID"] = 215813,
},
[375950] = {
["event"] = "SPELL_CAST_START",
["source"] = "拜荒唤冰者",
["npcID"] = 190377,
},
[412806] = {
["source"] = "复生的巨龙",
["event"] = "SPELL_CAST_START",
["npcID"] = 205804,
},
[403593] = {
["source"] = "岩浆爆发者",
["event"] = "SPELL_CAST_START",
["npcID"] = 200801,
},
[405641] = {
["encounterName"] = "融合体密室",
["source"] = "暗影烈焰融合体",
["npcID"] = 201934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[369811] = {
["event"] = "SPELL_CAST_START",
["source"] = "魁梧的狂战士",
["npcID"] = 184020,
},
[448640] = {
["source"] = "咒炉荣誉卫兵",
["event"] = "SPELL_CAST_START",
["npcID"] = 214264,
},
[417928] = {
["source"] = "野火珀爪彪",
["event"] = "SPELL_CAST_START",
["npcID"] = 207144,
},
[444546] = {
["encounterName"] = "隐修院长穆普雷",
["source"] = "隐修院长穆普雷",
["encounterID"] = 2848,
["event"] = "SPELL_CAST_START",
["npcID"] = 207940,
},
[378003] = {
["event"] = "SPELL_CAST_START",
["source"] = "守护者哨兵",
["npcID"] = 192680,
},
[192617] = {
["encounterName"] = "艾萨拉之怒",
["source"] = "艾萨拉之怒",
["npcID"] = 96028,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1814,
},
[455809] = {
["source"] = "乌兹格拉弗唤隙者",
["event"] = "SPELL_CAST_START",
["npcID"] = 215233,
},
[422026] = {
["encounterName"] = "瘤根",
["source"] = "瘤根",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[390290] = {
["event"] = "SPELL_CAST_START",
["source"] = "注能者萨莉亚",
["npcID"] = 190405,
},
[457858] = {
["event"] = "SPELL_CAST_START",
["source"] = "深晦魔阿泽里克斯",
["npcID"] = 218458,
},
[423051] = {
["encounterName"] = "布朗派克男爵",
["source"] = "布朗派克男爵",
["encounterID"] = 2835,
["event"] = "SPELL_CAST_START",
["npcID"] = 207939,
},
[436360] = {
["event"] = "SPELL_CAST_START",
["source"] = "晦幽织暗者",
["npcID"] = 216868,
},
[373912] = {
["encounterName"] = "腐朽主母怒眼",
["source"] = "腐朽主母怒眼",
["npcID"] = 186121,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2569,
},
[191595] = {
["event"] = "SPELL_CAST_START",
["source"] = "魔誓寄生者",
["npcID"] = 96587,
},
[409744] = {
["event"] = "SPELL_CAST_START",
["source"] = "谢戴赛索",
["npcID"] = 203411,
},
[369818] = {
["event"] = "SPELL_CAST_START",
["source"] = "魁梧的狂战士",
["npcID"] = 184020,
},
[409745] = {
["event"] = "SPELL_CAST_START",
["source"] = "谢戴赛索",
["npcID"] = 203411,
},
[455814] = {
["source"] = "元素裂隙",
["event"] = "SPELL_CAST_START",
["npcID"] = 217914,
},
[379033] = {
["event"] = "SPELL_CAST_START",
["source"] = "诺库德战獒",
["npcID"] = 190962,
},
[389271] = {
["event"] = "SPELL_CAST_START",
["source"] = "清水钳嘴龟",
["npcID"] = 192678,
},
[373915] = {
["encounterName"] = "腐朽主母怒眼",
["source"] = "腐朽主母怒眼",
["npcID"] = 186121,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2569,
},
[441483] = {
["source"] = "亡瓣之花",
["event"] = "SPELL_CAST_START",
["npcID"] = 206184,
},
[462983] = {
["source"] = "自动踏铁者",
["event"] = "SPELL_CAST_START",
["npcID"] = 229778,
},
[373917] = {
["encounterName"] = "腐朽主母怒眼",
["source"] = "腐朽主母怒眼",
["npcID"] = 186121,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2569,
},
[389274] = {
["source"] = "柯罗莱丝",
["event"] = "SPELL_CAST_START",
["npcID"] = 188180,
},
[369823] = {
["event"] = "SPELL_CAST_START",
["source"] = "恶毒的蜥蜴",
["npcID"] = 184023,
},
[411798] = {
["event"] = "SPELL_CAST_START",
["source"] = "渗流的淤泥",
["npcID"] = 205644,
},
[425107] = {
["event"] = "SPELL_CAST_START",
["source"] = "上古熔火恶犬",
["npcID"] = 211241,
},
[385181] = {
["encounterName"] = "吞喉巨蛙",
["source"] = "吞喉巨蛙",
["npcID"] = 189722,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2616,
},
[207979] = {
["encounterName"] = "塔丽克萨·火冠",
["source"] = "加兹沙尤",
["npcID"] = 104273,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1869,
},
[421013] = {
["encounterName"] = "瘤根",
["source"] = "瘤根",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[410776] = {
["event"] = "SPELL_CAST_START",
["source"] = "永恒保护者",
["npcID"] = 204658,
},
[201837] = {
["event"] = "SPELL_CAST_START",
["source"] = "污心召唤师",
["npcID"] = 99366,
},
[7992] = {
["source"] = "暗牙爬行者",
["event"] = "SPELL_CAST_START",
["npcID"] = 4412,
},
[427157] = {
["encounterName"] = "黑暗之主",
["source"] = "黑暗之主",
["encounterID"] = 2788,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208747,
},
[207980] = {
["encounterName"] = "塔丽克萨·火冠",
["source"] = "警惕的巴尔戈",
["npcID"] = 104274,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1869,
},
[371875] = {
["event"] = "SPELL_CAST_START",
["source"] = "卡拉希新兵",
["npcID"] = 189266,
},
[422039] = {
["encounterName"] = "瘤根",
["source"] = "瘤根",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[369828] = {
["event"] = "SPELL_CAST_START",
["source"] = "恶毒的蜥蜴",
["npcID"] = 184023,
},
[424087] = {
["source"] = "扎卡利灭绝者",
["event"] = "SPELL_CAST_START",
["npcID"] = 207089,
},
[384161] = {
["event"] = "SPELL_CAST_START",
["source"] = "卡拉希焚钢者",
["npcID"] = 189464,
},
[398494] = {
["source"] = "扎卡利岩翼蝠",
["event"] = "SPELL_CAST_START",
["npcID"] = 207090,
},
[61353] = {
["event"] = "SPELL_CAST_START",
["source"] = "达格娜·火石",
["npcID"] = 96779,
},
[409756] = {
["event"] = "SPELL_CAST_START",
["source"] = "贾拉丁指挥官",
["npcID"] = 202109,
},
[201839] = {
["event"] = "SPELL_CAST_START",
["source"] = "污心召唤师",
["npcID"] = 99366,
},
[376997] = {
["encounterName"] = "克罗兹",
["source"] = "克罗兹",
["npcID"] = 191736,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2564,
},
[406686] = {
["event"] = "SPELL_CAST_START",
["source"] = "贾拉丁岩浆塑形者",
["npcID"] = 202257,
},
[451732] = {
["event"] = "SPELL_CAST_START",
["source"] = "蜂拥的齿轮行者",
["npcID"] = 232871,
},
[421020] = {
["encounterName"] = "梦境议会",
["source"] = "乌克托斯",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208363,
},
[395427] = {
["event"] = "SPELL_CAST_START",
["source"] = "监视者拉哈尔",
["npcID"] = 189235,
},
[446615] = {
["source"] = "夜幕筑暗师",
["event"] = "SPELL_CAST_START",
["npcID"] = 213885,
},
[292029] = {
["source"] = "波撒斯特主教",
["event"] = "SPELL_CAST_START",
["npcID"] = 144568,
},
[194675] = {
["event"] = "SPELL_CAST_START",
["source"] = "炽燃小鬼",
["npcID"] = 98963,
},
[421024] = {
["encounterName"] = "梦境议会",
["source"] = "匹普",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208367,
},
[417953] = {
["source"] = "迦洛克·切翼",
["event"] = "SPELL_CAST_START",
["npcID"] = 206460,
},
[373932] = {
["encounterName"] = "青刃",
["source"] = "龙裔影像",
["npcID"] = 190187,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[411811] = {
["event"] = "SPELL_CAST_START",
["source"] = "冒泡的软泥",
["npcID"] = 205651,
},
[377004] = {
["encounterName"] = "克罗兹",
["source"] = "克罗兹",
["npcID"] = 191736,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2564,
},
[119365] = {
["event"] = "SPELL_CAST_START",
["source"] = "魔古巫师",
["npcID"] = 61250,
},
[442525] = {
["encounterName"] = "酿造大师阿德里尔",
["source"] = "酿造大师阿德里尔",
["npcID"] = 210271,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[378029] = {
["encounterName"] = "劈爪的战团",
["source"] = "伤齿",
["npcID"] = 186124,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[426147] = {
["encounterName"] = "尼穆威，轮回编织者",
["source"] = "尼穆威",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 206172,
},
[373936] = {
["event"] = "SPELL_CAST_START",
["source"] = "萎蔫橡树",
["npcID"] = 186229,
},
[403625] = {
["encounterName"] = "鳞长萨卡雷斯",
["source"] = "萨卡雷斯",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[422053] = {
["encounterName"] = "瘤根",
["source"] = "被污染的鞭笞者",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 210231,
},
[386223] = {
["source"] = "原始暴风之盾",
["event"] = "SPELL_CAST_START",
["npcID"] = 194896,
},
[392366] = {
["event"] = "SPELL_CAST_START",
["source"] = "觉醒的主宰",
["npcID"] = 197793,
},
[373939] = {
["encounterName"] = "腐朽主母怒眼",
["source"] = "腐爆图腾",
["npcID"] = 190381,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2569,
},
[375988] = {
["event"] = "SPELL_CAST_START",
["source"] = "雪裘狐龙",
["npcID"] = 193438,
},
[427176] = {
["encounterName"] = "黑暗之主",
["source"] = "蠕动暗嗣",
["encounterID"] = 2788,
["event"] = "SPELL_CAST_START",
["npcID"] = 213008,
},
[373942] = {
["encounterName"] = "腐朽主母怒眼",
["source"] = "腐朽主母怒眼",
["npcID"] = 186121,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2569,
},
[441510] = {
["source"] = "致命幼苗",
["event"] = "SPELL_CAST_START",
["npcID"] = 220316,
},
[373943] = {
["event"] = "SPELL_CAST_START",
["source"] = "萎蔫橡树",
["npcID"] = 186229,
},
[428202] = {
["encounterName"] = "机械大师",
["source"] = "代言人布洛克",
["encounterID"] = 2888,
["event"] = "SPELL_CAST_START",
["npcID"] = 213217,
},
[194682] = {
["event"] = "SPELL_CAST_START",
["source"] = "炽燃小鬼",
["npcID"] = 98963,
},
[442536] = {
["event"] = "SPELL_CAST_START",
["source"] = "隐秘网士",
["npcID"] = 223844,
},
[374969] = {
["encounterName"] = "熔炉主管戈雷克",
["source"] = "熔炉主管戈雷克",
["npcID"] = 189478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2612,
},
[441513] = {
["source"] = "亡瓣之花",
["event"] = "SPELL_CAST_START",
["npcID"] = 206184,
},
[377017] = {
["encounterName"] = "督军莎尔佳",
["source"] = "督军莎尔佳",
["npcID"] = 189901,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2611,
},
[450728] = {
["event"] = "SPELL_CAST_START",
["source"] = "攻城领主谢罗什",
["npcID"] = 224311,
},
[373947] = {
["event"] = "SPELL_CAST_START",
["source"] = "斑点徘徊者",
["npcID"] = 195460,
},
[369853] = {
["event"] = "SPELL_CAST_START",
["source"] = "壮实的掷石者",
["npcID"] = 184019,
},
[407733] = {
["encounterName"] = "被遗忘的实验体",
["source"] = "奈尔迪丝",
["npcID"] = 200912,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[448684] = {
["source"] = "闪光电镰虫",
["event"] = "SPELL_CAST_START",
["npcID"] = 219970,
},
[388283] = {
["encounterName"] = "格拉尼斯",
["source"] = "格拉尼斯",
["encounterID"] = 2637,
["event"] = "SPELL_CAST_START",
["npcID"] = 186616,
},
[394426] = {
["event"] = "SPELL_CAST_START",
["source"] = "议会唤焰者",
["npcID"] = 198503,
},
[206459] = {
["encounterName"] = "科达娜·邪歌",
["source"] = "暗影化身",
["npcID"] = 104293,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1818,
},
[387261] = {
["encounterName"] = "莱萨杰丝，噬雷之龙",
["source"] = "莱萨杰丝",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[451758] = {
["source"] = "蜃鱼人塑影者",
["event"] = "SPELL_CAST_START",
["npcID"] = 215653,
},
[449711] = {
["event"] = "SPELL_CAST_START",
["source"] = "焦躁的葬火虫",
["npcID"] = 229526,
},
[55982] = {
["source"] = "回溯恩诺姆斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 225274,
},
[457902] = {
["event"] = "SPELL_CAST_START",
["source"] = "贝雷达尔之裔",
["npcID"] = 207802,
},
[193152] = {
["encounterName"] = "深须国王",
["source"] = "深须国王",
["npcID"] = 91797,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1812,
},
[235638] = {
["source"] = "树人护林者",
["event"] = "SPELL_CAST_START",
["npcID"] = 207616,
},
[384194] = {
["event"] = "SPELL_CAST_START",
["source"] = "拜荒织烬者",
["npcID"] = 190207,
},
[411837] = {
["event"] = "SPELL_CAST_START",
["source"] = "火焰残片",
["npcID"] = 205971,
},
[33844] = {
["source"] = "树人护林者",
["event"] = "SPELL_CAST_START",
["npcID"] = 207616,
},
[405696] = {
["encounterName"] = "时间流具象",
["source"] = "时间流具象",
["encounterID"] = 2667,
["event"] = "SPELL_CAST_START",
["npcID"] = 198996,
},
[373960] = {
["encounterName"] = "腐朽主母怒眼",
["source"] = "腐朽主母怒眼",
["npcID"] = 186121,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2569,
},
[197250] = {
["encounterName"] = "科达娜·邪歌",
["source"] = "科达娜·邪歌",
["npcID"] = 95888,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1818,
},
[425149] = {
["source"] = "扎卡利主宰",
["event"] = "SPELL_CAST_START",
["npcID"] = 210172,
},
[440506] = {
["event"] = "SPELL_CAST_START",
["source"] = "溪流弹涂鱼",
["npcID"] = 213700,
},
[377034] = {
["encounterName"] = "克罗兹",
["source"] = "克罗兹",
["npcID"] = 191736,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2564,
},
[197251] = {
["encounterName"] = "科达娜·邪歌",
["source"] = "科达娜·邪歌",
["npcID"] = 95888,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1818,
},
[201858] = {
["event"] = "SPELL_CAST_START",
["source"] = "污心神射手",
["npcID"] = 100539,
},
[287970] = {
["source"] = "拉德维克·晃簧",
["event"] = "SPELL_CAST_START",
["npcID"] = 144564,
},
[421059] = {
["event"] = "SPELL_CAST_START",
["source"] = "奥罗斯托",
["npcID"] = 209574,
},
[456891] = {
["event"] = "SPELL_CAST_START",
["source"] = "驯蜂者",
["npcID"] = 210264,
},
[392395] = {
["event"] = "SPELL_CAST_START",
["source"] = "雷霆之颅",
["npcID"] = 197698,
},
[397514] = {
["encounterName"] = "扎卡利突袭",
["source"] = "督军卡格尼",
["npcID"] = 199659,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[439488] = {
["encounterName"] = "多拉苟萨的回响",
["source"] = "多拉苟萨的回响",
["npcID"] = 190609,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2565,
},
[387277] = {
["source"] = "火炬亡魂",
["event"] = "SPELL_CAST_START",
["npcID"] = 201472,
},
[449726] = {
["event"] = "SPELL_CAST_START",
["source"] = "焦躁的葬火虫",
["npcID"] = 229526,
},
[209027] = {
["event"] = "SPELL_CAST_START",
["source"] = "暮色卫队卫兵",
["npcID"] = 111563,
},
[423109] = {
["encounterName"] = "布雷炙孔",
["source"] = "布雷炙孔",
["npcID"] = 208743,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2826,
},
[444608] = {
["encounterName"] = "隐修院长穆普雷",
["source"] = "隐修院长穆普雷",
["encounterID"] = 2848,
["event"] = "SPELL_CAST_START",
["npcID"] = 207940,
},
[451775] = {
["event"] = "SPELL_CAST_START",
["source"] = "齿轮行者",
["npcID"] = 224527,
},
[444609] = {
["encounterName"] = "隐修院长穆普雷",
["source"] = "隐修院长穆普雷",
["encounterID"] = 2848,
["event"] = "SPELL_CAST_START",
["npcID"] = 207940,
},
[392398] = {
["event"] = "SPELL_CAST_START",
["source"] = "原始雷云",
["npcID"] = 197509,
},
[373972] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "拜荒烈焰舞者",
["npcID"] = 190206,
},
[451778] = {
["event"] = "SPELL_CAST_START",
["source"] = "死板的机语者",
["npcID"] = 212878,
},
[218755] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "烂皮灰熊",
["npcID"] = 95779,
},
[422090] = {
["source"] = "树人",
["event"] = "SPELL_CAST_START",
["npcID"] = 54983,
},
[386259] = {
["event"] = "SPELL_CAST_START",
["source"] = "巴斯律孔",
["npcID"] = 193535,
},
[192138] = {
["encounterName"] = "督军帕杰什",
["source"] = "积怨踏浪者",
["npcID"] = 97269,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1810,
},
[450756] = {
["event"] = "SPELL_CAST_START",
["source"] = "夜幕司令官",
["npcID"] = 214762,
},
[157331] = {
["event"] = "SPELL_CAST_START",
["source"] = "强力风暴元素",
["npcID"] = 77936,
},
[450757] = {
["event"] = "SPELL_CAST_START",
["source"] = "蜡尾恫吓者",
["npcID"] = 213000,
},
[424140] = {
["encounterName"] = "丁达尔·迅贤，烈焰预言者",
["source"] = "丁达尔·迅贤",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[449734] = {
["encounterName"] = "拉夏南",
["source"] = "拉夏南",
["encounterID"] = 2839,
["event"] = "SPELL_CAST_START",
["npcID"] = 213937,
},
[438473] = {
["encounterName"] = "阿瓦诺克斯",
["source"] = "阿瓦诺克斯",
["npcID"] = 213179,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2926,
},
[455877] = {
["event"] = "SPELL_CAST_START",
["source"] = "可憎的弄潮者",
["npcID"] = 216526,
},
[388310] = {
["source"] = "看护防御者",
["event"] = "SPELL_CAST_START",
["npcID"] = 192694,
},
[455878] = {
["event"] = "SPELL_CAST_START",
["source"] = "软泥可汗",
["npcID"] = 216049,
},
[392406] = {
["event"] = "SPELL_CAST_START",
["source"] = "风暴战士",
["npcID"] = 197982,
},
[393430] = {
["event"] = "SPELL_CAST_START",
["source"] = "护炉管理者",
["npcID"] = 192703,
},
[431309] = {
["source"] = "夜幕影法师",
["event"] = "SPELL_CAST_START",
["npcID"] = 228540,
},
[438476] = {
["encounterName"] = "阿瓦诺克斯",
["source"] = "阿瓦诺克斯",
["npcID"] = 213179,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2926,
},
[424144] = {
["isChanneled"] = true,
["source"] = "时间线裂痕",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208561,
},
[188046] = {
["source"] = "梦境住民",
["event"] = "SPELL_CAST_START",
["npcID"] = 198489,
},
[393432] = {
["event"] = "SPELL_CAST_START",
["source"] = "莱弗提防御者",
["npcID"] = 190340,
},
[387290] = {
["event"] = "SPELL_CAST_START",
["source"] = "摩尔拉什",
["npcID"] = 201549,
},
[430288] = {
["source"] = "虚空碎片",
["event"] = "SPELL_CAST_START",
["npcID"] = 207202,
},
[15536] = {
["event"] = "SPELL_CAST_START",
["source"] = "联盟法师",
["npcID"] = 214167,
},
[403671] = {
["encounterName"] = "玛格莫莱克斯",
["source"] = "玛格莫莱克斯",
["npcID"] = 201579,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2683,
},
[411862] = {
["event"] = "SPELL_CAST_START",
["source"] = "活化液体",
["npcID"] = 203939,
},
[31516] = {
["event"] = "SPELL_CAST_START",
["source"] = "联盟牧师",
["npcID"] = 214152,
},
[424148] = {
["encounterName"] = "凯里欧斯",
["source"] = "凯里欧斯",
["encounterID"] = 2816,
["event"] = "SPELL_CAST_START",
["npcID"] = 209230,
},
[384223] = {
["encounterName"] = "青刃",
["source"] = "青刃",
["npcID"] = 186739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[463052] = {
["source"] = "觉醒的方阵兵",
["event"] = "SPELL_CAST_START",
["npcID"] = 229782,
},
[439506] = {
["encounterName"] = "阿努布泽克特",
["source"] = "阿努布泽克特",
["npcID"] = 215405,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2906,
},
[11985] = {
["event"] = "SPELL_CAST_START",
["source"] = "巨型熔岩蜘蛛",
["npcID"] = 5858,
},
[393439] = {
["source"] = "碎裂废墟追猎者",
["event"] = "SPELL_CAST_START",
["npcID"] = 199379,
},
[451793] = {
["source"] = "阿哈格罗",
["event"] = "SPELL_CAST_START",
["npcID"] = 216560,
},
[387297] = {
["source"] = "失败的鳞长海洛索尔",
["event"] = "SPELL_CAST_START",
["npcID"] = 201822,
},
[457938] = {
["event"] = "SPELL_CAST_START",
["source"] = "贝雷达尔之裔",
["npcID"] = 207802,
},
[79965] = {
["event"] = "SPELL_CAST_START",
["source"] = "联盟圣骑士",
["npcID"] = 214148,
},
[193682] = {
["encounterName"] = "积怨夫人",
["source"] = "积怨夫人",
["npcID"] = 91789,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1811,
},
[426206] = {
["encounterName"] = "拉罗达尔，烈焰守护者",
["source"] = "拉罗达尔，烈焰守护者",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[446682] = {
["event"] = "SPELL_CAST_START",
["source"] = "软泥可汗",
["npcID"] = 216049,
},
[442589] = {
["event"] = "SPELL_CAST_START",
["source"] = "风险投资公司蜂蜜收割者",
["npcID"] = 220946,
},
[391402] = {
["encounterName"] = "莱萨杰丝，噬雷之龙",
["source"] = "莱萨杰丝",
["npcID"] = 189492,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2607,
},
[416996] = {
["encounterName"] = "残虐者艾姬拉",
["source"] = "残虐者艾姬拉",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[450781] = {
["event"] = "SPELL_CAST_START",
["source"] = "曳焰戳刺者",
["npcID"] = 212629,
},
[404713] = {
["encounterName"] = "被遗忘的实验体",
["source"] = "奈尔迪丝",
["npcID"] = 200912,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[401642] = {
["encounterName"] = "鳞长萨卡雷斯",
["source"] = "萨卡雷斯",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[376049] = {
["encounterName"] = "时空领主戴欧斯",
["source"] = "时空领主戴欧斯",
["npcID"] = 184125,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2559,
},
[393453] = {
["source"] = "碎裂防御者",
["event"] = "SPELL_CAST_START",
["npcID"] = 199941,
},
[450784] = {
["event"] = "SPELL_CAST_START",
["source"] = "谢非提克",
["npcID"] = 219984,
},
[431333] = {
["source"] = "夜幕暗法师",
["event"] = "SPELL_CAST_START",
["npcID"] = 213893,
},
[408811] = {
["event"] = "SPELL_CAST_START",
["source"] = "碎裂攻城大师",
["npcID"] = 198874,
},
[439524] = {
["encounterName"] = "本克·鸣蜂",
["source"] = "本克·鸣蜂",
["npcID"] = 218002,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2931,
},
[450786] = {
["event"] = "SPELL_CAST_START",
["source"] = "燧烬蜂觅食者",
["npcID"] = 222976,
},
[440549] = {
["event"] = "SPELL_CAST_START",
["source"] = "怒鳍处刑者",
["npcID"] = 213408,
},
[434407] = {
["encounterName"] = "拉夏南",
["source"] = "拉夏南",
["encounterID"] = 2839,
["event"] = "SPELL_CAST_START",
["npcID"] = 213937,
},
[407790] = {
["encounterName"] = "奈萨里奥的回响",
["source"] = "奈萨里奥",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[393458] = {
["source"] = "碎裂防御者",
["event"] = "SPELL_CAST_START",
["npcID"] = 199941,
},
[451812] = {
["event"] = "SPELL_CAST_START",
["source"] = "死板的熔炉法师",
["npcID"] = 212884,
},
[440551] = {
["event"] = "SPELL_CAST_START",
["source"] = "怒鳍处刑者",
["npcID"] = 213408,
},
[449765] = {
["source"] = "岩浆蛇",
["event"] = "SPELL_CAST_START",
["npcID"] = 215770,
},
[200345] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "复活的弓箭手",
["npcID"] = 98275,
},
[414959] = {
["source"] = "炽热的监督者",
["event"] = "SPELL_CAST_START",
["npcID"] = 205140,
},
[157348] = {
["event"] = "SPELL_CAST_START",
["source"] = "强力风暴元素",
["npcID"] = 77936,
},
[428269] = {
["encounterName"] = "斯卡丁巨怪",
["source"] = "虚空碎块",
["encounterID"] = 2836,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213684,
},
[412914] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗影残片",
["npcID"] = 205968,
},
[407796] = {
["encounterName"] = "奈萨里奥的回响",
["source"] = "奈萨里奥",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[417011] = {
["event"] = "SPELL_CAST_START",
["source"] = "白银之手圣骑士",
["npcID"] = 208193,
},
[463081] = {
["source"] = "觉醒的方阵兵",
["event"] = "SPELL_CAST_START",
["npcID"] = 229782,
},
[451820] = {
["event"] = "SPELL_CAST_START",
["source"] = "硕大无朋的稠蜜",
["npcID"] = 222960,
},
[379134] = {
["source"] = "石息召唤师",
["event"] = "SPELL_CAST_START",
["npcID"] = 201467,
},
[388349] = {
["event"] = "SPELL_CAST_START",
["source"] = "深水鳗",
["npcID"] = 215680,
},
[427252] = {
["encounterName"] = "拉罗达尔，烈焰守护者",
["source"] = "拉罗达尔，烈焰守护者",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[383231] = {
["event"] = "SPELL_CAST_START",
["source"] = "卡拉希熔岩术师",
["npcID"] = 193944,
},
[431349] = {
["source"] = "夜幕筑暗师",
["event"] = "SPELL_CAST_START",
["npcID"] = 213885,
},
[412922] = {
["event"] = "SPELL_CAST_START",
["source"] = "斯普洛克，时誓戒卫",
["npcID"] = 205158,
},
[374020] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "抑制装置",
["npcID"] = 190342,
},
[417018] = {
["event"] = "SPELL_CAST_START",
["source"] = "联盟咒术师",
["npcID"] = 206351,
},
[406783] = {
["encounterName"] = "融合体密室",
["source"] = "暗影烈焰融合体",
["npcID"] = 201934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[383237] = {
["source"] = "蕾兹卡",
["event"] = "SPELL_CAST_START",
["npcID"] = 208740,
},
[400641] = {
["encounterName"] = "永恒守护者提尔",
["source"] = "永恒守护者提尔",
["npcID"] = 198998,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2670,
},
[195234] = {
["event"] = "SPELL_CAST_START",
["source"] = "积怨缚潮者",
["npcID"] = 97170,
},
[411903] = {
["event"] = "SPELL_CAST_START",
["source"] = "碎裂炼金师",
["npcID"] = 205656,
},
[400642] = {
["encounterName"] = "永恒守护者提尔",
["source"] = "永恒守护者提尔",
["npcID"] = 198998,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2670,
},
[427260] = {
["source"] = "被诅咒的雷鸫看护者",
["event"] = "SPELL_CAST_START",
["npcID"] = 207199,
},
[412928] = {
["event"] = "SPELL_CAST_START",
["source"] = "熔炉主管阿尔格林",
["npcID"] = 203709,
},
[418047] = {
["encounterName"] = "迷时战场",
["source"] = "安度因·洛萨",
["npcID"] = 203679,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[453879] = {
["source"] = "大正纺师安图里克斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 225263,
},
[442618] = {
["source"] = "坚铸统御者",
["event"] = "SPELL_CAST_START",
["npcID"] = 215601,
},
[411906] = {
["event"] = "SPELL_CAST_START",
["source"] = "碎裂炼金师",
["npcID"] = 205656,
},
[198820] = {
["encounterName"] = "库塔洛斯·拉文凯斯",
["source"] = "拉图修斯",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[446717] = {
["event"] = "SPELL_CAST_START",
["source"] = "长者织影",
["npcID"] = 221102,
},
[371984] = {
["event"] = "SPELL_CAST_START",
["source"] = "闪霜织寒者",
["npcID"] = 188067,
},
[455932] = {
["event"] = "SPELL_CAST_START",
["source"] = "老格林",
["npcID"] = 213403,
},
[199845] = {
["isChanneled"] = true,
["source"] = "灵能魔",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 101398,
},
[433410] = {
["source"] = "啾鸣释惧蛛",
["event"] = "SPELL_CAST_START",
["npcID"] = 216583,
},
[407817] = {
["source"] = "苟尔娜",
["event"] = "SPELL_CAST_START",
["npcID"] = 199853,
},
[433411] = {
["source"] = "蛛魔暗法师",
["event"] = "SPELL_CAST_START",
["npcID"] = 208242,
},
[377105] = {
["event"] = "SPELL_CAST_START",
["source"] = "魔馆守卫",
["npcID"] = 190510,
},
[431364] = {
["event"] = "SPELL_CAST_START",
["source"] = "夜幕祭师",
["npcID"] = 214761,
},
[375058] = {
["source"] = "老阿博格",
["event"] = "SPELL_CAST_START",
["npcID"] = 196897,
},
[418056] = {
["encounterName"] = "迷时战场",
["source"] = "安度因·洛萨",
["npcID"] = 203679,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[410890] = {
["event"] = "SPELL_CAST_START",
["source"] = "永恒卫徒",
["npcID"] = 205259,
},
[396559] = {
["event"] = "SPELL_CAST_START",
["source"] = "莱萨杰丝",
["npcID"] = 199031,
},
[411916] = {
["event"] = "SPELL_CAST_START",
["source"] = "碎裂吞噬者",
["npcID"] = 205673,
},
[214692] = {
["event"] = "SPELL_CAST_START",
["source"] = "邪恶的格伦斯",
["npcID"] = 107435,
},
[215204] = {
["encounterName"] = "巡逻队长加多",
["source"] = "警惕的暮色卫队卫兵",
["npcID"] = 104918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1868,
},
[451843] = {
["source"] = "雷卫戈伦",
["event"] = "SPELL_CAST_START",
["npcID"] = 207205,
},
[188587] = {
["event"] = "SPELL_CAST_START",
["source"] = "顶石粉碎者",
["npcID"] = 102253,
},
[435465] = {
["event"] = "SPELL_CAST_START",
["source"] = "机械师保护者",
["npcID"] = 219361,
},
[116] = {
["npcID"] = 188027,
},
[373017] = {
["encounterName"] = "柯姬雅·焰蹄",
["source"] = "炎缚火焰风暴",
["npcID"] = 189886,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[369946] = {
["source"] = "猎龙者伊戈尔丹",
["event"] = "SPELL_CAST_START",
["npcID"] = 191611,
},
[375065] = {
["event"] = "SPELL_CAST_START",
["source"] = "腐臭的颂朽者",
["npcID"] = 186226,
},
[404754] = {
["encounterName"] = "鳞长萨卡雷斯",
["source"] = "空虚微光",
["npcID"] = 202971,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[414992] = {
["source"] = "燃烧的火语者",
["event"] = "SPELL_CAST_START",
["npcID"] = 205138,
},
[331045] = {
["event"] = "SPELL_CAST_START",
["source"] = "蛮翼恐爪鸟",
["npcID"] = 170067,
},
[382233] = {
["event"] = "SPELL_CAST_START",
["source"] = "巴塔克",
["npcID"] = 193462,
},
[444683] = {
["source"] = "缀苔磐羊",
["event"] = "SPELL_CAST_START",
["npcID"] = 214945,
},
[290097] = {
["source"] = "治愈者朗羽",
["event"] = "SPELL_CAST_START",
["npcID"] = 150728,
},
[374045] = {
["event"] = "SPELL_CAST_START",
["source"] = "抑制装置",
["npcID"] = 190342,
},
[392474] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "采石场注能者",
["npcID"] = 197799,
},
[373024] = {
["event"] = "SPELL_CAST_START",
["source"] = "腐朽老树",
["npcID"] = 189531,
},
[378143] = {
["event"] = "SPELL_CAST_START",
["source"] = "拜荒渗透者",
["npcID"] = 191844,
},
[424212] = {
["encounterName"] = "布雷炙孔",
["source"] = "布雷炙孔",
["encounterID"] = 2826,
["event"] = "SPELL_CAST_START",
["npcID"] = 208743,
},
[385310] = {
["source"] = "拜荒者雷震法师",
["event"] = "SPELL_CAST_START",
["npcID"] = 195119,
},
[410904] = {
["encounterName"] = "时空领主戴欧斯",
["source"] = "时空领主戴欧斯",
["npcID"] = 199000,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[426261] = {
["source"] = "灰鼻",
["event"] = "SPELL_CAST_START",
["npcID"] = 212412,
},
[201902] = {
["event"] = "SPELL_CAST_START",
["source"] = "污心神射手",
["npcID"] = 100539,
},
[385313] = {
["source"] = "拜荒者雷震法师",
["event"] = "SPELL_CAST_START",
["npcID"] = 195119,
},
[403741] = {
["encounterName"] = "鳞长萨卡雷斯",
["source"] = "萨卡雷斯",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[424217] = {
["source"] = "对练的哨兵",
["event"] = "SPELL_CAST_START",
["npcID"] = 216676,
},
[290106] = {
["source"] = "治愈者朗羽",
["event"] = "SPELL_CAST_START",
["npcID"] = 150728,
},
[217260] = {
["event"] = "SPELL_CAST_START",
["source"] = "泥鳍萨满",
["npcID"] = 186679,
},
[378150] = {
["event"] = "SPELL_CAST_START",
["source"] = "拜荒渗透者",
["npcID"] = 189869,
},
[375079] = {
["event"] = "SPELL_CAST_START",
["source"] = "暴风使者西拉兹",
["npcID"] = 190370,
},
[445718] = {
["source"] = "失窃的装货者",
["event"] = "SPELL_CAST_START",
["npcID"] = 223541,
},
[422172] = {
["encounterName"] = "斯莫德隆",
["source"] = "斯莫德隆",
["encounterID"] = 2824,
["event"] = "SPELL_CAST_START",
["npcID"] = 200927,
},
[199345] = {
["encounterName"] = "德萨隆",
["source"] = "德萨隆",
["npcID"] = 99200,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1838,
},
[420125] = {
["source"] = "原始雪崩",
["event"] = "SPELL_CAST_START",
["npcID"] = 187082,
},
[448791] = {
["source"] = "热切的圣骑士",
["event"] = "SPELL_CAST_START",
["npcID"] = 206704,
},
[82797] = {
["event"] = "SPELL_CAST_START",
["source"] = "疱爪土狼",
["npcID"] = 5426,
},
[392486] = {
["event"] = "SPELL_CAST_START",
["source"] = "暴风引导者",
["npcID"] = 198047,
},
[196787] = {
["event"] = "SPELL_CAST_START",
["source"] = "灌魔之怒",
["npcID"] = 99956,
},
[382249] = {
["event"] = "SPELL_CAST_START",
["source"] = "诡爪秘术师",
["npcID"] = 185528,
},
[193716] = {
["encounterName"] = "积怨夫人",
["source"] = "积怨夫人",
["npcID"] = 91789,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1811,
},
[388392] = {
["event"] = "SPELL_CAST_START",
["source"] = "任性的教科书",
["npcID"] = 196044,
},
[378155] = {
["encounterName"] = "劈爪的战团",
["source"] = "狡诈图腾",
["npcID"] = 186125,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[398631] = {
["source"] = "卓越荣耀联盟火枪手",
["event"] = "SPELL_CAST_START",
["npcID"] = 207580,
},
[193717] = {
["encounterName"] = "积怨夫人",
["source"] = "积怨夫人",
["npcID"] = 91789,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1811,
},
[195253] = {
["event"] = "SPELL_CAST_START",
["source"] = "焦躁的海潮元素",
["npcID"] = 97173,
},
[157375] = {
["encounterName"] = "奈萨里奥的回响",
["source"] = "原始风暴元素",
["encounterID"] = 2684,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77942,
},
[195254] = {
["encounterName"] = "融合之魂",
["source"] = "融合之魂",
["npcID"] = 98542,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1832,
},
[426277] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "炬龇",
["npcID"] = 212993,
},
[444705] = {
["source"] = "热心的圣殿骑士",
["event"] = "SPELL_CAST_START",
["npcID"] = 207949,
},
[449824] = {
["source"] = "泉泡",
["event"] = "SPELL_CAST_START",
["npcID"] = 219262,
},
[201399] = {
["event"] = "SPELL_CAST_START",
["source"] = "骇火小鬼",
["npcID"] = 100527,
},
[373046] = {
["encounterName"] = "梅莉杜莎·寒妆",
["source"] = "梅莉杜莎·寒妆",
["npcID"] = 188252,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[375094] = {
["source"] = "迅捷角行鸟",
["event"] = "SPELL_CAST_START",
["npcID"] = 190029,
},
[440615] = {
["event"] = "SPELL_CAST_START",
["source"] = "怒鳍暗影法师",
["npcID"] = 213405,
},
[426283] = {
["source"] = "咒心入侵者",
["event"] = "SPELL_CAST_START",
["npcID"] = 212389,
},
[450854] = {
["event"] = "SPELL_CAST_START",
["source"] = "死亡尖啸者艾肯塔克",
["npcID"] = 211263,
},
[374073] = {
["event"] = "SPELL_CAST_START",
["source"] = "拜荒地卜师",
["npcID"] = 190345,
},
[411952] = {
["event"] = "SPELL_CAST_START",
["source"] = "永恒曲时者",
["npcID"] = 205337,
},
[455975] = {
["event"] = "SPELL_CAST_START",
["source"] = "重构的斯卡丁",
["npcID"] = 219245,
},
[405812] = {
["encounterName"] = "警戒管事兹斯卡恩",
["source"] = "兹斯卡恩",
["npcID"] = 202375,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2689,
},
[425264] = {
["encounterName"] = "代言人夏多克朗",
["source"] = "代言人夏多克朗",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[213688] = {
["event"] = "SPELL_CAST_START",
["source"] = "邪能领主",
["npcID"] = 107024,
},
[385339] = {
["encounterName"] = "提拉和马鲁克",
["source"] = "马鲁克",
["npcID"] = 186338,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[419123] = {
["encounterName"] = "火光之龙菲莱克",
["source"] = "菲莱克",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[440622] = {
["event"] = "SPELL_CAST_START",
["source"] = "怒鳍暗影法师",
["npcID"] = 213405,
},
[384316] = {
["encounterName"] = "狂怒风暴",
["source"] = "狂怒风暴",
["encounterID"] = 2636,
["event"] = "SPELL_CAST_START",
["npcID"] = 186615,
},
[387388] = {
["source"] = "硫磺精兵",
["event"] = "SPELL_CAST_START",
["npcID"] = 200178,
},
[403771] = {
["encounterName"] = "鳞长萨卡雷斯",
["source"] = "萨卡雷斯",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[196287] = {
["event"] = "SPELL_CAST_START",
["source"] = "唤雷多头蛇",
["npcID"] = 91792,
},
[394558] = {
["event"] = "SPELL_CAST_START",
["source"] = "不稳定的烈焰",
["npcID"] = 198577,
},
[403772] = {
["source"] = "瓦坎",
["event"] = "SPELL_CAST_START",
["npcID"] = 199855,
},
[445746] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗水破潮者",
["npcID"] = 220621,
},
[426295] = {
["source"] = "灰鼻",
["event"] = "SPELL_CAST_START",
["npcID"] = 212412,
},
[455984] = {
["event"] = "SPELL_CAST_START",
["source"] = "重构的斯卡丁",
["npcID"] = 219245,
},
[32674] = {
["event"] = "SPELL_CAST_START",
["source"] = "回溯之复活的北伐军战士",
["npcID"] = 226096,
},
[405821] = {
["encounterName"] = "长老莱修克",
["source"] = "莱修克",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[451890] = {
["event"] = "SPELL_CAST_START",
["source"] = "死板的烟灰先知",
["npcID"] = 212876,
},
[3110] = {
["event"] = "SPELL_CAST_START",
["source"] = "未知目标",
["npcID"] = 416,
},
[448820] = {
["source"] = "狗头人颅面者",
["event"] = "SPELL_CAST_START",
["npcID"] = 203951,
},
[389443] = {
["encounterName"] = "看护者伊里度斯",
["source"] = "废灵装置",
["npcID"] = 196712,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[382277] = {
["event"] = "SPELL_CAST_START",
["source"] = "巴拉拉",
["npcID"] = 193457,
},
[427323] = {
["source"] = "驭虚者",
["event"] = "SPELL_CAST_START",
["npcID"] = 212786,
},
[196290] = {
["event"] = "SPELL_CAST_START",
["source"] = "唤雷多头蛇",
["npcID"] = 91792,
},
[409921] = {
["event"] = "SPELL_CAST_START",
["source"] = "贾拉丁指挥官",
["npcID"] = 202109,
},
[200898] = {
["encounterName"] = "审判官托蒙托鲁姆",
["source"] = "审判官托蒙托鲁姆",
["npcID"] = 96015,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1850,
},
[406851] = {
["encounterName"] = "长老莱修克",
["source"] = "莱修克",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[388424] = {
["encounterName"] = "原始海啸",
["source"] = "原始海啸",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[201411] = {
["event"] = "SPELL_CAST_START",
["source"] = "骇火小鬼",
["npcID"] = 100527,
},
[53824] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗流深渔者",
["npcID"] = 226961,
},
[406854] = {
["event"] = "SPELL_CAST_START",
["source"] = "碎裂奥术师",
["npcID"] = 201736,
},
[432448] = {
["event"] = "SPELL_CAST_START",
["source"] = "夜幕祭师",
["npcID"] = 214761,
},
[372047] = {
["event"] = "SPELL_CAST_START",
["source"] = "亵渎者德拉加尔",
["npcID"] = 187897,
},
[377166] = {
["encounterName"] = "泰洛斯",
["source"] = "泰洛斯",
["npcID"] = 190496,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[209602] = {
["encounterName"] = "顾问麦兰杜斯",
["source"] = "顾问麦兰杜斯",
["npcID"] = 104218,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1870,
},
[412999] = {
["source"] = "翼尉德兹兰",
["event"] = "SPELL_CAST_START",
["npcID"] = 201677,
},
[317791] = {
["source"] = "亡者魔导师",
["event"] = "SPELL_CAST_START",
["npcID"] = 163366,
},
[385359] = {
["encounterName"] = "肠击",
["source"] = "肠击",
["npcID"] = 186116,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[317792] = {
["event"] = "SPELL_CAST_START",
["source"] = "亡者魔导师",
["npcID"] = 163366,
},
[384336] = {
["source"] = "诺库德长枪大师",
["event"] = "SPELL_CAST_START",
["npcID"] = 192800,
},
[419144] = {
["encounterName"] = "火光之龙菲莱克",
["source"] = "菲莱克",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[409931] = {
["event"] = "SPELL_CAST_START",
["source"] = "贾拉丁指挥官",
["npcID"] = 202109,
},
[196296] = {
["event"] = "SPELL_CAST_START",
["source"] = "唤雷多头蛇",
["npcID"] = 91792,
},
[439621] = {
["encounterName"] = "女王之牙",
["source"] = "恩克斯",
["npcID"] = 216648,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2908,
},
[428360] = {
["source"] = "火焰之地毁灭者",
["event"] = "SPELL_CAST_START",
["npcID"] = 210293,
},
[368983] = {
["source"] = "烬步融化者",
["event"] = "SPELL_CAST_START",
["npcID"] = 205799,
},
[387411] = {
["source"] = "灵魂收割者加尔特玛",
["event"] = "SPELL_CAST_START",
["npcID"] = 195927,
},
[392530] = {
["event"] = "SPELL_CAST_START",
["source"] = "采石场注能者",
["npcID"] = 197799,
},
[368984] = {
["event"] = "SPELL_CAST_START",
["source"] = "扎卡利火舌师",
["npcID"] = 200066,
},
[450885] = {
["event"] = "SPELL_CAST_START",
["source"] = "燧烬蜂觅食者",
["npcID"] = 222976,
},
[444743] = {
["source"] = "亡灵法师",
["event"] = "SPELL_CAST_START",
["npcID"] = 221760,
},
[200905] = {
["encounterName"] = "审判官托蒙托鲁姆",
["source"] = "审判官托蒙托鲁姆",
["npcID"] = 96015,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1850,
},
[427341] = {
["source"] = "迦洛克·切翼",
["event"] = "SPELL_CAST_START",
["npcID"] = 209047,
},
[396629] = {
["source"] = "巨硕蝾螈",
["event"] = "SPELL_CAST_START",
["npcID"] = 224622,
},
[427342] = {
["isChanneled"] = true,
["source"] = "阿拉希步兵",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206705,
},
[399701] = {
["source"] = "洞穴剥石者",
["event"] = "SPELL_CAST_START",
["npcID"] = 202307,
},
[373084] = {
["event"] = "SPELL_CAST_START",
["source"] = "焚钢指挥官",
["npcID"] = 189466,
},
[427343] = {
["encounterName"] = "拉罗达尔，烈焰守护者",
["source"] = "拉罗达尔，烈焰守护者",
["npcID"] = 208445,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2731,
},
[440652] = {
["source"] = "漫游蜡烛",
["event"] = "SPELL_CAST_START",
["npcID"] = 208450,
},
[368990] = {
["encounterName"] = "艾博隆",
["source"] = "艾博隆",
["npcID"] = 184422,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2558,
},
[448843] = {
["event"] = "SPELL_CAST_START",
["source"] = "曳焰监督者",
["npcID"] = 212542,
},
[402775] = {
["source"] = "扎卡利圣地卫士",
["event"] = "SPELL_CAST_START",
["npcID"] = 202803,
},
[413013] = {
["encounterName"] = "克罗妮卡",
["source"] = "克罗妮卡",
["encounterID"] = 2666,
["event"] = "SPELL_CAST_START",
["npcID"] = 198995,
},
[373087] = {
["encounterName"] = "柯姬雅·焰蹄",
["source"] = "炎缚火焰风暴",
["npcID"] = 189886,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[427346] = {
["source"] = "虔诚的牧师",
["event"] = "SPELL_CAST_START",
["npcID"] = 206697,
},
[392539] = {
["event"] = "SPELL_CAST_START",
["source"] = "觉醒的土地哨卫",
["npcID"] = 197801,
},
[425300] = {
["isChanneled"] = true,
["source"] = "扎卡利驭焰者",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210170,
},
[378208] = {
["encounterName"] = "劈爪的战团",
["source"] = "伤齿",
["npcID"] = 186124,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[384351] = {
["encounterName"] = "看护者伊里度斯",
["source"] = "看护者伊里度斯",
["npcID"] = 189719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[405850] = {
["event"] = "SPELL_CAST_START",
["source"] = "碎裂破坏者",
["npcID"] = 201753,
},
[411994] = {
["isChanneled"] = true,
["source"] = "永恒织历者",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 205384,
},
[384353] = {
["encounterName"] = "肠击",
["source"] = "肠击",
["npcID"] = 186116,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[188114] = {
["encounterName"] = "洛克莫拉",
["source"] = "洛克莫拉",
["npcID"] = 91003,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1790,
},
[422233] = {
["encounterName"] = "斯卡莫拉克",
["source"] = "斯卡莫拉克",
["encounterID"] = 2880,
["event"] = "SPELL_CAST_START",
["npcID"] = 210156,
},
[439637] = {
["encounterName"] = "女王之牙",
["source"] = "回响之影",
["npcID"] = 219675,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2908,
},
[396640] = {
["encounterName"] = "茂林古树",
["source"] = "古树树枝",
["npcID"] = 196548,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2563,
},
[389474] = {
["source"] = "拜荒破波者",
["event"] = "SPELL_CAST_START",
["npcID"] = 203748,
},
[387427] = {
["event"] = "SPELL_CAST_START",
["source"] = "不受控制的护卫",
["npcID"] = 181775,
},
[445781] = {
["event"] = "SPELL_CAST_START",
["source"] = "花火碾尘者",
["npcID"] = 212597,
},
[423259] = {
["source"] = "野火炽眷",
["event"] = "SPELL_CAST_START",
["npcID"] = 210685,
},
[423260] = {
["encounterName"] = "丁达尔·迅贤，烈焰预言者",
["source"] = "丁达尔·迅贤",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[413023] = {
["event"] = "SPELL_CAST_START",
["source"] = "勒莱，时誓圣女",
["npcID"] = 205152,
},
[446807] = {
["source"] = "炸弹",
["event"] = "SPELL_CAST_START",
["npcID"] = 222787,
},
[427356] = {
["source"] = "虔诚的牧师",
["event"] = "SPELL_CAST_START",
["npcID"] = 206697,
},
[376169] = {
["event"] = "SPELL_CAST_START",
["source"] = "高阶奇术师富拉尔",
["npcID"] = 189905,
},
[438618] = {
["event"] = "SPELL_CAST_START",
["source"] = "充血的爬行者",
["npcID"] = 214840,
},
[427357] = {
["source"] = "虔诚的牧师",
["event"] = "SPELL_CAST_START",
["npcID"] = 206697,
},
[376170] = {
["encounterName"] = "腐朽主母怒眼",
["source"] = "腐朽主母怒眼",
["npcID"] = 186121,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2569,
},
[410978] = {
["event"] = "SPELL_CAST_START",
["source"] = "贾拉丁猎龙者",
["npcID"] = 202108,
},
[376171] = {
["event"] = "SPELL_CAST_START",
["source"] = "拜荒唤冰者",
["npcID"] = 190377,
},
[427359] = {
["isChanneled"] = true,
["source"] = "阿拉希步兵",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206705,
},
[385386] = {
["event"] = "SPELL_CAST_START",
["source"] = "卑微的侍从",
["npcID"] = 192702,
},
[423265] = {
["encounterName"] = "丁达尔·迅贤，烈焰预言者",
["source"] = "丁达尔·迅贤",
["npcID"] = 209090,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[438622] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "充血的爬行者",
["npcID"] = 214840,
},
[386411] = {
["encounterName"] = "提拉和马鲁克",
["source"] = "提拉",
["npcID"] = 186339,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[88445] = {
["event"] = "SPELL_CAST_START",
["source"] = "黑铁哨兵",
["npcID"] = 8566,
},
[384365] = {
["source"] = "诺库德长枪大师",
["event"] = "SPELL_CAST_START",
["npcID"] = 192800,
},
[402793] = {
["source"] = "苟尔娜",
["event"] = "SPELL_CAST_START",
["npcID"] = 199853,
},
[384366] = {
["source"] = "旧忆枭",
["event"] = "SPELL_CAST_START",
["npcID"] = 221946,
},
[422245] = {
["encounterName"] = "老蜡须",
["source"] = "老蜡须",
["encounterID"] = 2829,
["event"] = "SPELL_CAST_START",
["npcID"] = 210153,
},
[387440] = {
["source"] = "尤克赫尔驭兽师",
["event"] = "SPELL_CAST_START",
["npcID"] = 195878,
},
[418153] = {
["event"] = "SPELL_CAST_START",
["source"] = "麻烦精无毛",
["npcID"] = 213550,
},
[377204] = {
["encounterName"] = "督军莎尔佳",
["source"] = "督军莎尔佳",
["npcID"] = 189901,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2611,
},
[412012] = {
["isChanneled"] = true,
["source"] = "永恒切时者",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 205408,
},
[404846] = {
["encounterName"] = "玛格莫莱克斯",
["source"] = "玛格莫莱克斯",
["npcID"] = 201579,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2683,
},
[426345] = {
["source"] = "虚触元素",
["event"] = "SPELL_CAST_START",
["npcID"] = 212400,
},
[378229] = {
["encounterName"] = "劈爪的战团",
["source"] = "伤齿",
["npcID"] = 186124,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2570,
},
[195801] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "踏浪巨人",
["npcID"] = 95939,
},
[372087] = {
["event"] = "SPELL_CAST_START",
["source"] = "亵渎者德拉加尔",
["npcID"] = 187897,
},
[374135] = {
["source"] = "松蹄头领",
["event"] = "SPELL_CAST_START",
["npcID"] = 193595,
},
[393588] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "巢穴守护者基鲁斯",
["npcID"] = 198214,
},
[379256] = {
["encounterName"] = "青刃",
["source"] = "龙裔幻象",
["npcID"] = 192955,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2585,
},
[408946] = {
["event"] = "SPELL_CAST_START",
["source"] = "碎裂恩护者",
["npcID"] = 198870,
},
[429422] = {
["source"] = "咒炉塑石者",
["event"] = "SPELL_CAST_START",
["npcID"] = 214066,
},
[463206] = {
["encounterName"] = "酿造大师阿德里尔",
["source"] = "主厨丘伊",
["npcID"] = 214697,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[372093] = {
["source"] = "野火元素",
["event"] = "SPELL_CAST_START",
["npcID"] = 210626,
},
[118905] = {
["source"] = "电能图腾",
["event"] = "SPELL_CAST_START",
["npcID"] = 61245,
},
[392569] = {
["event"] = "SPELL_CAST_START",
["source"] = "烈焰之咽",
["npcID"] = 197697,
},
[440687] = {
["event"] = "SPELL_CAST_START",
["source"] = "蜂王浆供应商",
["npcID"] = 220141,
},
[409975] = {
["event"] = "SPELL_CAST_START",
["source"] = "贾拉丁指挥官",
["npcID"] = 202109,
},
[199389] = {
["encounterName"] = "德萨隆",
["source"] = "德萨隆",
["npcID"] = 99200,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1838,
},
[429427] = {
["source"] = "咒炉塑石者",
["event"] = "SPELL_CAST_START",
["npcID"] = 214066,
},
[445808] = {
["source"] = "裂跖者",
["event"] = "SPELL_CAST_START",
["npcID"] = 216555,
},
[11990] = {
["isChanneled"] = true,
["source"] = "火鬃招炎者",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4334,
},
[392574] = {
["event"] = "SPELL_CAST_START",
["source"] = "暴风引导者",
["npcID"] = 198047,
},
[209628] = {
["encounterName"] = "顾问麦兰杜斯",
["source"] = "顾问麦兰杜斯",
["npcID"] = 104218,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1870,
},
[412027] = {
["encounterName"] = "时空领主戴欧斯",
["source"] = "永恒守护者",
["npcID"] = 205212,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[392576] = {
["event"] = "SPELL_CAST_START",
["source"] = "暴风引导者",
["npcID"] = 198047,
},
[405886] = {
["encounterName"] = "警戒管事兹斯卡恩",
["source"] = "龙火魔像",
["npcID"] = 203230,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[464240] = {
["source"] = "高阶牧师艾姆雅",
["event"] = "SPELL_CAST_START",
["npcID"] = 212827,
},
[445813] = {
["event"] = "SPELL_CAST_START",
["source"] = "不稳定的测试对象",
["npcID"] = 216328,
},
[406911] = {
["event"] = "SPELL_CAST_START",
["source"] = "碎裂勇士",
["npcID"] = 201288,
},
[392579] = {
["event"] = "SPELL_CAST_START",
["source"] = "采石场碎岩者",
["npcID"] = 197831,
},
[463218] = {
["event"] = "SPELL_CAST_START",
["source"] = "雇佣的打手",
["npcID"] = 210269,
},
[407936] = {
["encounterName"] = "奈萨里奥的回响",
["source"] = "奈萨里奥",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[448888] = {
["encounterName"] = "拉夏南",
["source"] = "拉夏南",
["encounterID"] = 2839,
["event"] = "SPELL_CAST_START",
["npcID"] = 213937,
},
[372107] = {
["encounterName"] = "柯姬雅·焰蹄",
["source"] = "柯姬雅·焰蹄",
["npcID"] = 189232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[22121] = {
["event"] = "SPELL_CAST_START",
["source"] = "森步弓手",
["npcID"] = 194041,
},
[452985] = {
["source"] = "攻城元帅泰克佐克",
["event"] = "SPELL_CAST_START",
["npcID"] = 215987,
},
[413059] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗影之罐",
["npcID"] = 206019,
},
[446843] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "软泥可汗",
["npcID"] = 216049,
},
[413060] = {
["event"] = "SPELL_CAST_START",
["source"] = "火焰之罐",
["npcID"] = 206022,
},
[389514] = {
["event"] = "SPELL_CAST_START",
["source"] = "巴祖阿尔",
["npcID"] = 193532,
},
[406918] = {
["event"] = "SPELL_CAST_START",
["source"] = "贾拉丁熔岩术师",
["npcID"] = 202256,
},
[424322] = {
["source"] = "炽焰魔",
["event"] = "SPELL_CAST_START",
["npcID"] = 220815,
},
[400777] = {
["encounterName"] = "长老莱修克",
["source"] = "莱修克",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[345495] = {
["source"] = "起泡脓包",
["event"] = "SPELL_CAST_START",
["npcID"] = 175519,
},
[376208] = {
["encounterName"] = "时空领主戴欧斯",
["source"] = "时空领主戴欧斯",
["npcID"] = 184125,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2559,
},
[431491] = {
["event"] = "SPELL_CAST_START",
["source"] = "夜幕司令官",
["npcID"] = 214762,
},
[457085] = {
["source"] = "旧忆炎魔之王",
["event"] = "SPELL_CAST_START",
["npcID"] = 212088,
},
[408969] = {
["source"] = "巨硕泥浆",
["event"] = "SPELL_CAST_START",
["npcID"] = 192519,
},
[438658] = {
["encounterName"] = "凝结聚合体",
["source"] = "凝结聚合体",
["npcID"] = 216320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2905,
},
[408970] = {
["event"] = "SPELL_CAST_START",
["source"] = "碎裂恩护者",
["npcID"] = 198870,
},
[431493] = {
["source"] = "夜幕咒刃",
["event"] = "SPELL_CAST_START",
["npcID"] = 228538,
},
[448897] = {
["source"] = "米兹克",
["event"] = "SPELL_CAST_START",
["npcID"] = 211582,
},
[431494] = {
["event"] = "SPELL_CAST_START",
["source"] = "夜幕战略家",
["npcID"] = 213934,
},
[424328] = {
["event"] = "SPELL_CAST_START",
["source"] = "蜡尾恫吓者",
["npcID"] = 213000,
},
[423305] = {
["encounterName"] = "斯卡丁巨怪",
["source"] = "虚空石畸体",
["encounterID"] = 2836,
["event"] = "SPELL_CAST_START",
["npcID"] = 207207,
},
[201959] = {
["event"] = "SPELL_CAST_START",
["source"] = "烬壳统御者",
["npcID"] = 113536,
},
[418187] = {
["encounterName"] = "梦境议会",
["source"] = "艾尔雯",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208365,
},
[432520] = {
["source"] = "夜幕暗法师",
["event"] = "SPELL_CAST_START",
["npcID"] = 213893,
},
[427402] = {
["source"] = "被诅咒的雷鸫守卫",
["event"] = "SPELL_CAST_START",
["npcID"] = 207197,
},
[420236] = {
["encounterName"] = "丁达尔·迅贤，烈焰预言者",
["source"] = "丁达尔·迅贤",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[421260] = {
["event"] = "SPELL_CAST_START",
["source"] = "奥罗斯托",
["npcID"] = 209574,
},
[369049] = {
["encounterName"] = "艾博隆",
["source"] = "宝库守卫",
["npcID"] = 186107,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2558,
},
[369050] = {
["event"] = "SPELL_CAST_START",
["source"] = "诺库德鞭雷者",
["npcID"] = 188231,
},
[427404] = {
["source"] = "驭虚者",
["event"] = "SPELL_CAST_START",
["npcID"] = 212786,
},
[383385] = {
["event"] = "SPELL_CAST_START",
["source"] = "污秽呼唤者",
["npcID"] = 185656,
},
[198379] = {
["encounterName"] = "大德鲁伊格兰达里斯",
["source"] = "大德鲁伊格兰达里斯",
["npcID"] = 96512,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1836,
},
[439692] = {
["encounterName"] = "女王之牙",
["source"] = "恩克斯",
["npcID"] = 216648,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2908,
},
[199915] = {
["encounterName"] = "审判官托蒙托鲁姆",
["source"] = "无面虚空法师",
["npcID"] = 99651,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1850,
},
[446859] = {
["source"] = "黑血恐魔",
["event"] = "SPELL_CAST_START",
["npcID"] = 215185,
},
[406934] = {
["event"] = "SPELL_CAST_START",
["source"] = "贾拉丁熔岩术师",
["npcID"] = 202256,
},
[191726] = {
["event"] = "SPELL_CAST_START",
["source"] = "强力闪电元素",
["npcID"] = 97022,
},
[125056] = {
["event"] = "SPELL_CAST_START",
["source"] = "红稀有",
["npcID"] = 165189,
},
[455052] = {
["source"] = "监督者拉德洛克",
["event"] = "SPELL_CAST_START",
["npcID"] = 220897,
},
[375201] = {
["source"] = "林地欧胡纳",
["event"] = "SPELL_CAST_START",
["npcID"] = 187496,
},
[405914] = {
["encounterName"] = "融合体密室",
["source"] = "暗影烈焰融合体",
["npcID"] = 201934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[416152] = {
["encounterName"] = "时空领主戴欧斯",
["source"] = "时空领主戴欧斯",
["npcID"] = 199000,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[384416] = {
["encounterName"] = "肠击",
["source"] = "肠击",
["npcID"] = 186116,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[418200] = {
["event"] = "SPELL_CAST_START",
["source"] = "永恒裂隙法师",
["npcID"] = 208698,
},
[398749] = {
["source"] = "铁潮护舷者",
["event"] = "SPELL_CAST_START",
["npcID"] = 200850,
},
[449937] = {
["source"] = "血喉",
["event"] = "SPELL_CAST_START",
["npcID"] = 219264,
},
[369061] = {
["encounterName"] = "艾博隆",
["source"] = "艾博隆",
["npcID"] = 184422,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2558,
},
[385442] = {
["encounterName"] = "吞喉巨蛙",
["source"] = "吞喉巨蛙",
["npcID"] = 189722,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2616,
},
[427417] = {
["source"] = "烈焰先知",
["event"] = "SPELL_CAST_START",
["npcID"] = 207315,
},
[404896] = {
["encounterName"] = "融合体密室",
["source"] = "永恒炽焰",
["npcID"] = 201773,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[459155] = {
["source"] = "旧忆巫妖王",
["event"] = "SPELL_CAST_START",
["npcID"] = 224157,
},
[423324] = {
["encounterName"] = "斯卡莫拉克",
["source"] = "斯卡莫拉克",
["encounterID"] = 2880,
["event"] = "SPELL_CAST_START",
["npcID"] = 210156,
},
[421277] = {
["encounterName"] = "蜡烛之王",
["source"] = "蜡烛之王",
["encounterID"] = 2787,
["event"] = "SPELL_CAST_START",
["npcID"] = 208745,
},
[191732] = {
["event"] = "SPELL_CAST_START",
["source"] = "强力闪电元素",
["npcID"] = 97022,
},
[378282] = {
["event"] = "SPELL_CAST_START",
["source"] = "卡拉希奇术师",
["npcID"] = 192788,
},
[408995] = {
["isChanneled"] = true,
["source"] = "巨硕泥浆",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192519,
},
[405924] = {
["event"] = "SPELL_CAST_START",
["source"] = "克洛诺·沙舌",
["npcID"] = 205622,
},
[424352] = {
["encounterName"] = "瘤根",
["source"] = "瘤根",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[381357] = {
["source"] = "盐须奥獭",
["event"] = "SPELL_CAST_START",
["npcID"] = 199784,
},
[197365] = {
["encounterName"] = "艾萨拉之怒",
["source"] = "艾萨拉之怒",
["npcID"] = 96028,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1814,
},
[425379] = {
["source"] = "烈焰散播者",
["event"] = "SPELL_CAST_START",
["npcID"] = 210294,
},
[369073] = {
["event"] = "SPELL_CAST_START",
["source"] = "平原行者猛犸",
["npcID"] = 190906,
},
[374192] = {
["source"] = "覆甲裂蜥",
["event"] = "SPELL_CAST_START",
["npcID"] = 217524,
},
[191735] = {
["event"] = "SPELL_CAST_START",
["source"] = "魔誓侍从",
["npcID"] = 98954,
},
[425381] = {
["isChanneled"] = true,
["source"] = "火焰之地烈焰守卫",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210290,
},
[288199] = {
["encounterName"] = "吉安娜·普罗德摩尔",
["source"] = "吉安娜·普罗德摩尔",
["encounterID"] = 2281,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 146409,
},
[407978] = {
["encounterName"] = "迦拉克隆之荒",
["source"] = "昂佐恩",
["encounterID"] = 2668,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 201792,
},
[372147] = {
["event"] = "SPELL_CAST_START",
["source"] = "巴拉拉",
["npcID"] = 193457,
},
[395694] = {
["event"] = "SPELL_CAST_START",
["source"] = "拜荒突击者",
["npcID"] = 199037,
},
[214771] = {
["encounterName"] = "审判官托蒙托鲁姆",
["source"] = "无面虚空法师",
["npcID"] = 99651,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1850,
},
[388529] = {
["source"] = "破浪海巨人",
["event"] = "SPELL_CAST_START",
["npcID"] = 192931,
},
[427432] = {
["source"] = "烈焰先知",
["event"] = "SPELL_CAST_START",
["npcID"] = 207315,
},
[20716] = {
["source"] = "青铜巨龙圣地守卫者",
["event"] = "SPELL_CAST_START",
["npcID"] = 26277,
},
[198904] = {
["event"] = "SPELL_CAST_START",
["source"] = "腐心树妖",
["npcID"] = 99358,
},
[183548] = {
["event"] = "SPELL_CAST_START",
["source"] = "石爪虫王",
["npcID"] = 102404,
},
[372151] = {
["event"] = "SPELL_CAST_START",
["source"] = "嚼肝熊",
["npcID"] = 186284,
},
[447909] = {
["event"] = "SPELL_CAST_START",
["source"] = "机械大师顿斯坦",
["npcID"] = 217353,
},
[421292] = {
["encounterName"] = "梦境议会",
["source"] = "艾尔雯",
["npcID"] = 208365,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2728,
},
[459171] = {
["source"] = "瓦格里暗影戒卫者",
["event"] = "SPELL_CAST_START",
["npcID"] = 227940,
},
[425388] = {
["source"] = "火妖狱焰卫士",
["event"] = "SPELL_CAST_START",
["npcID"] = 210295,
},
[394676] = {
["event"] = "SPELL_CAST_START",
["source"] = "议会唤冰者",
["npcID"] = 198501,
},
[409009] = {
["source"] = "塑峰者洛莱克",
["event"] = "SPELL_CAST_START",
["npcID"] = 201522,
},
[412081] = {
["event"] = "SPELL_CAST_START",
["source"] = "硕大的巨龙魔像",
["npcID"] = 203826,
},
[449960] = {
["event"] = "SPELL_CAST_START",
["source"] = "深水蜃鱼人",
["npcID"] = 215750,
},
[60876] = {
["source"] = "回溯食尸鬼",
["event"] = "SPELL_CAST_START",
["npcID"] = 221434,
},
[389560] = {
["source"] = "黑曜暴君",
["event"] = "SPELL_CAST_START",
["npcID"] = 202483,
},
[452009] = {
["event"] = "SPELL_CAST_START",
["source"] = "被劫持的踏铁者",
["npcID"] = 219287,
},
[429487] = {
["encounterName"] = "斯卡丁巨怪",
["source"] = "虚空石畸体",
["encounterID"] = 2836,
["event"] = "SPELL_CAST_START",
["npcID"] = 207207,
},
[386490] = {
["encounterName"] = "格拉尼斯",
["source"] = "诺库德破坏者",
["npcID"] = 195821,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2637,
},
[288211] = {
["encounterName"] = "吉安娜·普罗德摩尔",
["source"] = "吉安娜·普罗德摩尔",
["encounterID"] = 2281,
["event"] = "SPELL_CAST_START",
["npcID"] = 146409,
},
[425394] = {
["encounterName"] = "布雷炙孔",
["source"] = "布雷炙孔",
["encounterID"] = 2826,
["event"] = "SPELL_CAST_START",
["npcID"] = 208743,
},
[449965] = {
["source"] = "枯棘",
["event"] = "SPELL_CAST_START",
["npcID"] = 214790,
},
[452013] = {
["event"] = "SPELL_CAST_START",
["source"] = "狂飙狼",
["npcID"] = 222797,
},
[409016] = {
["source"] = "塑峰者洛莱克",
["event"] = "SPELL_CAST_START",
["npcID"] = 201522,
},
[427444] = {
["source"] = "烈焰先知",
["event"] = "SPELL_CAST_START",
["npcID"] = 207315,
},
[376257] = {
["encounterName"] = "巢穴守护者迪乌尔娜",
["source"] = "塔拉赛掠地者",
["npcID"] = 191225,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[409018] = {
["event"] = "SPELL_CAST_START",
["source"] = "失败的原型",
["npcID"] = 203927,
},
[447921] = {
["source"] = "电鳞钻洞者",
["event"] = "SPELL_CAST_START",
["npcID"] = 222280,
},
[432565] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗影具象",
["npcID"] = 211341,
},
[388544] = {
["encounterName"] = "茂林古树",
["source"] = "茂林古树",
["npcID"] = 196482,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2563,
},
[392640] = {
["event"] = "SPELL_CAST_START",
["source"] = "雷霆之颅",
["npcID"] = 197698,
},
[201983] = {
["event"] = "SPELL_CAST_START",
["source"] = "烬壳统御者",
["npcID"] = 113537,
},
[431544] = {
["source"] = "坚韧的搬运者",
["event"] = "SPELL_CAST_START",
["npcID"] = 214935,
},
[285148] = {
["source"] = "“苦痛”赛维娅·安戈萨",
["event"] = "SPELL_CAST_START",
["npcID"] = 144578,
},
[389572] = {
["source"] = "迷时魔暴龙",
["event"] = "SPELL_CAST_START",
["npcID"] = 187262,
},
[447926] = {
["source"] = "电鳞钻洞者",
["event"] = "SPELL_CAST_START",
["npcID"] = 222280,
},
[452024] = {
["event"] = "SPELL_CAST_START",
["source"] = "土灵护卫哨兵",
["npcID"] = 216221,
},
[387528] = {
["source"] = "拜荒震地者",
["event"] = "SPELL_CAST_START",
["npcID"] = 207275,
},
[445882] = {
["source"] = "暗夜扭曲之猪",
["event"] = "SPELL_CAST_START",
["npcID"] = 215206,
},
[459191] = {
["source"] = "旧忆巫妖王",
["event"] = "SPELL_CAST_START",
["npcID"] = 224157,
},
[195332] = {
["encounterName"] = "阿什高姆",
["source"] = "余烬",
["npcID"] = 99233,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1816,
},
[420289] = {
["source"] = "拜荒觅风者",
["event"] = "SPELL_CAST_START",
["npcID"] = 207276,
},
[431552] = {
["event"] = "SPELL_CAST_START",
["source"] = "恐网鞭笞者",
["npcID"] = 221303,
},
[421316] = {
["encounterName"] = "拉罗达尔，烈焰守护者",
["source"] = "拉罗达尔，烈焰守护者",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[400842] = {
["source"] = "扎卡利猎炎者",
["event"] = "SPELL_CAST_START",
["npcID"] = 199828,
},
[373201] = {
["event"] = "SPELL_CAST_START",
["source"] = "风鳍砸天者",
["npcID"] = 187431,
},
[456125] = {
["source"] = "深邃蝎子",
["event"] = "SPELL_CAST_START",
["npcID"] = 217742,
},
[401867] = {
["encounterName"] = "扎卡利突袭",
["source"] = "黑曜卫士",
["npcID"] = 200836,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[188169] = {
["encounterName"] = "洛克莫拉",
["source"] = "洛克莫拉",
["npcID"] = 91003,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1790,
},
[375251] = {
["encounterName"] = "岩浆之牙",
["source"] = "岩浆之牙",
["npcID"] = 181861,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2610,
},
[437700] = {
["encounterName"] = "大捻接师艾佐",
["source"] = "大捻接师艾佐",
["npcID"] = 216658,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2909,
},
[396751] = {
["source"] = "旧忆加兹瑞拉",
["event"] = "SPELL_CAST_START",
["npcID"] = 221578,
},
[369110] = {
["encounterName"] = "艾博隆",
["source"] = "艾博隆",
["npcID"] = 184422,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2558,
},
[452035] = {
["event"] = "SPELL_CAST_START",
["source"] = "狂飙狼",
["npcID"] = 222797,
},
[391634] = {
["event"] = "SPELL_CAST_START",
["source"] = "冰川始祖龙",
["npcID"] = 190403,
},
[285165] = {
["source"] = "“苦痛”赛维娅·安戈萨",
["event"] = "SPELL_CAST_START",
["npcID"] = 144578,
},
[376279] = {
["encounterName"] = "泰洛斯",
["source"] = "泰洛斯",
["npcID"] = 190496,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[421325] = {
["encounterName"] = "拉罗达尔，烈焰守护者",
["source"] = "拉罗达尔，烈焰守护者",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[193803] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "喷油蛆虫",
["npcID"] = 92538,
},
[409041] = {
["event"] = "SPELL_CAST_START",
["source"] = "失败的原型",
["npcID"] = 203927,
},
[427469] = {
["source"] = "狂热的咒术师",
["event"] = "SPELL_CAST_START",
["npcID"] = 206698,
},
[456136] = {
["event"] = "SPELL_CAST_START",
["source"] = "晦影",
["npcID"] = 218452,
},
[420306] = {
["source"] = "拜荒者锁链大师",
["event"] = "SPELL_CAST_START",
["npcID"] = 211058,
},
[392665] = {
["source"] = "迷时雷皮兽",
["event"] = "SPELL_CAST_START",
["npcID"] = 187258,
},
[384476] = {
["source"] = "诺库德长弓手",
["event"] = "SPELL_CAST_START",
["npcID"] = 192789,
},
[459210] = {
["source"] = "虚缚抢劫者",
["event"] = "SPELL_CAST_START",
["npcID"] = 212765,
},
[386526] = {
["event"] = "SPELL_CAST_START",
["source"] = "空魔龙蛙",
["npcID"] = 187246,
},
[209676] = {
["encounterName"] = "顾问麦兰杜斯",
["source"] = "顾问麦兰杜斯",
["npcID"] = 104218,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1870,
},
[285177] = {
["encounterName"] = "吉安娜·普罗德摩尔",
["source"] = "吉安娜·普罗德摩尔",
["encounterID"] = 2281,
["event"] = "SPELL_CAST_START",
["npcID"] = 146409,
},
[290296] = {
["isChanneled"] = true,
["source"] = "焦虑者耐拉莉亚",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 150736,
},
[382434] = {
["encounterName"] = "莱萨杰丝，噬雷之龙",
["source"] = "莱萨杰丝",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[376292] = {
["encounterName"] = "时空领主戴欧斯",
["source"] = "时空领主戴欧斯",
["npcID"] = 184125,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2559,
},
[451026] = {
["encounterName"] = "代言人夏多克朗",
["source"] = "代言人夏多克朗",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[408029] = {
["encounterName"] = "迦拉克隆之荒",
["source"] = "洛斯凯勒兹",
["encounterID"] = 2668,
["event"] = "SPELL_CAST_START",
["npcID"] = 201790,
},
[437719] = {
["event"] = "SPELL_CAST_START",
["source"] = "拜荒吟风者",
["npcID"] = 190373,
},
[456147] = {
["source"] = "皇家平原鹰",
["event"] = "SPELL_CAST_START",
["npcID"] = 222329,
},
[421340] = {
["source"] = "“铁砧”",
["event"] = "SPELL_CAST_START",
["npcID"] = 206478,
},
[372201] = {
["event"] = "SPELL_CAST_START",
["source"] = "卡拉希焚钢者",
["npcID"] = 189464,
},
[427484] = {
["source"] = "狂热的咒术师",
["event"] = "SPELL_CAST_START",
["npcID"] = 206698,
},
[8858] = {
["source"] = "黑铁挖掘者",
["event"] = "SPELL_CAST_START",
["npcID"] = 47276,
},
[387559] = {
["encounterName"] = "原始海啸",
["source"] = "原始海啸",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[421343] = {
["encounterName"] = "斯莫德隆",
["source"] = "斯莫德隆",
["encounterID"] = 2824,
["event"] = "SPELL_CAST_START",
["npcID"] = 200927,
},
[196883] = {
["event"] = "SPELL_CAST_START",
["source"] = "艾瑟德林·拉文凯斯领主",
["npcID"] = 98521,
},
[396774] = {
["source"] = "山崖护卫博达妮",
["event"] = "SPELL_CAST_START",
["npcID"] = 202612,
},
[396775] = {
["event"] = "SPELL_CAST_START",
["source"] = "原始塑地者",
["npcID"] = 190996,
},
[384492] = {
["source"] = "诺库德兽王",
["event"] = "SPELL_CAST_START",
["npcID"] = 192794,
},
[424419] = {
["encounterName"] = "戴尔克莱上尉",
["source"] = "戴尔克莱上尉",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 207946,
},
[384493] = {
["source"] = "席卡尔游侠",
["event"] = "SPELL_CAST_START",
["npcID"] = 188414,
},
[423396] = {
["source"] = "蕾兹卡",
["event"] = "SPELL_CAST_START",
["npcID"] = 208740,
},
[424420] = {
["encounterName"] = "戴尔克莱上尉",
["source"] = "泰纳·杜尔玛",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 211289,
},
[424421] = {
["source"] = "泰纳·杜尔玛",
["event"] = "SPELL_CAST_START",
["npcID"] = 211289,
},
[414184] = {
["encounterName"] = "伊律迪孔",
["source"] = "伊律迪孔",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[424423] = {
["source"] = "歇尼麦尔中士",
["event"] = "SPELL_CAST_START",
["npcID"] = 211291,
},
[400877] = {
["source"] = "阴燃的猎犬",
["event"] = "SPELL_CAST_START",
["npcID"] = 205045,
},
[386546] = {
["event"] = "SPELL_CAST_START",
["source"] = "奥术元素",
["npcID"] = 186741,
},
[386547] = {
["encounterName"] = "提拉和马鲁克",
["source"] = "提拉",
["npcID"] = 186339,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[387571] = {
["encounterName"] = "原始海啸",
["source"] = "原始海啸",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[429545] = {
["event"] = "SPELL_CAST_START",
["source"] = "虚触代言人",
["npcID"] = 223469,
},
[381430] = {
["event"] = "SPELL_CAST_START",
["source"] = "撼地暴怒者",
["npcID"] = 215359,
},
[415215] = {
["encounterName"] = "迷时战场",
["source"] = "联盟弓手",
["npcID"] = 206352,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[400883] = {
["source"] = "扎卡利猎炎者",
["event"] = "SPELL_CAST_START",
["npcID"] = 199828,
},
[377338] = {
["event"] = "SPELL_CAST_START",
["source"] = "小型水元素",
["npcID"] = 190406,
},
[424431] = {
["event"] = "SPELL_CAST_START",
["source"] = "艾蕾娜·安博兰兹",
["npcID"] = 211290,
},
[372222] = {
["encounterName"] = "青刃",
["source"] = "青刃",
["npcID"] = 186739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[385531] = {
["encounterName"] = "吞喉巨蛙",
["source"] = "吞喉巨蛙",
["npcID"] = 189722,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2616,
},
[423410] = {
["source"] = "蕾兹卡",
["event"] = "SPELL_CAST_START",
["npcID"] = 208740,
},
[392698] = {
["source"] = "旧忆野猪人",
["event"] = "SPELL_CAST_START",
["npcID"] = 221743,
},
[375296] = {
["source"] = "育幼龙人",
["event"] = "SPELL_CAST_START",
["npcID"] = 187131,
},
[445935] = {
["source"] = "炸弹",
["event"] = "SPELL_CAST_START",
["npcID"] = 222265,
},
[377344] = {
["event"] = "SPELL_CAST_START",
["source"] = "领地鹰隼",
["npcID"] = 192329,
},
[372226] = {
["event"] = "SPELL_CAST_START",
["source"] = "卡拉希护骨者",
["npcID"] = 189265,
},
[394749] = {
["event"] = "SPELL_CAST_START",
["source"] = "不稳定的风暴",
["npcID"] = 198716,
},
[385536] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "拜荒烈焰舞者",
["npcID"] = 190206,
},
[387585] = {
["encounterName"] = "原始海啸",
["source"] = "原始海啸",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[278044] = {
["event"] = "SPELL_CAST_START",
["source"] = "摩尔拉什",
["npcID"] = 201549,
},
[422393] = {
["source"] = "掠行之暗",
["event"] = "SPELL_CAST_START",
["npcID"] = 208457,
},
[412156] = {
["event"] = "SPELL_CAST_START",
["source"] = "迷时翔机",
["npcID"] = 205723,
},
[381444] = {
["encounterName"] = "劈爪的战团",
["source"] = "莉拉·劈爪",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186122,
},
[450037] = {
["source"] = "失控之塔",
["event"] = "SPELL_CAST_START",
["npcID"] = 220068,
},
[431612] = {
["source"] = "蛛魔喷毒者",
["event"] = "SPELL_CAST_START",
["npcID"] = 219661,
},
[416256] = {
["encounterName"] = "伊律迪孔",
["source"] = "伊律迪孔的造物",
["npcID"] = 204918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[449017] = {
["isChanneled"] = true,
["source"] = "提加雷特",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215600,
},
[382474] = {
["event"] = "SPELL_CAST_START",
["source"] = "腐朽代言人",
["npcID"] = 186191,
},
[432638] = {
["source"] = "虚空晋升者",
["event"] = "SPELL_CAST_START",
["npcID"] = 212793,
},
[433662] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "黑血",
["npcID"] = 216856,
},
[49241] = {
["source"] = "红玉警戒者",
["event"] = "SPELL_CAST_START",
["npcID"] = 27542,
},
[395784] = {
["event"] = "SPELL_CAST_START",
["source"] = "莱萨杰丝",
["npcID"] = 199031,
},
[450043] = {
["source"] = "失控之塔",
["event"] = "SPELL_CAST_START",
["npcID"] = 220068,
},
[447996] = {
["event"] = "SPELL_CAST_START",
["source"] = "恐怖的风暴啸狼",
["npcID"] = 224972,
},
[444925] = {
["event"] = "SPELL_CAST_START",
["source"] = "飘移的孢堇",
["npcID"] = 214961,
},
[384524] = {
["encounterName"] = "看护者伊里度斯",
["source"] = "看护者伊里度斯",
["npcID"] = 189719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[449021] = {
["source"] = "提加雷特",
["event"] = "SPELL_CAST_START",
["npcID"] = 215600,
},
[403978] = {
["encounterName"] = "警戒管事兹斯卡恩",
["source"] = "兹斯卡恩",
["npcID"] = 202375,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2689,
},
[396812] = {
["event"] = "SPELL_CAST_START",
["source"] = "缚法节杖",
["npcID"] = 196576,
},
[385551] = {
["encounterName"] = "吞喉巨蛙",
["source"] = "吞喉巨蛙",
["npcID"] = 189722,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2616,
},
[416264] = {
["encounterName"] = "时空领主戴欧斯",
["source"] = "时空领主戴欧斯",
["npcID"] = 199000,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[388623] = {
["encounterName"] = "茂林古树",
["source"] = "茂林古树",
["npcID"] = 196482,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2563,
},
[385553] = {
["encounterName"] = "莱萨杰丝，噬雷之龙",
["source"] = "逐风助战者",
["npcID"] = 194990,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[448002] = {
["event"] = "SPELL_CAST_START",
["source"] = "恐怖的风暴啸狼",
["npcID"] = 224972,
},
[208165] = {
["encounterName"] = "塔丽克萨·火冠",
["source"] = "塔丽克萨·火冠",
["npcID"] = 104217,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1869,
},
[384531] = {
["encounterName"] = "肠击",
["source"] = "烂牙土狼",
["npcID"] = 194745,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[212773] = {
["event"] = "SPELL_CAST_START",
["source"] = "暮色卫队援军",
["npcID"] = 107073,
},
[407055] = {
["source"] = "高阶先知吉哈塔尔",
["event"] = "SPELL_CAST_START",
["npcID"] = 199842,
},
[197418] = {
["encounterName"] = "伊莉萨娜·拉文凯斯",
["source"] = "伊莉萨娜·拉文凯斯",
["npcID"] = 98696,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1833,
},
[422414] = {
["source"] = "残步恐魔",
["event"] = "SPELL_CAST_START",
["npcID"] = 208456,
},
[456198] = {
["source"] = "斯玛拉格尔",
["event"] = "SPELL_CAST_START",
["npcID"] = 220362,
},
[424462] = {
["encounterName"] = "戴尔克莱上尉",
["source"] = "泰纳·杜尔玛",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 211289,
},
[378394] = {
["event"] = "SPELL_CAST_START",
["source"] = "升腾之藻",
["npcID"] = 221062,
},
[387608] = {
["isChanneled"] = true,
["source"] = "尤克赫尔腐蚀者",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 195842,
},
[183088] = {
["event"] = "SPELL_CAST_START",
["source"] = "巨石破坏者",
["npcID"] = 90997,
},
[388635] = {
["encounterName"] = "莱萨杰丝，噬雷之龙",
["source"] = "不稳定的火花",
["npcID"] = 194999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[373279] = {
["event"] = "SPELL_CAST_START",
["source"] = "彼岸之物",
["npcID"] = 189988,
},
[405016] = {
["encounterName"] = "融合体密室",
["source"] = "暗影精华",
["npcID"] = 201774,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[381470] = {
["encounterName"] = "劈爪的战团",
["source"] = "狡诈图腾",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186125,
},
[387613] = {
["source"] = "尤克赫尔腐蚀者",
["event"] = "SPELL_CAST_START",
["npcID"] = 195842,
},
[425492] = {
["encounterName"] = "火光之龙菲莱克",
["source"] = "菲莱克",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[434706] = {
["event"] = "SPELL_CAST_START",
["source"] = "品酒间侍从",
["npcID"] = 214920,
},
[197422] = {
["encounterName"] = "科达娜·邪歌",
["source"] = "科达娜·邪歌",
["npcID"] = 95888,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1818,
},
[387614] = {
["source"] = "尤克赫尔亡语者",
["event"] = "SPELL_CAST_START",
["npcID"] = 195851,
},
[392733] = {
["event"] = "SPELL_CAST_START",
["source"] = "入侵的清水钳嘴龟",
["npcID"] = 195506,
},
[419351] = {
["event"] = "SPELL_CAST_START",
["source"] = "永恒破坏者",
["npcID"] = 208438,
},
[392734] = {
["source"] = "碎裂劫掠者",
["event"] = "SPELL_CAST_START",
["npcID"] = 199374,
},
[431637] = {
["source"] = "夜幕影行者",
["event"] = "SPELL_CAST_START",
["npcID"] = 228537,
},
[426519] = {
["encounterName"] = "尼穆威，轮回编织者",
["source"] = "尼穆威",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 206172,
},
[284218] = {
["source"] = "拉德维克·晃簧",
["event"] = "SPELL_CAST_START",
["npcID"] = 144564,
},
[431639] = {
["source"] = "蛛魔破坏者",
["event"] = "SPELL_CAST_START",
["npcID"] = 212715,
},
[387618] = {
["encounterName"] = "原始海啸",
["source"] = "拜荒注能者",
["npcID"] = 196043,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[372262] = {
["event"] = "SPELL_CAST_START",
["source"] = "卡拉希裂骨者",
["npcID"] = 189467,
},
[392738] = {
["source"] = "恶臭者卡格波",
["event"] = "SPELL_CAST_START",
["npcID"] = 186660,
},
[456211] = {
["source"] = "斯玛拉格尔",
["event"] = "SPELL_CAST_START",
["npcID"] = 220362,
},
[445974] = {
["source"] = "炸弹",
["event"] = "SPELL_CAST_START",
["npcID"] = 222281,
},
[377383] = {
["event"] = "SPELL_CAST_START",
["source"] = "头领鹰隼",
["npcID"] = 192333,
},
[395811] = {
["source"] = "卡拉希碎骨者",
["event"] = "SPELL_CAST_START",
["npcID"] = 187599,
},
[385574] = {
["encounterName"] = "莱萨杰丝，噬雷之龙",
["source"] = "莱萨杰丝",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[284223] = {
["source"] = "拉德维克·晃簧",
["event"] = "SPELL_CAST_START",
["npcID"] = 144564,
},
[431645] = {
["source"] = "黑暗药剂师",
["event"] = "SPELL_CAST_START",
["npcID"] = 219651,
},
[451097] = {
["encounterName"] = "阿努布伊卡基",
["source"] = "苏雷吉好战者",
["npcID"] = 213932,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[212784] = {
["event"] = "SPELL_CAST_START",
["source"] = "警觉的审判者",
["npcID"] = 105715,
},
[451098] = {
["encounterName"] = "阿努布伊卡基",
["source"] = "苏雷吉好战者",
["npcID"] = 213932,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[395816] = {
["event"] = "SPELL_CAST_START",
["source"] = "卡拉希碎墙者",
["npcID"] = 187813,
},
[451099] = {
["encounterName"] = "阿努布伊卡基",
["source"] = "苏雷吉好战者",
["npcID"] = 213932,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[402983] = {
["source"] = "苟尔娜",
["event"] = "SPELL_CAST_START",
["npcID"] = 199853,
},
[391723] = {
["event"] = "SPELL_CAST_START",
["source"] = "烈焰之咽",
["npcID"] = 197697,
},
[101546] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "大地之灵",
["npcID"] = 69792,
},
[448030] = {
["event"] = "SPELL_CAST_START",
["source"] = "敏捷的追击者",
["npcID"] = 223181,
},
[395819] = {
["event"] = "SPELL_CAST_START",
["source"] = "卡拉希剥鳞者",
["npcID"] = 187908,
},
[451102] = {
["event"] = "SPELL_CAST_START",
["source"] = "扬升者维斯可里亚",
["npcID"] = 211261,
},
[412200] = {
["event"] = "SPELL_CAST_START",
["source"] = "迷时翔机",
["npcID"] = 205723,
},
[445984] = {
["event"] = "SPELL_CAST_START",
["source"] = "山顶利颚爬行者",
["npcID"] = 227980,
},
[391726] = {
["event"] = "SPELL_CAST_START",
["source"] = "雷霆之颅",
["npcID"] = 197698,
},
[458271] = {
["source"] = "莫斯艾兹克",
["event"] = "SPELL_CAST_START",
["npcID"] = 206203,
},
[402989] = {
["encounterName"] = "玛格莫莱克斯",
["source"] = "玛格莫莱克斯",
["npcID"] = 201579,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2683,
},
[394800] = {
["event"] = "SPELL_CAST_START",
["source"] = "议会唤地者",
["npcID"] = 198500,
},
[451107] = {
["event"] = "SPELL_CAST_START",
["source"] = "苏雷吉网法师",
["npcID"] = 210966,
},
[438823] = {
["source"] = "敬魔小鬼",
["event"] = "SPELL_CAST_START",
["npcID"] = 219161,
},
[394802] = {
["event"] = "SPELL_CAST_START",
["source"] = "议会唤雷者",
["npcID"] = 198502,
},
[375351] = {
["event"] = "SPELL_CAST_START",
["source"] = "冰川始祖龙",
["npcID"] = 190403,
},
[452133] = {
["source"] = "黑血融合体",
["event"] = "SPELL_CAST_START",
["npcID"] = 215205,
},
[431659] = {
["event"] = "SPELL_CAST_START",
["source"] = "凝织寡妇蛛",
["npcID"] = 216193,
},
[405042] = {
["encounterName"] = "被遗忘的实验体",
["source"] = "萨德里奥",
["npcID"] = 200913,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[393781] = {
["event"] = "SPELL_CAST_START",
["source"] = "火焰守卫",
["npcID"] = 192764,
},
[405043] = {
["event"] = "SPELL_CAST_START",
["source"] = "原始夜焰龙",
["npcID"] = 200931,
},
[377402] = {
["event"] = "SPELL_CAST_START",
["source"] = "注能者萨莉亚",
["npcID"] = 190405,
},
[393783] = {
["event"] = "SPELL_CAST_START",
["source"] = "伊斯卡克斯",
["npcID"] = 192761,
},
[453161] = {
["event"] = "SPELL_CAST_START",
["source"] = "魁梧的血卫",
["npcID"] = 216338,
},
[429615] = {
["encounterName"] = "尼穆威，轮回编织者",
["source"] = "尼穆威",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 206172,
},
[451114] = {
["encounterName"] = "阿努布伊卡基",
["source"] = "活化黑暗",
["npcID"] = 213905,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[445996] = {
["encounterName"] = "代言人夏多克朗",
["source"] = "代言人夏多克朗",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[395833] = {
["source"] = "回溯托里姆",
["event"] = "SPELL_CAST_START",
["npcID"] = 221923,
},
[390715] = {
["encounterName"] = "艾拉诺格",
["source"] = "艾拉诺格",
["npcID"] = 184972,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2587,
},
[393787] = {
["event"] = "SPELL_CAST_START",
["source"] = "伊斯卡克斯",
["npcID"] = 192761,
},
[420405] = {
["source"] = "风暴召唤者",
["event"] = "SPELL_CAST_START",
["npcID"] = 207041,
},
[396859] = {
["event"] = "SPELL_CAST_START",
["source"] = "暴怒峭岩",
["npcID"] = 187090,
},
[407097] = {
["source"] = "裂地者库西瓦",
["event"] = "SPELL_CAST_START",
["npcID"] = 199840,
},
[449071] = {
["source"] = "狗头人领职者",
["event"] = "SPELL_CAST_START",
["npcID"] = 204127,
},
[446000] = {
["source"] = "深邃幼虫",
["event"] = "SPELL_CAST_START",
["npcID"] = 215733,
},
[451119] = {
["event"] = "SPELL_CAST_START",
["source"] = "扬升者维斯可里亚",
["npcID"] = 211261,
},
[404027] = {
["encounterName"] = "鳞长萨卡雷斯",
["source"] = "萨卡雷斯",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[423479] = {
["source"] = "皇家点芯者",
["event"] = "SPELL_CAST_START",
["npcID"] = 210812,
},
[384577] = {
["encounterName"] = "肠击",
["source"] = "烂牙土狼",
["npcID"] = 194745,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[288345] = {
["encounterName"] = "吉安娜·普罗德摩尔",
["source"] = "吉安娜·普罗德摩尔",
["encounterID"] = 2281,
["event"] = "SPELL_CAST_START",
["npcID"] = 146409,
},
[290395] = {
["source"] = "佩里克·泰兹维普",
["event"] = "SPELL_CAST_START",
["npcID"] = 150750,
},
[374343] = {
["encounterName"] = "多拉苟萨的回响",
["source"] = "多拉苟萨的回响",
["npcID"] = 190609,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2565,
},
[372296] = {
["event"] = "SPELL_CAST_START",
["source"] = "焚钢指挥官",
["npcID"] = 189466,
},
[431674] = {
["source"] = "卡赫提伏击者",
["event"] = "SPELL_CAST_START",
["npcID"] = 217448,
},
[380487] = {
["encounterName"] = "泰洛斯",
["source"] = "泰洛斯",
["npcID"] = 190496,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[381512] = {
["encounterName"] = "基拉卡与厄克哈特·风脉",
["source"] = "厄克哈特·风脉",
["npcID"] = 190485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[427581] = {
["source"] = "坚韧的鬃罴",
["event"] = "SPELL_CAST_START",
["npcID"] = 210507,
},
[407107] = {
["source"] = "裂地者库西瓦",
["event"] = "SPELL_CAST_START",
["npcID"] = 199840,
},
[9053] = {
["source"] = "火鬃招炎者",
["event"] = "SPELL_CAST_START",
["npcID"] = 4334,
},
[377419] = {
["source"] = "库洛格·恐怖图腾",
["event"] = "SPELL_CAST_START",
["npcID"] = 189914,
},
[427583] = {
["event"] = "SPELL_CAST_START",
["source"] = "艾蕾娜·安博兰兹",
["npcID"] = 211290,
},
[387657] = {
["event"] = "SPELL_CAST_START",
["source"] = "塑山者",
["npcID"] = 186329,
},
[425536] = {
["source"] = "低贱的鼹鼠倌",
["event"] = "SPELL_CAST_START",
["npcID"] = 210818,
},
[381516] = {
["encounterName"] = "基拉卡与厄克哈特·风脉",
["source"] = "厄克哈特·风脉",
["npcID"] = 190485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[427585] = {
["source"] = "坚韧的鬃罴",
["event"] = "SPELL_CAST_START",
["npcID"] = 210507,
},
[420419] = {
["source"] = "风暴召唤者",
["event"] = "SPELL_CAST_START",
["npcID"] = 207041,
},
[204611] = {
["encounterName"] = "橡树之心",
["source"] = "橡树之心",
["npcID"] = 103344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1837,
},
[397897] = {
["encounterName"] = "塔丽克萨·火冠",
["source"] = "加兹沙尤",
["npcID"] = 104273,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1869,
},
[452156] = {
["source"] = "旧忆炎魔之王",
["event"] = "SPELL_CAST_START",
["npcID"] = 212088,
},
[381519] = {
["source"] = "塔拉赛清道夫",
["event"] = "SPELL_CAST_START",
["npcID"] = 200460,
},
[420422] = {
["encounterName"] = "火光之龙菲莱克",
["source"] = "菲莱克",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[370259] = {
["source"] = "失败的鳞长海洛索尔",
["event"] = "SPELL_CAST_START",
["npcID"] = 201822,
},
[412233] = {
["event"] = "SPELL_CAST_START",
["source"] = "迷时火箭手",
["npcID"] = 205727,
},
[434756] = {
["event"] = "SPELL_CAST_START",
["source"] = "雇佣的打手",
["npcID"] = 210269,
},
[386640] = {
["event"] = "SPELL_CAST_START",
["source"] = "塔拉赛强夺者",
["npcID"] = 187242,
},
[396879] = {
["event"] = "SPELL_CAST_START",
["source"] = "吉欧瑟姆斯",
["npcID"] = 217416,
},
[452162] = {
["event"] = "SPELL_CAST_START",
["source"] = "隐秘网士",
["npcID"] = 223844,
},
[408141] = {
["encounterName"] = "迦拉克隆之荒",
["source"] = "达扎克",
["encounterID"] = 2668,
["event"] = "SPELL_CAST_START",
["npcID"] = 201788,
},
[372310] = {
["source"] = "冰元素",
["event"] = "SPELL_CAST_START",
["npcID"] = 201034,
},
[395857] = {
["event"] = "SPELL_CAST_START",
["source"] = "卡拉希愈石者",
["npcID"] = 187600,
},
[372311] = {
["event"] = "SPELL_CAST_START",
["source"] = "卡拉希新兵",
["npcID"] = 189266,
},
[381525] = {
["encounterName"] = "基拉卡与厄克哈特·风脉",
["source"] = "基拉卡",
["npcID"] = 190484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[456259] = {
["event"] = "SPELL_CAST_START",
["source"] = "飞烛者队长",
["npcID"] = 220276,
},
[387668] = {
["event"] = "SPELL_CAST_START",
["source"] = "觉醒的碎岩",
["npcID"] = 195243,
},
[384597] = {
["event"] = "SPELL_CAST_START",
["source"] = "卡拉希守卫者",
["npcID"] = 193293,
},
[369241] = {
["event"] = "SPELL_CAST_START",
["source"] = "扎卡利狂战士",
["npcID"] = 204087,
},
[397907] = {
["encounterName"] = "塔丽克萨·火冠",
["source"] = "警惕的巴尔戈",
["npcID"] = 104274,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1869,
},
[423501] = {
["source"] = "职阶监督者",
["event"] = "SPELL_CAST_START",
["npcID"] = 211121,
},
[387670] = {
["source"] = "旧忆蛮兵",
["event"] = "SPELL_CAST_START",
["npcID"] = 221747,
},
[456263] = {
["event"] = "SPELL_CAST_START",
["source"] = "飞烛者队长",
["npcID"] = 220276,
},
[388696] = {
["source"] = "旧忆加兹瑞拉",
["event"] = "SPELL_CAST_START",
["npcID"] = 221578,
},
[438860] = {
["encounterName"] = "大捻接师艾佐",
["source"] = "大捻接师艾佐",
["npcID"] = 216658,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2909,
},
[452169] = {
["source"] = "女王护卫吉利克斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 211858,
},
[375388] = {
["source"] = "拜荒掷冰者",
["event"] = "SPELL_CAST_START",
["npcID"] = 203750,
},
[426576] = {
["source"] = "梦境幼苗",
["event"] = "SPELL_CAST_START",
["npcID"] = 211339,
},
[374365] = {
["encounterName"] = "岩浆之牙",
["source"] = "岩浆之牙",
["npcID"] = 181861,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2610,
},
[427601] = {
["source"] = "光耀之子",
["event"] = "SPELL_CAST_START",
["npcID"] = 206710,
},
[409174] = {
["event"] = "SPELL_CAST_START",
["source"] = "熵能化身",
["npcID"] = 203811,
},
[431697] = {
["source"] = "苏雷吉根除者",
["event"] = "SPELL_CAST_START",
["npcID"] = 225408,
},
[183633] = {
["event"] = "SPELL_CAST_START",
["source"] = "缚石剥皮者",
["npcID"] = 91008,
},
[389725] = {
["event"] = "SPELL_CAST_START",
["source"] = "巴祖阿尔",
["npcID"] = 193532,
},
[403034] = {
["source"] = "菲莱克",
["event"] = "SPELL_CAST_START",
["npcID"] = 200832,
},
[450127] = {
["source"] = "坚铸要塞防御者",
["event"] = "SPELL_CAST_START",
["npcID"] = 216016,
},
[450128] = {
["encounterName"] = "蜡面",
["source"] = "蜡面",
["encounterID"] = 2894,
["event"] = "SPELL_CAST_START",
["npcID"] = 214263,
},
[453200] = {
["event"] = "SPELL_CAST_START",
["source"] = "克雷蒙德",
["npcID"] = 220269,
},
[434773] = {
["event"] = "SPELL_CAST_START",
["source"] = "风险投资公司主顾",
["npcID"] = 214668,
},
[452177] = {
["event"] = "SPELL_CAST_START",
["source"] = "阿拉希预备兵",
["npcID"] = 214429,
},
[395871] = {
["event"] = "SPELL_CAST_START",
["source"] = "卡拉希愈石者",
["npcID"] = 187600,
},
[209741] = {
["encounterName"] = "顾问麦兰杜斯",
["source"] = "顾问麦兰杜斯的影像",
["npcID"] = 105754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1870,
},
[425561] = {
["source"] = "运货鼹鼠",
["event"] = "SPELL_CAST_START",
["npcID"] = 211977,
},
[427609] = {
["source"] = "阿拉希骑士",
["event"] = "SPELL_CAST_START",
["npcID"] = 206696,
},
[386660] = {
["encounterName"] = "莱魔",
["source"] = "莱魔",
["npcID"] = 186644,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2582,
},
[387684] = {
["event"] = "SPELL_CAST_START",
["source"] = "大地之塔",
["npcID"] = 195348,
},
[414303] = {
["encounterName"] = "时间流具象",
["source"] = "时间流具象",
["encounterID"] = 2667,
["event"] = "SPELL_CAST_START",
["npcID"] = 198996,
},
[434779] = {
["encounterName"] = "演说者基克斯威兹克",
["source"] = "演说者基克斯威兹克",
["npcID"] = 216619,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2907,
},
[376426] = {
["source"] = "召唤的涟漪",
["event"] = "SPELL_CAST_START",
["npcID"] = 187542,
},
[438877] = {
["event"] = "SPELL_CAST_START",
["source"] = "纳克特",
["npcID"] = 218324,
},
[427616] = {
["encounterName"] = "凯里欧斯",
["source"] = "任性的雷鸫",
["encounterID"] = 2816,
["event"] = "SPELL_CAST_START",
["npcID"] = 207186,
},
[384620] = {
["encounterName"] = "狂怒风暴",
["source"] = "狂怒风暴",
["encounterID"] = 2636,
["event"] = "SPELL_CAST_START",
["npcID"] = 186615,
},
[423523] = {
["source"] = "痛苦的梦境之灵",
["event"] = "SPELL_CAST_START",
["npcID"] = 210304,
},
[412262] = {
["event"] = "SPELL_CAST_START",
["source"] = "迷时火箭手",
["npcID"] = 205727,
},
[388716] = {
["encounterName"] = "巢穴守护者迪乌尔娜",
["source"] = "巢穴守护者迪乌尔娜",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[459355] = {
["source"] = "旧忆奥妮克希亚",
["event"] = "SPELL_CAST_START",
["npcID"] = 221585,
},
[431714] = {
["source"] = "黑暗药剂师",
["event"] = "SPELL_CAST_START",
["npcID"] = 219651,
},
[371313] = {
["source"] = "传送门守护者西姆布拉",
["event"] = "SPELL_CAST_START",
["npcID"] = 202613,
},
[450142] = {
["encounterName"] = "蜡面",
["source"] = "蜡面",
["encounterID"] = 2894,
["event"] = "SPELL_CAST_START",
["npcID"] = 214263,
},
[434786] = {
["event"] = "SPELL_CAST_START",
["source"] = "伊克辛",
["npcID"] = 217531,
},
[425573] = {
["source"] = "梦境守护者",
["event"] = "SPELL_CAST_START",
["npcID"] = 210423,
},
[382576] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "土灵守护者",
["npcID"] = 184131,
},
[291463] = {
["source"] = "波撒斯特主教",
["event"] = "SPELL_CAST_START",
["npcID"] = 144568,
},
[373364] = {
["event"] = "SPELL_CAST_START",
["source"] = "邪恶的格伦斯",
["npcID"] = 107435,
},
[382578] = {
["event"] = "SPELL_CAST_START",
["source"] = "土灵守护者",
["npcID"] = 184131,
},
[433766] = {
["encounterName"] = "阿努布泽克特",
["source"] = "阿努布泽克特",
["npcID"] = 215405,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2906,
},
[449123] = {
["source"] = "提加雷特",
["event"] = "SPELL_CAST_START",
["npcID"] = 215600,
},
[385652] = {
["event"] = "SPELL_CAST_START",
["source"] = "觉醒的碎岩",
["npcID"] = 195243,
},
[434793] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "颤声侍从",
["npcID"] = 216293,
},
[403057] = {
["encounterName"] = "奈萨里奥的回响",
["source"] = "奈萨里奥",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[436841] = {
["source"] = "被亵渎的欧胡纳",
["event"] = "SPELL_CAST_START",
["npcID"] = 195876,
},
[410225] = {
["encounterName"] = "火光之龙菲莱克",
["source"] = "菲莱克",
["npcID"] = 204931,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2677,
},
[427629] = {
["source"] = "热诚的神射手",
["event"] = "SPELL_CAST_START",
["npcID"] = 206694,
},
[456295] = {
["event"] = "SPELL_CAST_START",
["source"] = "艾尔里克·赖德",
["npcID"] = 213208,
},
[384633] = {
["encounterName"] = "肠击",
["source"] = "肠击",
["npcID"] = 186116,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[423536] = {
["encounterName"] = "隐修院长穆普雷",
["source"] = "隐修院长穆普雷",
["encounterID"] = 2848,
["event"] = "SPELL_CAST_START",
["npcID"] = 207940,
},
[449130] = {
["source"] = "熔炉装货工",
["event"] = "SPELL_CAST_START",
["npcID"] = 213343,
},
[455273] = {
["event"] = "SPELL_CAST_START",
["source"] = "可憎的弄潮者",
["npcID"] = 216526,
},
[202075] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "燃烧晶簇",
["npcID"] = 101437,
},
[423538] = {
["encounterName"] = "斯卡莫拉克",
["source"] = "斯卡莫拉克",
["encounterID"] = 2880,
["event"] = "SPELL_CAST_START",
["npcID"] = 210156,
},
["371984"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flashfrost Chillweaver",
["npcID"] = 188067,
},
[407159] = {
["encounterName"] = "迦拉克隆之荒",
["source"] = "迦拉克隆之荒",
["encounterID"] = 2668,
["event"] = "SPELL_CAST_START",
["npcID"] = 198997,
},
[387708] = {
["source"] = "提尔要塞看护者",
["event"] = "SPELL_CAST_START",
["npcID"] = 192696,
},
[434802] = {
["event"] = "SPELL_CAST_START",
["source"] = "伊克辛",
["npcID"] = 217531,
},
[448111] = {
["source"] = "迪乌米克",
["event"] = "SPELL_CAST_START",
["npcID"] = 211564,
},
[449135] = {
["event"] = "SPELL_CAST_START",
["source"] = "曳焰监督者",
["npcID"] = 212542,
},
[377473] = {
["encounterName"] = "督军莎尔佳",
["source"] = "督军莎尔佳",
["npcID"] = 189901,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2611,
},
[370307] = {
["encounterName"] = "艾拉诺格",
["source"] = "艾拉诺格",
["npcID"] = 184972,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2587,
},
[410234] = {
["encounterName"] = "迷时战场",
["source"] = "安度因·洛萨",
["npcID"] = 203679,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[382593] = {
["event"] = "SPELL_CAST_START",
["source"] = "残酷的碾骨者",
["npcID"] = 186206,
},
[381570] = {
["event"] = "SPELL_CAST_START",
["source"] = "焦躁的钥石",
["npcID"] = 189811,
},
[431734] = {
["source"] = "几丁质哥利亚",
["event"] = "SPELL_CAST_START",
["npcID"] = 220917,
},
[412283] = {
["event"] = "SPELL_CAST_START",
["source"] = "可怖防御者",
["npcID"] = 203842,
},
[401022] = {
["encounterName"] = "奈萨里奥的回响",
["source"] = "奈萨里奥",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[455281] = {
["event"] = "SPELL_CAST_START",
["source"] = "海潮领主孽齿",
["npcID"] = 216527,
},
[198496] = {
["encounterName"] = "乌拉罗格·塑山",
["source"] = "乌拉罗格·塑山",
["npcID"] = 91004,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1791,
},
[442998] = {
["event"] = "SPELL_CAST_START",
["source"] = "车队领袖",
["npcID"] = 226382,
},
[420476] = {
["source"] = "破壳导能者",
["event"] = "SPELL_CAST_START",
["npcID"] = 207038,
},
[433785] = {
["event"] = "SPELL_CAST_START",
["source"] = "强化雄虫",
["npcID"] = 216363,
},
[426619] = {
["event"] = "SPELL_CAST_START",
["source"] = "炬龇",
["npcID"] = 212993,
},
[421501] = {
["encounterName"] = "梦境议会",
["source"] = "匹普",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208367,
},
[402050] = {
["encounterName"] = "鳞长萨卡雷斯",
["source"] = "萨卡雷斯",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[386694] = {
["event"] = "SPELL_CAST_START",
["source"] = "风暴喷涌图腾",
["npcID"] = 194897,
},
[408193] = {
["encounterName"] = "融合体密室",
["source"] = "暗影烈焰融合体",
["npcID"] = 201934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[409217] = {
["event"] = "SPELL_CAST_START",
["source"] = "碎裂织魔者",
["npcID"] = 198872,
},
[443001] = {
["source"] = "扬升织网护卫",
["event"] = "SPELL_CAST_START",
["npcID"] = 215756,
},
[388743] = {
["source"] = "阴燃的猎犬",
["event"] = "SPELL_CAST_START",
["npcID"] = 216305,
},
[398981] = {
["event"] = "SPELL_CAST_START",
["source"] = "坚韧的巢穴守望者",
["npcID"] = 198263,
},
[377483] = {
["source"] = "深岩剥石者",
["event"] = "SPELL_CAST_START",
["npcID"] = 221572,
},
[393864] = {
["source"] = "陷阱放置者科尔瓦",
["event"] = "SPELL_CAST_START",
["npcID"] = 186516,
},
[50025] = {
["source"] = "冬拥湖投石车",
["event"] = "SPELL_CAST_START",
["npcID"] = 27881,
},
[418436] = {
["event"] = "SPELL_CAST_START",
["source"] = "旧忆魔宠",
["npcID"] = 221904,
},
[398985] = {
["event"] = "SPELL_CAST_START",
["source"] = "巢穴守护者基鲁斯",
["npcID"] = 198214,
},
[375439] = {
["encounterName"] = "岩浆之牙",
["source"] = "岩浆之牙",
["npcID"] = 181861,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2610,
},
[373392] = {
["source"] = "诺库德长弓手",
["event"] = "SPELL_CAST_START",
["npcID"] = 192789,
},
[394891] = {
["event"] = "SPELL_CAST_START",
["source"] = "布雷卡斯",
["npcID"] = 196855,
},
[372369] = {
["source"] = "霸凌者巴克拉",
["event"] = "SPELL_CAST_START",
["npcID"] = 186517,
},
[377488] = {
["event"] = "SPELL_CAST_START",
["source"] = "符文封印守护者",
["npcID"] = 187155,
},
[424581] = {
["encounterName"] = "丁达尔·迅贤，烈焰预言者",
["source"] = "丁达尔·迅贤",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[410249] = {
["encounterName"] = "永恒守护者提尔",
["source"] = "永恒守护者提尔",
["npcID"] = 198998,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2670,
},
[191848] = {
["encounterName"] = "瑟芬崔斯克",
["source"] = "瑟芬崔斯克",
["npcID"] = 91808,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1813,
},
[450176] = {
["encounterName"] = "蛛网将军阿贝纳尔",
["source"] = "蛛魔斩击者",
["encounterID"] = 2877,
["event"] = "SPELL_CAST_START",
["npcID"] = 208243,
},
[373395] = {
["event"] = "SPELL_CAST_START",
["source"] = "巴塔克",
["npcID"] = 193462,
},
[456319] = {
["event"] = "SPELL_CAST_START",
["source"] = "艾尔里克·赖德",
["npcID"] = 213208,
},
[449154] = {
["source"] = "熔炉装货工",
["event"] = "SPELL_CAST_START",
["npcID"] = 213343,
},
[204646] = {
["encounterName"] = "橡树之心",
["source"] = "橡树之心",
["npcID"] = 103344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1837,
},
[456321] = {
["event"] = "SPELL_CAST_START",
["source"] = "艾尔里克·赖德",
["npcID"] = 213208,
},
[391825] = {
["source"] = "拜荒掷冰者",
["event"] = "SPELL_CAST_START",
["npcID"] = 203750,
},
[375446] = {
["source"] = "安库拉·血劈",
["event"] = "SPELL_CAST_START",
["npcID"] = 207589,
},
[434824] = {
["event"] = "SPELL_CAST_START",
["source"] = "伊克辛",
["npcID"] = 217531,
},
[387732] = {
["source"] = "看护防御者",
["event"] = "SPELL_CAST_START",
["npcID"] = 192694,
},
[409231] = {
["event"] = "SPELL_CAST_START",
["source"] = "硕大的巨龙魔像",
["npcID"] = 203826,
},
[457348] = {
["source"] = "旧忆炎魔之王",
["event"] = "SPELL_CAST_START",
["npcID"] = 212088,
},
[450182] = {
["source"] = "被惊扰的泥裔",
["event"] = "SPELL_CAST_START",
["npcID"] = 219897,
},
[422541] = {
["source"] = "残步恐魔",
["event"] = "SPELL_CAST_START",
["npcID"] = 208456,
},
[384663] = {
["encounterName"] = "熔炉主管戈雷克",
["source"] = "炉铸巨怪",
["npcID"] = 194816,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2612,
},
[452231] = {
["source"] = "女王护卫吉利克斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 211858,
},
[381593] = {
["event"] = "SPELL_CAST_START",
["source"] = "檀石魔像",
["npcID"] = 184300,
},
[432781] = {
["source"] = "辐射虚空石",
["event"] = "SPELL_CAST_START",
["npcID"] = 212739,
},
[434829] = {
["encounterName"] = "演说者基克斯威兹克",
["source"] = "演说者基克斯威兹克",
["npcID"] = 216619,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2907,
},
[377500] = {
["event"] = "SPELL_CAST_START",
["source"] = "永恒密探",
["npcID"] = 184335,
},
[371358] = {
["event"] = "SPELL_CAST_START",
["source"] = "动荡的管理员",
["npcID"] = 187154,
},
[368287] = {
["event"] = "SPELL_CAST_START",
["source"] = "骨箭猎手",
["npcID"] = 185534,
},
[452235] = {
["source"] = "灰烬猎石者",
["event"] = "SPELL_CAST_START",
["npcID"] = 217624,
},
[450188] = {
["event"] = "SPELL_CAST_START",
["source"] = "烛爪鼹鼠",
["npcID"] = 213834,
},
[377502] = {
["source"] = "迷时鱼人",
["event"] = "SPELL_CAST_START",
["npcID"] = 190584,
},
[456331] = {
["event"] = "SPELL_CAST_START",
["source"] = "瓦克西姆斯",
["npcID"] = 215177,
},
[387740] = {
["source"] = "提尔要塞看护者",
["event"] = "SPELL_CAST_START",
["npcID"] = 192696,
},
[377503] = {
["event"] = "SPELL_CAST_START",
["source"] = "符文封印守护者",
["npcID"] = 187155,
},
[420501] = {
["source"] = "野火拜荒者",
["event"] = "SPELL_CAST_START",
["npcID"] = 209200,
},
[375457] = {
["encounterName"] = "巢穴守护者迪乌尔娜",
["source"] = "幼年冰霜始祖龙",
["npcID"] = 191222,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[417431] = {
["encounterName"] = "火光之龙菲莱克",
["source"] = "菲莱克",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[375459] = {
["source"] = "雷背震地者",
["event"] = "SPELL_CAST_START",
["npcID"] = 192941,
},
[443027] = {
["source"] = "攻城灭愿者",
["event"] = "SPELL_CAST_START",
["npcID"] = 216019,
},
[403101] = {
["encounterName"] = "融合体密室",
["source"] = "永恒炽焰",
["npcID"] = 201773,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[428695] = {
["encounterName"] = "丁达尔·迅贤，烈焰预言者",
["source"] = "丁达尔·迅贤",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[386722] = {
["source"] = "塔拉赛闪电使者",
["event"] = "SPELL_CAST_START",
["npcID"] = 190482,
},
[383651] = {
["event"] = "SPELL_CAST_START",
["source"] = "卡拉希熔岩术师",
["npcID"] = 193944,
},
[456338] = {
["event"] = "SPELL_CAST_START",
["source"] = "苦痛梦魇",
["npcID"] = 214415,
},
[450196] = {
["event"] = "SPELL_CAST_START",
["source"] = "烛爪鼹鼠",
["npcID"] = 213834,
},
[381605] = {
["encounterName"] = "基拉卡与厄克哈特·风脉",
["source"] = "基拉卡",
["npcID"] = 190484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[407199] = {
["encounterName"] = "狱铸者卡扎拉",
["source"] = "狱铸者卡扎拉",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[444055] = {
["source"] = "暴怒的纺线小蛛",
["event"] = "SPELL_CAST_START",
["npcID"] = 222730,
},
[451222] = {
["event"] = "SPELL_CAST_START",
["source"] = "高耸虚居居民",
["npcID"] = 219983,
},
[200050] = {
["encounterName"] = "萨维斯之影",
["source"] = "萨维斯之影",
["npcID"] = 99192,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1839,
},
[428703] = {
["source"] = "击石者",
["event"] = "SPELL_CAST_START",
["npcID"] = 213954,
},
[372397] = {
["source"] = "影足训练师",
["event"] = "SPELL_CAST_START",
["npcID"] = 192352,
},
[411300] = {
["event"] = "SPELL_CAST_START",
["source"] = "迷时塑波者",
["npcID"] = 205363,
},
[456346] = {
["event"] = "SPELL_CAST_START",
["source"] = "苦痛梦魇",
["npcID"] = 214415,
},
[406183] = {
["event"] = "SPELL_CAST_START",
["source"] = "克洛诺·沙舌",
["npcID"] = 205622,
},
[452252] = {
["event"] = "SPELL_CAST_START",
["source"] = "机械大师顿斯坦",
["npcID"] = 217353,
},
[395946] = {
["source"] = "腐朽商贩烂爪",
["event"] = "SPELL_CAST_START",
["npcID"] = 205995,
},
[430754] = {
["source"] = "被腐化的先知",
["event"] = "SPELL_CAST_START",
["npcID"] = 214439,
},
[384686] = {
["encounterName"] = "狂怒风暴",
["source"] = "狂怒风暴",
["encounterID"] = 2636,
["event"] = "SPELL_CAST_START",
["npcID"] = 186615,
},
[459422] = {
["source"] = "旧忆奥妮克希亚",
["event"] = "SPELL_CAST_START",
["npcID"] = 221585,
},
[374451] = {
["source"] = "燃烧锁链施法者",
["event"] = "SPELL_CAST_START",
["npcID"] = 195919,
},
[424615] = {
["source"] = "长老卡莎梵",
["event"] = "SPELL_CAST_START",
["npcID"] = 206818,
},
[407212] = {
["event"] = "SPELL_CAST_START",
["source"] = "贾拉丁猎龙者",
["npcID"] = 202108,
},
[428711] = {
["encounterName"] = "机械大师",
["source"] = "代言人多利塔",
["encounterID"] = 2888,
["event"] = "SPELL_CAST_START",
["npcID"] = 213216,
},
[409261] = {
["encounterName"] = "伊律迪孔",
["source"] = "伊律迪孔",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[369335] = {
["event"] = "SPELL_CAST_START",
["source"] = "符文保护者",
["npcID"] = 184107,
},
[371383] = {
["source"] = "拜荒掷霜者",
["event"] = "SPELL_CAST_START",
["npcID"] = 201033,
},
[447141] = {
["source"] = "改造的载货机器人",
["event"] = "SPELL_CAST_START",
["npcID"] = 222923,
},
[399025] = {
["event"] = "SPELL_CAST_START",
["source"] = "不受控制的护卫",
["npcID"] = 181775,
},
[117960] = {
["encounterName"] = "伊拉贡",
["source"] = "伊拉贡",
["npcID"] = 60410,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1500,
},
[400050] = {
["event"] = "SPELL_CAST_START",
["source"] = "深岩剥石者猎人",
["npcID"] = 221198,
},
[424621] = {
["source"] = "歇尼麦尔中士",
["event"] = "SPELL_CAST_START",
["npcID"] = 211291,
},
[417455] = {
["encounterName"] = "火光之龙菲莱克",
["source"] = "菲莱克",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[400052] = {
["source"] = "拾荒的切割者",
["event"] = "SPELL_CAST_START",
["npcID"] = 204508,
},
[415409] = {
["source"] = "开裂的火藤",
["event"] = "SPELL_CAST_START",
["npcID"] = 207699,
},
[289488] = {
["encounterName"] = "吉安娜·普罗德摩尔",
["source"] = "吉安娜·普罗德摩尔",
["encounterID"] = 2281,
["event"] = "SPELL_CAST_START",
["npcID"] = 146409,
},
[204666] = {
["encounterName"] = "橡树之心",
["source"] = "橡树之心",
["npcID"] = 103344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1837,
},
[443052] = {
["source"] = "攻城灭愿者",
["event"] = "SPELL_CAST_START",
["npcID"] = 216019,
},
[419506] = {
["encounterName"] = "火光之龙菲莱克",
["source"] = "菲莱克",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[400055] = {
["source"] = "拾荒的切割者",
["event"] = "SPELL_CAST_START",
["npcID"] = 203384,
},
[33395] = {
["isChanneled"] = true,
["source"] = "水元素",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208441,
},
[204667] = {
["encounterName"] = "橡树之心",
["source"] = "橡树之心",
["npcID"] = 103344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1837,
},
[399033] = {
["source"] = "军营射咒者",
["event"] = "SPELL_CAST_START",
["npcID"] = 200736,
},
[202108] = {
["event"] = "SPELL_CAST_START",
["source"] = "枯碎塑造者",
["npcID"] = 90998,
},
[433841] = {
["event"] = "SPELL_CAST_START",
["source"] = "鲜血监督者",
["npcID"] = 216364,
},
[194942] = {
["encounterName"] = "格雷泽",
["source"] = "格雷泽",
["npcID"] = 95887,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1817,
},
[439984] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "土灵护卫哨兵",
["npcID"] = 216221,
},
[426677] = {
["source"] = "灰鼻",
["event"] = "SPELL_CAST_START",
["npcID"] = 212412,
},
[419511] = {
["event"] = "SPELL_CAST_START",
["source"] = "克罗纳克西",
["npcID"] = 206070,
},
[452272] = {
["event"] = "SPELL_CAST_START",
["source"] = "寇尔·棕峭",
["npcID"] = 213658,
},
[433845] = {
["event"] = "SPELL_CAST_START",
["source"] = "鲜血监督者",
["npcID"] = 216364,
},
[396991] = {
["event"] = "SPELL_CAST_START",
["source"] = "龙人破坏者",
["npcID"] = 187240,
},
[415419] = {
["source"] = "拉罗达尔，烈焰守护者",
["event"] = "SPELL_CAST_START",
["npcID"] = 205136,
},
[423610] = {
["encounterName"] = "拉罗达尔，烈焰守护者",
["source"] = "拉罗达尔，烈焰守护者",
["encounterID"] = 2731,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208445,
},
[419516] = {
["event"] = "SPELL_CAST_START",
["source"] = "克罗纳克西",
["npcID"] = 206070,
},
[388804] = {
["encounterName"] = "安布雷斯库",
["source"] = "安布雷斯库",
["npcID"] = 186738,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2584,
},
[386757] = {
["encounterName"] = "不屈者卡金",
["source"] = "不屈者卡金",
["npcID"] = 189727,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2617,
},
[406210] = {
["event"] = "SPELL_CAST_START",
["source"] = "碎裂自然学家",
["npcID"] = 201746,
},
[455351] = {
["source"] = "凯克斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 216582,
},
[407236] = {
["source"] = "圣地守护者卡诺什",
["event"] = "SPELL_CAST_START",
["npcID"] = 199839,
},
[438973] = {
["source"] = "深渊领主",
["event"] = "SPELL_CAST_START",
["npcID"] = 228574,
},
[421570] = {
["encounterName"] = "梦境议会",
["source"] = "艾尔雯",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208365,
},
[459449] = {
["source"] = "旧忆奥妮克希亚",
["event"] = "SPELL_CAST_START",
["npcID"] = 221585,
},
[409757] = {
["event"] = "SPELL_CAST_START",
["source"] = "贾拉丁指挥官",
["npcID"] = 202109,
},
[200580] = {
["event"] = "SPELL_CAST_START",
["source"] = "烂皮灰熊",
["npcID"] = 95779,
},
[406215] = {
["source"] = "旧忆双帆龙",
["event"] = "SPELL_CAST_START",
["npcID"] = 221883,
},
[419524] = {
["source"] = "散逸时间",
["event"] = "SPELL_CAST_START",
["npcID"] = 209170,
},
[383693] = {
["source"] = "诺库德兽王",
["event"] = "SPELL_CAST_START",
["npcID"] = 192794,
},
[15498] = {
["source"] = "冰冷矿洞测量者",
["event"] = "SPELL_CAST_START",
["npcID"] = 13097,
},
[457872] = {
["event"] = "SPELL_CAST_START",
["source"] = "深晦魔阿泽里克斯",
["npcID"] = 218458,
},
[382670] = {
["encounterName"] = "提拉和马鲁克",
["source"] = "提拉",
["npcID"] = 186339,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[453188] = {
["event"] = "SPELL_CAST_START",
["source"] = "克雷蒙德",
["npcID"] = 220269,
},
[15228] = {
["source"] = "白须地占师",
["event"] = "SPELL_CAST_START",
["npcID"] = 11604,
},
[50989] = {
["isChanneled"] = true,
["source"] = "冬拥湖投石车",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 27881,
},
[290411] = {
["source"] = "佩里克·泰兹维普",
["event"] = "SPELL_CAST_START",
["npcID"] = 150750,
},
[290423] = {
["source"] = "佩里克·泰兹维普",
["event"] = "SPELL_CAST_START",
["npcID"] = 150750,
},
[290438] = {
["source"] = "佩里克·泰兹维普",
["event"] = "SPELL_CAST_START",
["npcID"] = 150750,
},
[283775] = {
["source"] = "雷西娅·加斯戴克",
["event"] = "SPELL_CAST_START",
["npcID"] = 150744,
},
[299268] = {
["source"] = "俗气的斯宾温戴",
["event"] = "SPELL_CAST_START",
["npcID"] = 150740,
},
[424646] = {
["source"] = "焰触执行者",
["event"] = "SPELL_CAST_START",
["npcID"] = 210150,
},
[284217] = {
["source"] = "拉德维克·晃簧",
["event"] = "SPELL_CAST_START",
["npcID"] = 144564,
},
[392394] = {
["event"] = "SPELL_CAST_START",
["source"] = "烈焰之咽",
["npcID"] = 197697,
},
[284752] = {
["source"] = "马斯图斯·雪息",
["event"] = "SPELL_CAST_START",
["npcID"] = 150746,
},
[285232] = {
["source"] = "“苦痛”赛维娅·安戈萨",
["event"] = "SPELL_CAST_START",
["npcID"] = 144578,
},
[417481] = {
["event"] = "SPELL_CAST_START",
["source"] = "时间线掠夺者",
["npcID"] = 199748,
},
[369365] = {
["event"] = "SPELL_CAST_START",
["source"] = "土灵看守",
["npcID"] = 184132,
},
[458425] = {
["source"] = "荫芽",
["event"] = "SPELL_CAST_START",
["npcID"] = 215501,
},
[195109] = {
["event"] = "SPELL_CAST_START",
["source"] = "积怨织雷者",
["npcID"] = 91783,
},
[388817] = {
["encounterName"] = "格拉尼斯",
["source"] = "格拉尼斯",
["encounterID"] = 2637,
["event"] = "SPELL_CAST_START",
["npcID"] = 186616,
},
[451608] = {
["source"] = "蜃鱼人塑影者",
["event"] = "SPELL_CAST_START",
["npcID"] = 215653,
},
[415435] = {
["source"] = "凝结时刻",
["event"] = "SPELL_CAST_START",
["npcID"] = 206064,
},
[198024] = {
["encounterName"] = "洛克莫拉",
["source"] = "洛克莫拉",
["npcID"] = 91003,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1790,
},
[426883] = {
["source"] = "狗头人履职者",
["event"] = "SPELL_CAST_START",
["npcID"] = 212383,
},
[395653] = {
["source"] = "巨硕蝾螈",
["event"] = "SPELL_CAST_START",
["npcID"] = 224622,
},
[443640] = {
["source"] = "虚空精灵裂隙行者",
["event"] = "SPELL_CAST_START",
["npcID"] = 224798,
},
[452164] = {
["source"] = "虫群专家多米丝",
["event"] = "SPELL_CAST_START",
["npcID"] = 216578,
},
[402887] = {
["source"] = "苟尔娜",
["event"] = "SPELL_CAST_START",
["npcID"] = 199853,
},
[382573] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "土灵守护者",
["npcID"] = 184131,
},
[440007] = {
["event"] = "SPELL_CAST_START",
["source"] = "铁符保护者",
["npcID"] = 214576,
},
[375694] = {
["source"] = "塔拉赛闪电使者",
["event"] = "SPELL_CAST_START",
["npcID"] = 181377,
},
[458688] = {
["source"] = "觉醒的熔火之怒",
["event"] = "SPELL_CAST_START",
["npcID"] = 225896,
},
[455364] = {
["source"] = "凯克斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 216582,
},
[458638] = {
["source"] = "觉醒的积焰之蛇",
["event"] = "SPELL_CAST_START",
["npcID"] = 225895,
},
[458669] = {
["source"] = "觉醒的巨像",
["event"] = "SPELL_CAST_START",
["npcID"] = 225898,
},
[372441] = {
["source"] = "土狼大师杜尔衮",
["event"] = "SPELL_CAST_START",
["npcID"] = 186515,
},
[434505] = {
["event"] = "SPELL_CAST_START",
["source"] = "雇佣的打手",
["npcID"] = 210269,
},
[458780] = {
["source"] = "觉醒的硫磺破坏者",
["event"] = "SPELL_CAST_START",
["npcID"] = 225894,
},
[446533] = {
["source"] = "灾疫牡麋",
["event"] = "SPELL_CAST_START",
["npcID"] = 219267,
},
[388822] = {
["encounterName"] = "多拉苟萨的回响",
["source"] = "多拉苟萨的回响",
["npcID"] = 190609,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2565,
},
[425974] = {
["source"] = "大地注能的魔像",
["event"] = "SPELL_CAST_START",
["npcID"] = 210109,
},
[388796] = {
["encounterName"] = "茂林古树",
["source"] = "茂林古树",
["npcID"] = 196482,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2563,
},
[400974] = {
["source"] = "黑曜折磨者",
["event"] = "SPELL_CAST_START",
["npcID"] = 202481,
},
[392451] = {
["event"] = "SPELL_CAST_START",
["source"] = "烈焰引导者",
["npcID"] = 197985,
},
[406227] = {
["encounterName"] = "被遗忘的实验体",
["source"] = "里翁苏斯",
["npcID"] = 200918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[448162] = {
["event"] = "SPELL_CAST_START",
["source"] = "巨大的缠藻者",
["npcID"] = 221061,
},
[456656] = {
["event"] = "SPELL_CAST_START",
["source"] = "拉巴恩",
["npcID"] = 228343,
},
[439467] = {
["event"] = "SPELL_CAST_START",
["source"] = "好好先生",
["npcID"] = 219588,
},
[194956] = {
["encounterName"] = "融合之魂",
["source"] = "融合之魂",
["npcID"] = 98542,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1832,
},
[284402] = {
["source"] = "俗气的斯宾温戴",
["event"] = "SPELL_CAST_START",
["npcID"] = 150740,
},
[395991] = {
["event"] = "SPELL_CAST_START",
["source"] = "苏醒的亡魂",
["npcID"] = 191129,
},
[18431] = {
["encounterName"] = "奥妮克希亚",
["source"] = "奥妮克希亚",
["npcID"] = 10184,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1084,
},
[426260] = {
["event"] = "SPELL_CAST_START",
["source"] = "炬龇",
["npcID"] = 212411,
},
[407207] = {
["encounterName"] = "奈萨里奥的回响",
["source"] = "奈萨里奥",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[418202] = {
["event"] = "SPELL_CAST_START",
["source"] = "永恒裂隙法师",
["npcID"] = 208698,
},
[439365] = {
["encounterName"] = "艾帕",
["source"] = "艾帕",
["npcID"] = 210267,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2929,
},
[441627] = {
["event"] = "SPELL_CAST_START",
["source"] = "风味科学家",
["npcID"] = 214673,
},
[104318] = {
["event"] = "SPELL_CAST_START",
["source"] = "野生小鬼",
["npcID"] = 55659,
},
[193712] = {
["encounterName"] = "积怨夫人",
["source"] = "积怨夫人",
["npcID"] = 91789,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1811,
},
[451276] = {
["source"] = "亡伐者腐皮",
["event"] = "SPELL_CAST_START",
["npcID"] = 217670,
},
[422611] = {
["encounterName"] = "拉罗达尔，烈焰守护者",
["source"] = "拉罗达尔，烈焰守护者",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[399065] = {
["source"] = "铁潮打击者",
["event"] = "SPELL_CAST_START",
["npcID"] = 200858,
},
[415437] = {
["source"] = "时流汲取者",
["event"] = "SPELL_CAST_START",
["npcID"] = 206066,
},
[404171] = {
["source"] = "瓦坎",
["event"] = "SPELL_CAST_START",
["npcID"] = 199855,
},
[403699] = {
["encounterName"] = "融合体密室",
["source"] = "暗影精华",
["npcID"] = 201774,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[386781] = {
["encounterName"] = "泰拉什·灰翼",
["source"] = "泰拉什·灰翼",
["npcID"] = 186737,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2583,
},
[377559] = {
["encounterName"] = "树口",
["source"] = "树口",
["npcID"] = 186120,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2568,
},
[392924] = {
["event"] = "SPELL_CAST_START",
["source"] = "大引导者莱瓦迪",
["npcID"] = 197535,
},
[381663] = {
["event"] = "SPELL_CAST_START",
["source"] = "绝顶焰翼鸦",
["npcID"] = 193291,
},
[183465] = {
["event"] = "SPELL_CAST_START",
["source"] = "喷油潜伏者",
["npcID"] = 91001,
},
[211299] = {
["event"] = "SPELL_CAST_START",
["source"] = "警觉的审判者",
["npcID"] = 105715,
},
[443487] = {
["event"] = "SPELL_CAST_START",
["source"] = "工蜂",
["npcID"] = 210265,
},
[422614] = {
["encounterName"] = "拉罗达尔，烈焰守护者",
["source"] = "拉罗达尔，烈焰守护者",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[11969] = {
["source"] = "火鬃灰尾龙兽",
["event"] = "SPELL_CAST_START",
["npcID"] = 4331,
},
[430805] = {
["source"] = "凝虚散播者",
["event"] = "SPELL_CAST_START",
["npcID"] = 214421,
},
[406399] = {
["event"] = "SPELL_CAST_START",
["source"] = "碎裂奥术师",
["npcID"] = 201736,
},
[414425] = {
["encounterName"] = "残虐者艾姬拉",
["source"] = "残虐者艾姬拉",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[284409] = {
["source"] = "俗气的斯宾温戴",
["event"] = "SPELL_CAST_START",
["npcID"] = 150740,
},
[412378] = {
["event"] = "SPELL_CAST_START",
["source"] = "永恒曲时者",
["npcID"] = 205337,
},
[409307] = {
["event"] = "SPELL_CAST_START",
["source"] = "耀光惧飑鸦",
["npcID"] = 202262,
},
[405375] = {
["encounterName"] = "被遗忘的实验体",
["source"] = "萨德里奥",
["npcID"] = 200913,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[199567] = {
["encounterName"] = "库塔洛斯·拉文凯斯",
["source"] = "拉图修斯的影像",
["npcID"] = 101028,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[192706] = {
["encounterName"] = "艾萨拉之怒",
["source"] = "艾萨拉之怒",
["npcID"] = 96028,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1814,
},
[404744] = {
["encounterName"] = "狱铸者卡扎拉",
["source"] = "狱铸者卡扎拉",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[373477] = {
["event"] = "SPELL_CAST_START",
["source"] = "受缚的咬滨者",
["npcID"] = 190193,
},
[452306] = {
["isChanneled"] = true,
["source"] = "阿拉希防御者",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217643,
},
[409271] = {
["encounterName"] = "扎卡利突袭",
["source"] = "岩浆秘士",
["npcID"] = 199703,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[441410] = {
["event"] = "SPELL_CAST_START",
["source"] = "工蜂",
["npcID"] = 210265,
},
[403740] = {
["encounterName"] = "玛格莫莱克斯",
["source"] = "玛格莫莱克斯",
["npcID"] = 201579,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2683,
},
[195473] = {
["event"] = "SPELL_CAST_START",
["source"] = "砂泥蜗牛",
["npcID"] = 91786,
},
[440181] = {
["source"] = "伞菌散播者",
["event"] = "SPELL_CAST_START",
["npcID"] = 212578,
},
[18392] = {
["encounterName"] = "奥妮克希亚",
["source"] = "奥妮克希亚",
["npcID"] = 10184,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1084,
},
[427999] = {
["encounterName"] = "斯莫德隆",
["source"] = "斯莫德隆",
["npcID"] = 200927,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2824,
},
[437721] = {
["event"] = "SPELL_CAST_START",
["source"] = "风险投资公司纵火狂",
["npcID"] = 218671,
},
[432229] = {
["encounterName"] = "酿造大师阿德里尔",
["source"] = "酿造大师阿德里尔",
["npcID"] = 210271,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[422776] = {
["encounterName"] = "残虐者艾姬拉",
["source"] = "残虐者艾姬拉",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[455380] = {
["event"] = "SPELL_CAST_START",
["source"] = "失控的轨机",
["npcID"] = 218251,
},
[414974] = {
["source"] = "炽热的监督者",
["event"] = "SPELL_CAST_START",
["npcID"] = 205140,
},
[373424] = {
["encounterName"] = "查尔加斯，龙鳞之灾",
["source"] = "查尔加斯，龙鳞之灾",
["npcID"] = 189340,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2613,
},
[191524] = {
["event"] = "SPELL_CAST_START",
["source"] = "刃舞者伊莲娜",
["npcID"] = 96657,
},
[377512] = {
["source"] = "火成软体动物",
["event"] = "SPELL_CAST_START",
["npcID"] = 200806,
},
[379406] = {
["event"] = "SPELL_CAST_START",
["source"] = "卡拉希熔岩承载者",
["npcID"] = 189472,
},
[375068] = {
["encounterName"] = "岩浆之牙",
["source"] = "熔岩触须",
["npcID"] = 190023,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2610,
},
[409313] = {
["encounterName"] = "奈萨里奥的回响",
["source"] = "奈萨里奥",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[430812] = {
["source"] = "凝虚散播者",
["event"] = "SPELL_CAST_START",
["npcID"] = 214421,
},
[382696] = {
["event"] = "SPELL_CAST_START",
["source"] = "土灵守护者",
["npcID"] = 184131,
},
[428765] = {
["source"] = "丁达尔·迅贤",
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[385434] = {
["encounterName"] = "提拉和马鲁克",
["source"] = "提拉",
["npcID"] = 186339,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[443436] = {
["event"] = "SPELL_CAST_START",
["source"] = "安苏雷克的传令官",
["npcID"] = 220196,
},
[388741] = {
["event"] = "SPELL_CAST_START",
["source"] = "尤克赫尔惊坟者",
["npcID"] = 189928,
},
[400649] = {
["encounterName"] = "永恒守护者提尔",
["source"] = "永恒守护者提尔",
["npcID"] = 198998,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2670,
},
[410236] = {
["encounterName"] = "迷时战场",
["source"] = "安度因·洛萨",
["npcID"] = 203679,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2672,
},
[459479] = {
["source"] = "旧忆奥妮克希亚",
["event"] = "SPELL_CAST_START",
["npcID"] = 221585,
},
[444123] = {
["encounterName"] = "凯里欧斯",
["source"] = "凯里欧斯",
["encounterID"] = 2816,
["event"] = "SPELL_CAST_START",
["npcID"] = 209230,
},
[385390] = {
["event"] = "SPELL_CAST_START",
["source"] = "护炉哨兵",
["npcID"] = 192700,
},
[384648] = {
["event"] = "SPELL_CAST_START",
["source"] = "摩尔拉什",
["npcID"] = 201549,
},
[393859] = {
["source"] = "入侵的爬鳞虫",
["event"] = "SPELL_CAST_START",
["npcID"] = 199533,
},
[452314] = {
["event"] = "SPELL_CAST_START",
["source"] = "寇尔·棕峭",
["npcID"] = 213658,
},
[193941] = {
["event"] = "SPELL_CAST_START",
["source"] = "裂烬蝎虫",
["npcID"] = 98406,
},
[445559] = {
["source"] = "女王护卫吉利克斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 211858,
},
[418531] = {
["encounterName"] = "残虐者艾姬拉",
["source"] = "残虐者艾姬拉",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[441518] = {
["event"] = "SPELL_CAST_START",
["source"] = "失败批次",
["npcID"] = 220368,
},
[200084] = {
["event"] = "SPELL_CAST_START",
["source"] = "幽灵家臣",
["npcID"] = 98366,
},
[421603] = {
["encounterName"] = "丁达尔·迅贤，烈焰预言者",
["source"] = "丁达尔·迅贤",
["npcID"] = 209090,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[50293] = {
["source"] = "巨大的冰虫",
["event"] = "SPELL_CAST_START",
["npcID"] = 26293,
},
[14443] = {
["source"] = "黑铁神射手",
["event"] = "SPELL_CAST_START",
["npcID"] = 8338,
},
[449245] = {
["source"] = "提加雷特",
["event"] = "SPELL_CAST_START",
["npcID"] = 215600,
},
[226406] = {
["event"] = "SPELL_CAST_START",
["source"] = "烬壳统御者",
["npcID"] = 113537,
},
[194966] = {
["encounterName"] = "融合之魂",
["source"] = "融合之魂",
["npcID"] = 98542,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1832,
},
[417030] = {
["encounterName"] = "迷时战场",
["source"] = "联盟咒术师",
["npcID"] = 206351,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[411912] = {
["event"] = "SPELL_CAST_START",
["source"] = "碎裂吞噬者",
["npcID"] = 205673,
},
[406802] = {
["source"] = "锯鳞蝰蛇",
["event"] = "SPELL_CAST_START",
["npcID"] = 208691,
},
[369806] = {
["event"] = "SPELL_CAST_START",
["source"] = "魁梧的狂战士",
["npcID"] = 184020,
},
[440876] = {
["event"] = "SPELL_CAST_START",
["source"] = "蜂王浆供应商",
["npcID"] = 220141,
},
[451435] = {
["source"] = "虚空幽灵",
["event"] = "SPELL_CAST_START",
["npcID"] = 224466,
},
[426725] = {
["encounterName"] = "斯莫德隆",
["source"] = "斯莫德隆",
["npcID"] = 200927,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2824,
},
[451295] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "高耸虚居居民",
["npcID"] = 219983,
},
[418059] = {
["encounterName"] = "迷时战场",
["source"] = "安度因·洛萨",
["npcID"] = 203679,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[377486] = {
["event"] = "SPELL_CAST_START",
["source"] = "永恒密探",
["npcID"] = 184335,
},
[267997] = {
["source"] = "阴暗恶犬",
["event"] = "SPELL_CAST_START",
["npcID"] = 226268,
},
[414993] = {
["source"] = "长老卡莎梵",
["event"] = "SPELL_CAST_START",
["npcID"] = 206818,
},
[425970] = {
["source"] = "苍郁林枝行者",
["event"] = "SPELL_CAST_START",
["npcID"] = 213576,
},
[407200] = {
["encounterName"] = "狱铸者卡扎拉",
["source"] = "狱铸者卡扎拉",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[444692] = {
["source"] = "曲角磐羊",
["event"] = "SPELL_CAST_START",
["npcID"] = 221672,
},
[384623] = {
["event"] = "SPELL_CAST_START",
["source"] = "卡拉希铁匠",
["npcID"] = 189471,
},
[367485] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "利爪斗士",
["npcID"] = 185508,
},
[453345] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗影具象",
["npcID"] = 211341,
},
[398720] = {
["source"] = "铁潮护舷者",
["event"] = "SPELL_CAST_START",
["npcID"] = 200850,
},
[381683] = {
["source"] = "诺库德战矛",
["event"] = "SPELL_CAST_START",
["npcID"] = 192791,
},
[449251] = {
["source"] = "蛛魔御纤士",
["event"] = "SPELL_CAST_START",
["npcID"] = 208244,
},
[457441] = {
["source"] = "旧忆炎魔之王",
["event"] = "SPELL_CAST_START",
["npcID"] = 212088,
},
[66532] = {
["source"] = "回溯加拉克苏斯大王",
["event"] = "SPELL_CAST_START",
["npcID"] = 221861,
},
[369399] = {
["event"] = "SPELL_CAST_START",
["source"] = "土灵编织者",
["npcID"] = 186420,
},
[382708] = {
["event"] = "SPELL_CAST_START",
["source"] = "卡拉希守卫者",
["npcID"] = 193293,
},
[404517] = {
["source"] = "瓦坎",
["event"] = "SPELL_CAST_START",
["npcID"] = 199855,
},
[367484] = {
["event"] = "SPELL_CAST_START",
["source"] = "利爪斗士",
["npcID"] = 185508,
},
[389875] = {
["encounterName"] = "原始海啸",
["source"] = "原始海啸",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 189729,
},
[191678] = {
["event"] = "SPELL_CAST_START",
["source"] = "邪舌喷火者",
["npcID"] = 96480,
},
[407205] = {
["event"] = "SPELL_CAST_START",
["source"] = "联盟驱逐坦克",
["npcID"] = 208208,
},
[407124] = {
["event"] = "SPELL_CAST_START",
["source"] = "联盟骑士",
["npcID"] = 208165,
},
[410351] = {
["encounterName"] = "扎卡利突袭",
["source"] = "督军卡格尼",
["npcID"] = 199659,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[385383] = {
["event"] = "SPELL_CAST_START",
["source"] = "护炉哨兵",
["npcID"] = 192700,
},
[417868] = {
["source"] = "心绒幽爪熊",
["event"] = "SPELL_CAST_START",
["npcID"] = 211245,
},
[415309] = {
["source"] = "卓越荣耀联盟圣骑士",
["event"] = "SPELL_CAST_START",
["npcID"] = 207579,
},
[192621] = {
["encounterName"] = "阿什高姆",
["source"] = "阿什高姆",
["npcID"] = 95886,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1816,
},
[401338] = {
["source"] = "锯鳞蝰蛇",
["event"] = "SPELL_CAST_START",
["npcID"] = 208691,
},
[200913] = {
["event"] = "SPELL_CAST_START",
["source"] = "虫语清道夫",
["npcID"] = 98792,
},
[372474] = {
["source"] = "诺库德斗士",
["event"] = "SPELL_CAST_START",
["npcID"] = 187297,
},
[450153] = {
["source"] = "恶根",
["event"] = "SPELL_CAST_START",
["npcID"] = 216630,
},
[382712] = {
["event"] = "SPELL_CAST_START",
["source"] = "萎蔫橡树",
["npcID"] = 186229,
},
[191900] = {
["encounterName"] = "督军帕杰什",
["source"] = "督军帕杰什",
["npcID"] = 91784,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1810,
},
[421616] = {
["encounterName"] = "沃尔科罗斯",
["source"] = "沃尔科罗斯",
["encounterID"] = 2737,
["event"] = "SPELL_CAST_START",
["npcID"] = 208478,
},
[377594] = {
["encounterName"] = "莱萨杰丝，噬雷之龙",
["source"] = "莱萨杰丝",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[375671] = {
["source"] = "拜荒掷冰者",
["event"] = "SPELL_CAST_START",
["npcID"] = 203750,
},
[457447] = {
["event"] = "SPELL_CAST_START",
["source"] = "纺织者伊克西罗布",
["npcID"] = 218426,
},
[384761] = {
["encounterName"] = "狂怒风暴",
["source"] = "狂怒风暴",
["encounterID"] = 2636,
["event"] = "SPELL_CAST_START",
["npcID"] = 186615,
},
[398632] = {
["source"] = "铁潮射手",
["event"] = "SPELL_CAST_START",
["npcID"] = 200852,
},
[423664] = {
["encounterName"] = "隐修院长穆普雷",
["source"] = "隐修院长穆普雷",
["encounterID"] = 2848,
["event"] = "SPELL_CAST_START",
["npcID"] = 207940,
},
[396023] = {
["encounterName"] = "艾拉诺格",
["source"] = "艾拉诺格",
["npcID"] = 184972,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2587,
},
[196508] = {
["encounterName"] = "审判官托蒙托鲁姆",
["source"] = "疯狂的夺心者",
["npcID"] = 99657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1850,
},
[459496] = {
["source"] = "旧忆巫妖王",
["event"] = "SPELL_CAST_START",
["npcID"] = 224157,
},
[407285] = {
["event"] = "SPELL_CAST_START",
["source"] = "贾拉丁裂颅者",
["npcID"] = 202258,
},
[201176] = {
["event"] = "SPELL_CAST_START",
["source"] = "虫语清道夫",
["npcID"] = 98792,
},
[419327] = {
["event"] = "SPELL_CAST_START",
["source"] = "时间线掠夺者",
["npcID"] = 199748,
},
[203163] = {
["event"] = "SPELL_CAST_START",
["source"] = "魔怨支配者",
["npcID"] = 102788,
},
[400756] = {
["event"] = "SPELL_CAST_START",
["source"] = "旧忆之懒惰的苦工",
["npcID"] = 221895,
},
[457450] = {
["source"] = "回溯之奥里努克·碎牙",
["event"] = "SPELL_CAST_START",
["npcID"] = 221719,
},
[382555] = {
["event"] = "SPELL_CAST_START",
["source"] = "蕨斑战灾者",
["npcID"] = 185529,
},
[374364] = {
["encounterName"] = "莱魔",
["source"] = "莱魔",
["npcID"] = 186644,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2582,
},
[390223] = {
["source"] = "闪霜塔拉赛",
["event"] = "SPELL_CAST_START",
["npcID"] = 187089,
},
[385108] = {
["event"] = "SPELL_CAST_START",
["source"] = "不安的魔荚人",
["npcID"] = 187317,
},
[377435] = {
["source"] = "迷时地卜师",
["event"] = "SPELL_CAST_START",
["npcID"] = 187265,
},
[369409] = {
["event"] = "SPELL_CAST_START",
["source"] = "土灵管理者",
["npcID"] = 184130,
},
[455277] = {
["event"] = "SPELL_CAST_START",
["source"] = "海潮领主孽齿",
["npcID"] = 216527,
},
[416999] = {
["event"] = "SPELL_CAST_START",
["source"] = "白银之手圣骑士",
["npcID"] = 208193,
},
[375423] = {
["source"] = "注能的塔拉赛",
["event"] = "SPELL_CAST_START",
["npcID"] = 181310,
},
[381517] = {
["encounterName"] = "基拉卡与厄克哈特·风脉",
["source"] = "厄克哈特·风脉",
["npcID"] = 190485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[444145] = {
["source"] = "狂乱攻城炮台",
["event"] = "SPELL_CAST_START",
["npcID"] = 224521,
},
[193951] = {
["event"] = "SPELL_CAST_START",
["source"] = "倒钩小蜘蛛",
["npcID"] = 97677,
},
[388862] = {
["event"] = "SPELL_CAST_START",
["source"] = "被腐化的嗜魔者",
["npcID"] = 196045,
},
[369411] = {
["event"] = "SPELL_CAST_START",
["source"] = "洞穴探寻者",
["npcID"] = 184301,
},
[11970] = {
["event"] = "SPELL_CAST_START",
["source"] = "旧忆步行坦克",
["npcID"] = 213785,
},
[388976] = {
["event"] = "SPELL_CAST_START",
["source"] = "奥术抢劫者",
["npcID"] = 196671,
},
[388863] = {
["event"] = "SPELL_CAST_START",
["source"] = "被腐化的嗜魔者",
["npcID"] = 196045,
},
[440912] = {
["source"] = "剧毒菌丝",
["event"] = "SPELL_CAST_START",
["npcID"] = 217638,
},
[451113] = {
["event"] = "SPELL_CAST_START",
["source"] = "苏雷吉网法师",
["npcID"] = 210966,
},
[295028] = {
["source"] = "暴怒的工头",
["event"] = "SPELL_CAST_START",
["npcID"] = 220476,
},
[413427] = {
["event"] = "SPELL_CAST_START",
["source"] = "摆时者",
["npcID"] = 206074,
},
[256401] = {
["source"] = "影盲编织者",
["event"] = "SPELL_CAST_START",
["npcID"] = 206096,
},
[390912] = {
["event"] = "SPELL_CAST_START",
["source"] = "恶毒的鞭笞者",
["npcID"] = 197219,
},
[95826] = {
["event"] = "SPELL_CAST_START",
["source"] = "塞拉摩见习卫兵",
["npcID"] = 4951,
},
[439341] = {
["encounterName"] = "大捻接师艾佐",
["source"] = "大捻接师艾佐",
["npcID"] = 216658,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2909,
},
[378012] = {
["source"] = "焰誓烬语者",
["event"] = "SPELL_CAST_START",
["npcID"] = 206597,
},
[374533] = {
["encounterName"] = "熔炉主管戈雷克",
["source"] = "熔炉主管戈雷克",
["npcID"] = 189478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2612,
},
[200289] = {
["encounterName"] = "萨维斯之影",
["source"] = "萨维斯之影",
["npcID"] = 99192,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1839,
},
[392757] = {
["source"] = "雷缚始祖幼龙",
["event"] = "SPELL_CAST_START",
["npcID"] = 195094,
},
[400333] = {
["source"] = "山崖护卫博达妮",
["event"] = "SPELL_CAST_START",
["npcID"] = 202612,
},
[205549] = {
["encounterName"] = "纳拉萨斯",
["source"] = "纳拉萨斯",
["npcID"] = 91005,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1792,
},
[457458] = {
["event"] = "SPELL_CAST_START",
["source"] = "攻城领主谢罗什",
["npcID"] = 224311,
},
[403855] = {
["source"] = "瓦坎",
["event"] = "SPELL_CAST_START",
["npcID"] = 199855,
},
[439031] = {
["encounterName"] = "艾帕",
["source"] = "艾帕",
["npcID"] = 210267,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2929,
},
[405492] = {
["encounterName"] = "被遗忘的实验体",
["source"] = "萨德里奥",
["npcID"] = 200913,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[371618] = {
["source"] = "扎卡利先知",
["event"] = "SPELL_CAST_START",
["npcID"] = 201117,
},
[406798] = {
["isChanneled"] = true,
["source"] = "锯鳞蝰蛇",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208691,
},
[420403] = {
["source"] = "腐朽商贩烂爪",
["event"] = "SPELL_CAST_START",
["npcID"] = 205995,
},
[392957] = {
["source"] = "碧蓝龙麒",
["event"] = "SPELL_CAST_START",
["npcID"] = 194699,
},
[50455] = {
["source"] = "通灵主宰安提沃克",
["event"] = "SPELL_CAST_START",
["npcID"] = 28006,
},
[390463] = {
["encounterName"] = "莱萨杰丝，噬雷之龙",
["source"] = "莱萨杰丝",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[381521] = {
["source"] = "侵蚀暴雨",
["event"] = "SPELL_CAST_START",
["npcID"] = 191324,
},
[59638] = {
["event"] = "SPELL_CAST_START",
["source"] = "镜像",
["npcID"] = 31216,
},
[408422] = {
["encounterName"] = "鳞长萨卡雷斯",
["source"] = "萨卡雷斯",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[456438] = {
["event"] = "SPELL_CAST_START",
["source"] = "被诅咒的矿工",
["npcID"] = 213565,
},
[377609] = {
["event"] = "SPELL_CAST_START",
["source"] = "龙人偷猎者",
["npcID"] = 200173,
},
[448248] = {
["event"] = "SPELL_CAST_START",
["source"] = "沾血的网法师",
["npcID"] = 223253,
},
[404732] = {
["encounterName"] = "融合体密室",
["source"] = "永恒炽焰",
["npcID"] = 201773,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[196515] = {
["event"] = "SPELL_CAST_START",
["source"] = "束缚者阿什奥伊",
["npcID"] = 100250,
},
[210150] = {
["encounterName"] = "纳拉萨斯",
["source"] = "纳拉萨斯",
["npcID"] = 91005,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1792,
},
[142174] = {
["source"] = "小型幻影守卫",
["event"] = "SPELL_CAST_START",
["npcID"] = 71079,
},
[452442] = {
["source"] = "熔炉恐魔",
["event"] = "SPELL_CAST_START",
["npcID"] = 220271,
},
[202658] = {
["event"] = "SPELL_CAST_START",
["source"] = "恶毒污染者",
["npcID"] = 102584,
},
[412215] = {
["event"] = "SPELL_CAST_START",
["source"] = "斯普洛克，时誓戒卫",
["npcID"] = 205158,
},
[209477] = {
["event"] = "SPELL_CAST_START",
["source"] = "法力浮龙",
["npcID"] = 105703,
},
[200099] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "幽灵卫兵",
["npcID"] = 98368,
},
[196516] = {
["event"] = "SPELL_CAST_START",
["source"] = "导魔者瓦里兹",
["npcID"] = 100249,
},
[377612] = {
["encounterName"] = "莱萨杰丝，噬雷之龙",
["source"] = "莱萨杰丝",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[392561] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "采石场碎岩者",
["npcID"] = 197831,
},
[213583] = {
["encounterName"] = "科达娜·邪歌",
["source"] = "科达娜·邪歌",
["npcID"] = 95888,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1818,
},
[372276] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "病态萨满",
["npcID"] = 186667,
},
[369423] = {
["event"] = "SPELL_CAST_START",
["source"] = "迅捷的爬行者",
["npcID"] = 184303,
},
[191823] = {
["encounterName"] = "提拉宋·萨瑟利尔",
["source"] = "提拉宋·萨瑟利尔",
["npcID"] = 95885,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1815,
},
[373327] = {
["encounterName"] = "艾拉诺格",
["source"] = "原始火焰",
["npcID"] = 187593,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2587,
},
[446776] = {
["source"] = "作战山猫",
["event"] = "SPELL_CAST_START",
["npcID"] = 206699,
},
[389870] = {
["encounterName"] = "莱萨杰丝，噬雷之龙",
["source"] = "巨型风魔",
["npcID"] = 197145,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[200658] = {
["event"] = "SPELL_CAST_START",
["source"] = "恐魂毁灭者",
["npcID"] = 95771,
},
[377421] = {
["source"] = "影裘徘徊者",
["event"] = "SPELL_CAST_START",
["npcID"] = 189852,
},
[421636] = {
["encounterName"] = "丁达尔·迅贤，烈焰预言者",
["source"] = "丁达尔·迅贤",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[389686] = {
["event"] = "SPELL_CAST_START",
["source"] = "水晶之怒",
["npcID"] = 187160,
},
[374544] = {
["event"] = "SPELL_CAST_START",
["source"] = "腐臭的颂朽者",
["npcID"] = 186226,
},
[391948] = {
["event"] = "SPELL_CAST_START",
["source"] = "硫化暴怒者",
["npcID"] = 191682,
},
[409352] = {
["event"] = "SPELL_CAST_START",
["source"] = "耀光惧飑鸦",
["npcID"] = 202262,
},
[201298] = {
["event"] = "SPELL_CAST_START",
["source"] = "污血爆裂者",
["npcID"] = 100532,
},
[388008] = {
["encounterName"] = "泰拉什·灰翼",
["source"] = "泰拉什·灰翼",
["npcID"] = 186737,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2583,
},
[396044] = {
["encounterName"] = "梅莉杜莎·寒妆",
["source"] = "梅莉杜莎·寒妆",
["npcID"] = 188252,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[202661] = {
["event"] = "SPELL_CAST_START",
["source"] = "邪能烧灼者",
["npcID"] = 102583,
},
[406282] = {
["event"] = "SPELL_CAST_START",
["source"] = "碎裂自然学家",
["npcID"] = 201746,
},
[390926] = {
["source"] = "燃烛轰响者",
["event"] = "SPELL_CAST_START",
["npcID"] = 211546,
},
[377389] = {
["event"] = "SPELL_CAST_START",
["source"] = "头领鹰隼",
["npcID"] = 192333,
},
[428047] = {
["source"] = "威拉恩·碎木",
["event"] = "SPELL_CAST_START",
["npcID"] = 207554,
},
[260072] = {
["source"] = "帕库拉祭司",
["event"] = "SPELL_CAST_START",
["npcID"] = 131834,
},
[375716] = {
["encounterName"] = "巢穴守护者迪乌尔娜",
["source"] = "拜荒法师",
["npcID"] = 191206,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[383846] = {
["source"] = "可燃之墙",
["event"] = "SPELL_CAST_START",
["npcID"] = 201413,
},
[374339] = {
["event"] = "SPELL_CAST_START",
["source"] = "莱弗提防御者",
["npcID"] = 190340,
},
[388801] = {
["event"] = "SPELL_CAST_START",
["source"] = "复活的战士",
["npcID"] = 195855,
},
[405437] = {
["encounterName"] = "融合体密室",
["source"] = "暗影烈焰融合体",
["npcID"] = 201934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[195944] = {
["event"] = "SPELL_CAST_START",
["source"] = "海巨人弄潮者",
["npcID"] = 91796,
},
[374797] = {
["event"] = "SPELL_CAST_START",
["source"] = "风佑欧胡纳",
["npcID"] = 188088,
},
[406165] = {
["encounterName"] = "长老莱修克",
["source"] = "莱修克",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[431303] = {
["source"] = "夜幕影法师",
["event"] = "SPELL_CAST_START",
["npcID"] = 228540,
},
[207261] = {
["encounterName"] = "巡逻队长加多",
["source"] = "巡逻队长加多",
["npcID"] = 104215,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1868,
},
[388882] = {
["event"] = "SPELL_CAST_START",
["source"] = "注能者萨莉亚",
["npcID"] = 190405,
},
[374158] = {
["source"] = "旧忆爬行者",
["event"] = "SPELL_CAST_START",
["npcID"] = 221664,
},
[402985] = {
["source"] = "苟尔娜",
["event"] = "SPELL_CAST_START",
["npcID"] = 199853,
},
[409437] = {
["event"] = "SPELL_CAST_START",
["source"] = "贪食的岩浆虫",
["npcID"] = 203825,
},
[193164] = {
["event"] = "SPELL_CAST_START",
["source"] = "刃舞者伊莲娜",
["npcID"] = 96657,
},
[196175] = {
["event"] = "SPELL_CAST_START",
["source"] = "玛拉纳硬壳战士",
["npcID"] = 95947,
},
[401318] = {
["encounterName"] = "狱铸者卡扎拉",
["source"] = "狱铸者卡扎拉",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[375575] = {
["encounterName"] = "巢穴守护者迪乌尔娜",
["source"] = "龙兽折焰者",
["npcID"] = 191230,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[409359] = {
["encounterName"] = "扎卡利突袭",
["source"] = "督军卡格尼",
["npcID"] = 199659,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2682,
},
[387596] = {
["source"] = "复活的秘术师",
["event"] = "SPELL_CAST_START",
["npcID"] = 195877,
},
[411407] = {
["event"] = "SPELL_CAST_START",
["source"] = "迷时塑波者",
["npcID"] = 205363,
},
[200105] = {
["event"] = "SPELL_CAST_START",
["source"] = "幽灵卫兵",
["npcID"] = 98368,
},
[438025] = {
["encounterName"] = "本克·鸣蜂",
["source"] = "本克·鸣蜂",
["npcID"] = 218002,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2931,
},
[210261] = {
["event"] = "SPELL_CAST_START",
["source"] = "暮色卫队哨兵",
["npcID"] = 104251,
},
[197546] = {
["encounterName"] = "伊莉萨娜·拉文凯斯",
["source"] = "伊莉萨娜·拉文凯斯",
["npcID"] = 98696,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1833,
},
[387410] = {
["event"] = "SPELL_CAST_START",
["source"] = "地铸入侵者",
["npcID"] = 190737,
},
[423062] = {
["encounterName"] = "布朗派克男爵",
["source"] = "布朗派克男爵",
["encounterID"] = 2835,
["event"] = "SPELL_CAST_START",
["npcID"] = 207939,
},
[198833] = {
["encounterName"] = "库塔洛斯·拉文凯斯",
["source"] = "拉图修斯",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[451900] = {
["event"] = "SPELL_CAST_START",
["source"] = "死板的烟灰先知",
["npcID"] = 212876,
},
[391958] = {
["source"] = "碎裂劫掠者",
["event"] = "SPELL_CAST_START",
["npcID"] = 199374,
},
[415773] = {
["source"] = "时间间隙",
["event"] = "SPELL_CAST_START",
["npcID"] = 206065,
},
[393569] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "巢穴守护者基鲁斯",
["npcID"] = 198214,
},
[400430] = {
["encounterName"] = "狱铸者卡扎拉",
["source"] = "狱铸者卡扎拉",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[406886] = {
["encounterName"] = "迦拉克隆之荒",
["source"] = "迦拉克隆之荒",
["encounterID"] = 2668,
["event"] = "SPELL_CAST_START",
["npcID"] = 198997,
},
[407544] = {
["encounterName"] = "长老莱修克",
["source"] = "莱修克",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[396317] = {
["source"] = "洛阿玛斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 199030,
},
[372223] = {
["event"] = "SPELL_CAST_START",
["source"] = "卡拉希护骨者",
["npcID"] = 189265,
},
[449290] = {
["source"] = "夏亚路德",
["event"] = "SPELL_CAST_START",
["npcID"] = 223834,
},
[408959] = {
["encounterName"] = "扎卡利突袭",
["source"] = "督军卡格尼",
["npcID"] = 199659,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[374789] = {
["encounterName"] = "莱魔",
["source"] = "莱魔",
["npcID"] = 186644,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2582,
},
[393584] = {
["source"] = "长角的厚甲龙",
["event"] = "SPELL_CAST_START",
["npcID"] = 194692,
},
[385065] = {
["encounterName"] = "莱萨杰丝，噬雷之龙",
["source"] = "莱萨杰丝",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[295032] = {
["source"] = "暴怒的工头",
["event"] = "SPELL_CAST_START",
["npcID"] = 227355,
},
[428563] = {
["source"] = "狗头人护焰者",
["event"] = "SPELL_CAST_START",
["npcID"] = 213913,
},
[390938] = {
["event"] = "SPELL_CAST_START",
["source"] = "被激怒的掠蜓",
["npcID"] = 197406,
},
[15586] = {
["source"] = "冰冷矿洞测量者",
["event"] = "SPELL_CAST_START",
["npcID"] = 13097,
},
[204344] = {
["event"] = "SPELL_CAST_START",
["source"] = "黑爪刺客",
["npcID"] = 191955,
},
[406678] = {
["encounterName"] = "警戒管事兹斯卡恩",
["source"] = "兹斯卡恩",
["npcID"] = 202375,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2689,
},
[382749] = {
["event"] = "SPELL_CAST_START",
["source"] = "反胃的龙蛙",
["npcID"] = 194003,
},
[389804] = {
["event"] = "SPELL_CAST_START",
["source"] = "动荡的管理员",
["npcID"] = 187154,
},
[391385] = {
["event"] = "SPELL_CAST_START",
["source"] = "召唤出的熔岩元素",
["npcID"] = 182815,
},
[426771] = {
["source"] = "虚缚抢劫者",
["event"] = "SPELL_CAST_START",
["npcID"] = 212765,
},
[395035] = {
["event"] = "SPELL_CAST_START",
["source"] = "灵魂收割者加尔特玛",
["npcID"] = 195927,
},
[456453] = {
["event"] = "SPELL_CAST_START",
["source"] = "斯卡丁躯壳",
["npcID"] = 213566,
},
[452567] = {
["event"] = "SPELL_CAST_START",
["source"] = "食誓者",
["npcID"] = 206844,
},
[196870] = {
["event"] = "SPELL_CAST_START",
["source"] = "秘术师萨维",
["npcID"] = 98173,
},
[451117] = {
["event"] = "SPELL_CAST_START",
["source"] = "坚不可摧的伊克斯雷腾",
["npcID"] = 211262,
},
[211401] = {
["event"] = "SPELL_CAST_START",
["source"] = "炽燃小鬼",
["npcID"] = 104295,
},
[374361] = {
["encounterName"] = "多拉苟萨的回响",
["source"] = "多拉苟萨的回响",
["npcID"] = 190609,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2565,
},
[387564] = {
["event"] = "SPELL_CAST_START",
["source"] = "召唤的鞭笞者",
["npcID"] = 196102,
},
[51963] = {
["source"] = "黑锋石像鬼",
["event"] = "SPELL_CAST_START",
["npcID"] = 27829,
},
[196916] = {
["event"] = "SPELL_CAST_START",
["source"] = "薇兰达斯·拉文凯斯夫人",
["npcID"] = 98538,
},
[31707] = {
["source"] = "水元素",
["event"] = "SPELL_CAST_START",
["npcID"] = 208441,
},
[193597] = {
["encounterName"] = "积怨夫人",
["source"] = "积怨夫人",
["npcID"] = 91789,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1811,
},
[374563] = {
["event"] = "SPELL_CAST_START",
["source"] = "炫目蜻蜓",
["npcID"] = 190362,
},
[453392] = {
["source"] = "苏雷吉根除者",
["event"] = "SPELL_CAST_START",
["npcID"] = 225408,
},
[449167] = {
["encounterName"] = "机械大师",
["source"] = "代言人多利塔",
["encounterID"] = 2888,
["event"] = "SPELL_CAST_START",
["npcID"] = 213216,
},
[434722] = {
["encounterName"] = "演说者基克斯威兹克",
["source"] = "演说者基克斯威兹克",
["npcID"] = 216619,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2907,
},
[209495] = {
["event"] = "SPELL_CAST_START",
["source"] = "构造体卫兵",
["npcID"] = 104270,
},
[449298] = {
["isChanneled"] = true,
["source"] = "米兹克",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211582,
},
[388897] = {
["event"] = "SPELL_CAST_START",
["source"] = "游荡的碎步壳蟹",
["npcID"] = 229820,
},
[290878] = {
["source"] = "吉安娜·普罗德摩尔",
["event"] = "SPELL_CAST_START",
["npcID"] = 146409,
},
[200784] = {
["event"] = "SPELL_CAST_START",
["source"] = "虫语清道夫",
["npcID"] = 98792,
},
[385578] = {
["encounterName"] = "青刃",
["source"] = "青刃",
["npcID"] = 186739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[271220] = {
["source"] = "扎卡利钢盾",
["event"] = "SPELL_CAST_START",
["npcID"] = 208949,
},
[207278] = {
["encounterName"] = "巡逻队长加多",
["source"] = "巡逻队长加多",
["npcID"] = 104215,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1868,
},
[431896] = {
["encounterName"] = "酿造大师阿德里尔",
["source"] = "口渴的主顾",
["npcID"] = 215819,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[445205] = {
["event"] = "SPELL_CAST_START",
["source"] = "燧烬雄蜂",
["npcID"] = 215024,
},
[405279] = {
["encounterName"] = "米罗克",
["source"] = "米罗克",
["npcID"] = 198999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[455443] = {
["source"] = "蜡克斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 226267,
},
[374567] = {
["encounterName"] = "莱魔",
["source"] = "莱魔",
["npcID"] = 186644,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2582,
},
[375591] = {
["event"] = "SPELL_CAST_START",
["source"] = "冒泡的树液",
["npcID"] = 191313,
},
[186269] = {
["event"] = "SPELL_CAST_START",
["source"] = "枯碎塑造者",
["npcID"] = 90998,
},
[430238] = {
["source"] = "虚空碎片",
["event"] = "SPELL_CAST_START",
["npcID"] = 207202,
},
[456468] = {
["event"] = "SPELL_CAST_START",
["source"] = "斯卡丁躯壳",
["npcID"] = 213566,
},
[445207] = {
["source"] = "虚缚嚎叫者",
["event"] = "SPELL_CAST_START",
["npcID"] = 221979,
},
[290621] = {
["encounterName"] = "吉安娜·普罗德摩尔",
["source"] = "吉安娜·普罗德摩尔",
["encounterID"] = 2281,
["event"] = "SPELL_CAST_START",
["npcID"] = 146409,
},
[412448] = {
["source"] = "深岩剥石者巢穴主母",
["event"] = "SPELL_CAST_START",
["npcID"] = 200115,
},
[374569] = {
["event"] = "SPELL_CAST_START",
["source"] = "巨型腐朽",
["npcID"] = 186227,
},
[119524] = {
["event"] = "SPELL_CAST_START",
["source"] = "魔古射手",
["npcID"] = 61345,
},
[407069] = {
["encounterName"] = "狱铸者卡扎拉",
["source"] = "狱铸者卡扎拉",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[418591] = {
["encounterName"] = "梦境议会",
["source"] = "匹普",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208367,
},
[446430] = {
["source"] = "被惊扰的海藻",
["event"] = "SPELL_CAST_START",
["npcID"] = 215702,
},
[396069] = {
["event"] = "SPELL_CAST_START",
["source"] = "暴怒峭岩",
["npcID"] = 187090,
},
[413473] = {
["source"] = "时光偏差",
["event"] = "SPELL_CAST_START",
["npcID"] = 206063,
},
[378850] = {
["source"] = "不稳定化的元素",
["event"] = "SPELL_CAST_START",
["npcID"] = 181536,
},
[440137] = {
["source"] = "狂野锋爪兽",
["event"] = "SPELL_CAST_START",
["npcID"] = 221470,
},
[445210] = {
["source"] = "喷火冲锋者",
["event"] = "SPELL_CAST_START",
["npcID"] = 213577,
},
[377341] = {
["event"] = "SPELL_CAST_START",
["source"] = "水波暴怒者",
["npcID"] = 190407,
},
[372225] = {
["event"] = "SPELL_CAST_START",
["source"] = "卡拉希裂骨者",
["npcID"] = 189467,
},
[407125] = {
["event"] = "SPELL_CAST_START",
["source"] = "联盟骑士",
["npcID"] = 208165,
},
[375596] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "奥术看护者",
["npcID"] = 196115,
},
[421665] = {
["encounterName"] = "老蜡须",
["source"] = "老蜡须",
["encounterID"] = 2829,
["event"] = "SPELL_CAST_START",
["npcID"] = 210149,
},
[201139] = {
["event"] = "SPELL_CAST_START",
["source"] = "愤怒卫士剑圣",
["npcID"] = 98810,
},
[401342] = {
["source"] = "锯鳞蝰蛇",
["event"] = "SPELL_CAST_START",
["npcID"] = 208691,
},
[424737] = {
["encounterName"] = "雷卫戈伦",
["source"] = "雷卫戈伦",
["npcID"] = 207205,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2861,
},
[369781] = {
["encounterName"] = "失落的矮人",
["source"] = "迅捷的埃瑞克",
["npcID"] = 184582,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2555,
},
[200700] = {
["encounterName"] = "地底之王达古尔",
["source"] = "达古尔",
["npcID"] = 91007,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1793,
},
[376725] = {
["encounterName"] = "巴拉卡可汗",
["source"] = "诺库德风暴法师",
["npcID"] = 190294,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[408358] = {
["encounterName"] = "玛格莫莱克斯",
["source"] = "玛格莫莱克斯",
["npcID"] = 201579,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2683,
},
[401192] = {
["source"] = "内弗罗尔的卓格巴尔",
["event"] = "SPELL_CAST_START",
["npcID"] = 203041,
},
[422691] = {
["encounterName"] = "斯莫德隆",
["source"] = "斯莫德隆",
["encounterID"] = 2824,
["event"] = "SPELL_CAST_START",
["npcID"] = 200927,
},
[200261] = {
["event"] = "SPELL_CAST_START",
["source"] = "失魂的勇士",
["npcID"] = 98243,
},
[441119] = {
["event"] = "SPELL_CAST_START",
["source"] = "驯蜂者",
["npcID"] = 210264,
},
[401193] = {
["source"] = "迅掴者玛格克",
["event"] = "SPELL_CAST_START",
["npcID"] = 204651,
},
[426787] = {
["encounterName"] = "阿努布伊卡基",
["source"] = "阿努布伊卡基",
["encounterID"] = 2838,
["event"] = "SPELL_CAST_START",
["npcID"] = 211089,
},
[394622] = {
["source"] = "纳亚尔斯",
["event"] = "SPELL_CAST_START",
["npcID"] = 197354,
},
[396075] = {
["source"] = "水元素",
["event"] = "SPELL_CAST_START",
["npcID"] = 203747,
},
[372529] = {
["source"] = "影足打手",
["event"] = "SPELL_CAST_START",
["npcID"] = 183343,
},
[201141] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "愤怒卫士剑圣",
["npcID"] = 98810,
},
[198428] = {
["encounterName"] = "乌拉罗格·塑山",
["source"] = "乌拉罗格·塑山",
["npcID"] = 91004,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1791,
},
[446416] = {
["event"] = "SPELL_CAST_START",
["source"] = "蜂蜜注能的液滴",
["npcID"] = 213697,
},
[412129] = {
["event"] = "SPELL_CAST_START",
["source"] = "勒莱，时誓圣女",
["npcID"] = 205152,
},
[453616] = {
["source"] = "末日守卫",
["event"] = "SPELL_CAST_START",
["npcID"] = 225493,
},
[200630] = {
["event"] = "SPELL_CAST_START",
["source"] = "精神错乱的尖啸夜枭",
["npcID"] = 95769,
},
[420647] = {
["source"] = "阿什迪尔·麝木",
["event"] = "SPELL_CAST_START",
["npcID"] = 211258,
},
[388911] = {
["event"] = "SPELL_CAST_START",
["source"] = "缚法战斧",
["npcID"] = 196577,
},
[445252] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "老格林",
["npcID"] = 213403,
},
[396078] = {
["event"] = "SPELL_CAST_START",
["source"] = "召唤的毁灭者",
["npcID"] = 193288,
},
[457503] = {
["event"] = "SPELL_CAST_START",
["source"] = "齿轮咀嚼者",
["npcID"] = 212617,
},
[421672] = {
["encounterName"] = "沃尔科罗斯",
["source"] = "沃尔科罗斯",
["encounterID"] = 2737,
["event"] = "SPELL_CAST_START",
["npcID"] = 208478,
},
[422696] = {
["source"] = "艾维斯·焰喙",
["event"] = "SPELL_CAST_START",
["npcID"] = 210305,
},
[450488] = {
["source"] = "苔裘绵羊",
["event"] = "SPELL_CAST_START",
["npcID"] = 222419,
},
[202019] = {
["encounterName"] = "库塔洛斯·拉文凯斯",
["source"] = "丹塔利纳克斯",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[421852] = {
["source"] = "坚韧的林地牡麋",
["event"] = "SPELL_CAST_START",
["npcID"] = 207620,
},
[382802] = {
["event"] = "SPELL_CAST_START",
["source"] = "恶毒的腐烂妖术师",
["npcID"] = 187224,
},
[386866] = {
["source"] = "内弗罗尔",
["event"] = "SPELL_CAST_START",
["npcID"] = 203039,
},
[375605] = {
["event"] = "SPELL_CAST_START",
["source"] = "不受束缚的侍从",
["npcID"] = 187036,
},
[450718] = {
["event"] = "SPELL_CAST_START",
["source"] = "攻城领主谢罗什",
["npcID"] = 224311,
},
[409177] = {
["event"] = "SPELL_CAST_START",
["source"] = "熵能之憎",
["npcID"] = 203809,
},
[411437] = {
["event"] = "SPELL_CAST_START",
["source"] = "碎裂攻城大师",
["npcID"] = 198874,
},
[403326] = {
["encounterName"] = "狱铸者卡扎拉",
["source"] = "狱铸者卡扎拉",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[453776] = {
["source"] = "硕大的泰坦构造体",
["event"] = "SPELL_CAST_START",
["npcID"] = 212213,
},
[195108] = {
["event"] = "SPELL_CAST_START",
["source"] = "积怨织雷者",
["npcID"] = 91783,
},
[198073] = {
["encounterName"] = "可恨的斯麦斯帕",
["source"] = "可恨的斯麦斯帕",
["npcID"] = 98949,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1834,
},
[400177] = {
["isChanneled"] = true,
["source"] = "扎卡利祭师",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 199971,
},
[420525] = {
["encounterName"] = "梦境议会",
["source"] = "乌克托斯",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208363,
},
[369465] = {
["event"] = "SPELL_CAST_START",
["source"] = "土灵编织者",
["npcID"] = 186420,
},
[411439] = {
["event"] = "SPELL_CAST_START",
["source"] = "碎裂攻城大师",
["npcID"] = 198874,
},
[449318] = {
["source"] = "蛛魔暗法师",
["event"] = "SPELL_CAST_START",
["npcID"] = 208242,
},
[413487] = {
["source"] = "时光聚变",
["event"] = "SPELL_CAST_START",
["npcID"] = 206068,
},
[447271] = {
["event"] = "SPELL_CAST_START",
["source"] = "魁梧的战甲尉",
["npcID"] = 221103,
},
[425392] = {
["source"] = "火妖狱焰卫士",
["event"] = "SPELL_CAST_START",
["npcID"] = 210295,
},
[396084] = {
["source"] = "水元素",
["event"] = "SPELL_CAST_START",
["npcID"] = 203747,
},
[384823] = {
["encounterName"] = "柯姬雅·焰蹄",
["source"] = "炎缚火焰风暴",
["npcID"] = 189886,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[397110] = {
["source"] = "雷缚巨像",
["event"] = "SPELL_CAST_START",
["npcID"] = 187843,
},
[374586] = {
["encounterName"] = "熔炉主管戈雷克",
["source"] = "熔炉主管戈雷克",
["npcID"] = 189478,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2612,
},
[196027] = {
["event"] = "SPELL_CAST_START",
["source"] = "积怨奥术师",
["npcID"] = 97171,
},
[397109] = {
["source"] = "雷缚巨像",
["event"] = "SPELL_CAST_START",
["npcID"] = 187843,
},
[377658] = {
["encounterName"] = "莱萨杰丝，噬雷之龙",
["source"] = "莱萨杰丝",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[440107] = {
["encounterName"] = "女王之牙",
["source"] = "维克斯",
["npcID"] = 216649,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2908,
},
[449321] = {
["isChanneled"] = true,
["source"] = "米兹克",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211582,
},
[401205] = {
["source"] = "裂谷蜗牛",
["event"] = "SPELL_CAST_START",
["npcID"] = 219780,
},
[372562] = {
["source"] = "影足猎手",
["event"] = "SPELL_CAST_START",
["npcID"] = 186490,
},
[202181] = {
["event"] = "SPELL_CAST_START",
["source"] = "岩背啮咬者",
["npcID"] = 91006,
},
[196028] = {
["event"] = "SPELL_CAST_START",
["source"] = "积怨奥术师",
["npcID"] = 97171,
},
[195232] = {
["event"] = "SPELL_CAST_START",
["source"] = "积怨缚潮者",
["npcID"] = 97170,
},
[13860] = {
["source"] = "回溯异教徒",
["event"] = "SPELL_CAST_START",
["npcID"] = 221343,
},
[388941] = {
["source"] = "狂乱暴雨",
["event"] = "SPELL_CAST_START",
["npcID"] = 193815,
},
[418430] = {
["event"] = "SPELL_CAST_START",
["source"] = "旧忆魔宠",
["npcID"] = 221904,
},
[384827] = {
["encounterName"] = "肠击",
["source"] = "肠击",
["npcID"] = 186116,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[377661] = {
["source"] = "碧蓝龙麒",
["event"] = "SPELL_CAST_START",
["npcID"] = 194699,
},
[369400] = {
["event"] = "SPELL_CAST_START",
["source"] = "土灵看守",
["npcID"] = 184132,
},
[420659] = {
["encounterName"] = "蜡烛之王",
["source"] = "蜡烛之王",
["encounterID"] = 2787,
["event"] = "SPELL_CAST_START",
["npcID"] = 208745,
},
[388923] = {
["encounterName"] = "茂林古树",
["source"] = "茂林古树",
["npcID"] = 196482,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2563,
},
[389947] = {
["event"] = "SPELL_CAST_START",
["source"] = "好战者卡拉德",
["npcID"] = 190932,
},
[403891] = {
["encounterName"] = "米罗克",
["source"] = "米罗克",
["npcID"] = 198999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[161222] = {
["source"] = "旧忆夜刃豹",
["event"] = "SPELL_CAST_START",
["npcID"] = 221947,
},
[401209] = {
["source"] = "裂谷蜗牛",
["event"] = "SPELL_CAST_START",
["npcID"] = 219780,
},
[392635] = {
["event"] = "SPELL_CAST_START",
["source"] = "考尔迪兹",
["npcID"] = 197835,
},
[460587] = {
["source"] = "怀恨在心的技师",
["event"] = "SPELL_CAST_START",
["npcID"] = 220472,
},
[9573] = {
["event"] = "SPELL_CAST_START",
["source"] = "熏火龙",
["npcID"] = 9318,
},
[200637] = {
["encounterName"] = "地底之王达古尔",
["source"] = "达古尔",
["npcID"] = 91007,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1793,
},
[403272] = {
["encounterName"] = "奈萨里奥的回响",
["source"] = "奈萨里奥",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[382783] = {
["source"] = "黑曜暴君",
["event"] = "SPELL_CAST_START",
["npcID"] = 202483,
},
[209410] = {
["event"] = "SPELL_CAST_START",
["source"] = "暮色卫队奥术师",
["npcID"] = 104247,
},
[374719] = {
["event"] = "SPELL_CAST_START",
["source"] = "沙鳞裂蜴",
["npcID"] = 222302,
},
[413105] = {
["encounterName"] = "克罗妮卡",
["source"] = "克罗妮卡",
["encounterID"] = 2666,
["event"] = "SPELL_CAST_START",
["npcID"] = 198995,
},
[385883] = {
["source"] = "护炉管理者",
["event"] = "SPELL_CAST_START",
["npcID"] = 192703,
},
[196031] = {
["event"] = "SPELL_CAST_START",
["source"] = "积怨缚潮者",
["npcID"] = 97170,
},
[386991] = {
["source"] = "原始始祖幼龙",
["event"] = "SPELL_CAST_START",
["npcID"] = 193806,
},
[434589] = {
["event"] = "SPELL_CAST_START",
["source"] = "大恶魔",
["npcID"] = 217429,
},
[198079] = {
["encounterName"] = "可恨的斯麦斯帕",
["source"] = "可恨的斯麦斯帕",
["npcID"] = 98949,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1834,
},
[391999] = {
["event"] = "SPELL_CAST_START",
["source"] = "诺库德拾荒者",
["npcID"] = 185445,
},
[376644] = {
["encounterName"] = "巴拉卡可汗",
["source"] = "巴拉卡可汗",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[162248] = {
["source"] = "旧忆夜刃豹",
["event"] = "SPELL_CAST_START",
["npcID"] = 221947,
},
[284506] = {
["source"] = "俗气的斯宾温戴",
["event"] = "SPELL_CAST_START",
["npcID"] = 150740,
},
[434998] = {
["encounterName"] = "酿造大师阿德里尔",
["source"] = "主厨丘伊",
["npcID"] = 214697,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[401214] = {
["source"] = "内弗罗尔",
["event"] = "SPELL_CAST_START",
["npcID"] = 203039,
},
[373573] = {
["source"] = "梦灵龙",
["event"] = "SPELL_CAST_START",
["npcID"] = 207617,
},
[382787] = {
["event"] = "SPELL_CAST_START",
["source"] = "疾病斩击者",
["npcID"] = 187315,
},
[445236] = {
["source"] = "怨毒盘蛇",
["event"] = "SPELL_CAST_START",
["npcID"] = 218735,
},
[369602] = {
["encounterName"] = "失落的矮人",
["source"] = "奥拉夫",
["npcID"] = 184580,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2555,
},
[426964] = {
["source"] = "阿拉希步兵",
["event"] = "SPELL_CAST_START",
["npcID"] = 206705,
},
[207806] = {
["encounterName"] = "巡逻队长加多",
["source"] = "巡逻队长加多",
["npcID"] = 104215,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1868,
},
[430013] = {
["source"] = "任性的雷鸫",
["event"] = "SPELL_CAST_START",
["npcID"] = 207186,
},
[446261] = {
["event"] = "SPELL_CAST_START",
["source"] = "被鼓舞的枯萎之雾",
["npcID"] = 219909,
},
[381765] = {
["source"] = "冰元素",
["event"] = "SPELL_CAST_START",
["npcID"] = 203752,
},
[455480] = {
["source"] = "泰克",
["event"] = "SPELL_CAST_START",
["npcID"] = 226272,
},
[423979] = {
["source"] = "虚咒碾压者",
["event"] = "SPELL_CAST_START",
["npcID"] = 214419,
},
[211473] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗影女妖",
["npcID"] = 104300,
},
[194611] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗影猎手",
["npcID"] = 98926,
},
[460595] = {
["source"] = "恼怒的回收者",
["event"] = "SPELL_CAST_START",
["npcID"] = 220471,
},
[387504] = {
["encounterName"] = "原始海啸",
["source"] = "原始海啸",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[200238] = {
["encounterName"] = "萨维斯之影",
["source"] = "萨维斯之影",
["npcID"] = 99192,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1839,
},
[392006] = {
["event"] = "SPELL_CAST_START",
["source"] = "病态蛮兵",
["npcID"] = 186668,
},
[382791] = {
["event"] = "SPELL_CAST_START",
["source"] = "卡拉希熔岩术师",
["npcID"] = 193944,
},
[387910] = {
["event"] = "SPELL_CAST_START",
["source"] = "艾杰斯亚回声骑士",
["npcID"] = 196200,
},
[383823] = {
["source"] = "诺库德号角手",
["event"] = "SPELL_CAST_START",
["npcID"] = 192796,
},
[432227] = {
["encounterName"] = "收割者吉卡塔尔",
["source"] = "收割者吉卡塔尔",
["npcID"] = 215407,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2901,
},
[414307] = {
["encounterName"] = "时间流具象",
["source"] = "时间流具象",
["encounterID"] = 2667,
["event"] = "SPELL_CAST_START",
["npcID"] = 198996,
},
[420671] = {
["encounterName"] = "梦境议会",
["source"] = "艾尔雯",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208365,
},
[200642] = {
["event"] = "SPELL_CAST_START",
["source"] = "恐魂毁灭者",
["npcID"] = 95771,
},
[435004] = {
["encounterName"] = "酿造大师阿德里尔",
["source"] = "主厨丘伊",
["npcID"] = 214697,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2900,
},
[390983] = {
["source"] = "过载的防御矩阵",
["event"] = "SPELL_CAST_START",
["npcID"] = 201550,
},
[392007] = {
["source"] = "影足打手",
["event"] = "SPELL_CAST_START",
["npcID"] = 183343,
},
[405316] = {
["encounterName"] = "长老莱修克",
["source"] = "莱修克",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[381770] = {
["encounterName"] = "树口",
["source"] = "腐朽的软泥",
["npcID"] = 192481,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2568,
},
[412488] = {
["event"] = "SPELL_CAST_START",
["source"] = "匍匐粘液",
["npcID"] = 205820,
},
[191941] = {
["encounterName"] = "提拉宋·萨瑟利尔",
["source"] = "提拉宋·萨瑟利尔",
["npcID"] = 95885,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1815,
},
[409398] = {
["event"] = "SPELL_CAST_START",
["source"] = "水晶守护者",
["npcID"] = 203831,
},
[406333] = {
["encounterName"] = "长老莱修克",
["source"] = "莱修克",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[382795] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "卡拉希熔岩术师",
["npcID"] = 193944,
},
[432959] = {
["source"] = "虚空晋升者",
["event"] = "SPELL_CAST_START",
["npcID"] = 212793,
},
[125160] = {
["event"] = "SPELL_CAST_START",
["source"] = "联盟法师",
["npcID"] = 214167,
},
[401810] = {
["encounterName"] = "鳞长萨卡雷斯",
["source"] = "萨卡雷斯",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[384961] = {
["event"] = "SPELL_CAST_START",
["source"] = "腐弓游侠",
["npcID"] = 186208,
},
[375630] = {
["encounterName"] = "巢穴守护者迪乌尔娜",
["source"] = "龙人风暴使者",
["npcID"] = 191232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[408975] = {
["event"] = "SPELL_CAST_START",
["source"] = "碎裂锋刃领主",
["npcID"] = 198873,
},
[413621] = {
["source"] = "永恒渗透者",
["event"] = "SPELL_CAST_START",
["npcID"] = 206214,
},
[390987] = {
["source"] = "聚合熔渣行者",
["event"] = "SPELL_CAST_START",
["npcID"] = 208663,
},
[424771] = {
["source"] = "焚化先驱",
["event"] = "SPELL_CAST_START",
["npcID"] = 210147,
},
[388537] = {
["encounterName"] = "维克萨姆斯",
["source"] = "维克萨姆斯",
["npcID"] = 194181,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2562,
},
[406344] = {
["source"] = "黑曜折磨者",
["event"] = "SPELL_CAST_START",
["npcID"] = 202481,
},
[390988] = {
["source"] = "护炉管理者",
["event"] = "SPELL_CAST_START",
["npcID"] = 192703,
},
[369865] = {
["source"] = "诺库德掷矛者",
["event"] = "SPELL_CAST_START",
["npcID"] = 191570,
},
[425796] = {
["source"] = "焚化先驱",
["event"] = "SPELL_CAST_START",
["npcID"] = 210147,
},
[414535] = {
["encounterName"] = "伊律迪孔",
["source"] = "伊律迪孔",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[372561] = {
["event"] = "SPELL_CAST_START",
["source"] = "卡拉希猎人",
["npcID"] = 189227,
},
[392013] = {
["source"] = "看护防御者",
["event"] = "SPELL_CAST_START",
["npcID"] = 192694,
},
[388942] = {
["event"] = "SPELL_CAST_START",
["source"] = "奥术抢劫者",
["npcID"] = 196671,
},
[432068] = {
["event"] = "SPELL_CAST_START",
["source"] = "曳焰执法者",
["npcID"] = 212548,
},
[372538] = {
["event"] = "SPELL_CAST_START",
["source"] = "熔岩耀光",
["npcID"] = 189470,
},
[287565] = {
["encounterName"] = "吉安娜·普罗德摩尔",
["source"] = "吉安娜·普罗德摩尔",
["encounterID"] = 2281,
["event"] = "SPELL_CAST_START",
["npcID"] = 146409,
},
[447270] = {
["encounterName"] = "戴尔克莱上尉",
["source"] = "戴尔克莱上尉",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 207946,
},
[435012] = {
["encounterName"] = "阿努布泽克特",
["source"] = "阿努布泽克特",
["npcID"] = 215405,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2906,
},
[370104] = {
["event"] = "SPELL_CAST_START",
["source"] = "扎卡利铁拳斗士",
["npcID"] = 200057,
},
[369813] = {
["event"] = "SPELL_CAST_START",
["source"] = "召唤的毁灭者",
["npcID"] = 193288,
},
[388944] = {
["source"] = "拜荒破波者",
["event"] = "SPELL_CAST_START",
["npcID"] = 203748,
},
[204574] = {
["encounterName"] = "橡树之心",
["source"] = "橡树之心",
["npcID"] = 103344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1837,
},
[195528] = {
["event"] = "SPELL_CAST_START",
["source"] = "活体风暴",
["npcID"] = 95920,
},
[445251] = {
["source"] = "血喉",
["event"] = "SPELL_CAST_START",
["npcID"] = 219264,
},
[397726] = {
["event"] = "SPELL_CAST_START",
["source"] = "尖叫的雏龙",
["npcID"] = 187159,
},
[386700] = {
["source"] = "拜荒裂雹者",
["event"] = "SPELL_CAST_START",
["npcID"] = 201036,
},
[433053] = {
["event"] = "SPELL_CAST_START",
["source"] = "老格林",
["npcID"] = 213403,
},
[432967] = {
["event"] = "SPELL_CAST_START",
["source"] = "哨兵鹿壳虫",
["npcID"] = 216340,
},
[445217] = {
["source"] = "燧烬雄蜂",
["event"] = "SPELL_CAST_START",
["npcID"] = 215024,
},
[57984] = {
["event"] = "SPELL_CAST_START",
["source"] = "巨型火元素",
["npcID"] = 95061,
},
[440134] = {
["encounterName"] = "本克·鸣蜂",
["source"] = "本克·鸣蜂",
["npcID"] = 218002,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2931,
},
[191946] = {
["encounterName"] = "督军帕杰什",
["source"] = "督军帕杰什",
["npcID"] = 91784,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1810,
},
[431549] = {
["source"] = "蛛魔喷毒者",
["event"] = "SPELL_CAST_START",
["npcID"] = 219661,
},
[395756] = {
["event"] = "SPELL_CAST_START",
["source"] = "卡拉希岩浆匠师",
["npcID"] = 187867,
},
[200732] = {
["encounterName"] = "地底之王达古尔",
["source"] = "达古尔",
["npcID"] = 91007,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1793,
},
[118297] = {
["source"] = "原始火元素",
["event"] = "SPELL_CAST_START",
["npcID"] = 61029,
},
[416139] = {
["encounterName"] = "时空领主戴欧斯",
["source"] = "时空领主戴欧斯",
["npcID"] = 199000,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[418637] = {
["encounterName"] = "拉罗达尔，烈焰守护者",
["source"] = "拉罗达尔，烈焰守护者",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[207815] = {
["encounterName"] = "巡逻队长加多",
["source"] = "巡逻队长加多",
["npcID"] = 104215,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1868,
},
[450330] = {
["encounterName"] = "蜡面",
["source"] = "蜡面",
["encounterID"] = 2894,
["event"] = "SPELL_CAST_START",
["npcID"] = 214263,
},
[198245] = {
["encounterName"] = "可恨的斯麦斯帕",
["source"] = "可恨的斯麦斯帕",
["npcID"] = 98949,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1834,
},
[192631] = {
["encounterName"] = "阿什高姆",
["source"] = "阿什高姆",
["npcID"] = 95886,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1816,
},
[427852] = {
["encounterName"] = "虚空代言人艾里克",
["source"] = "虚空代言人艾里克",
["encounterID"] = 2883,
["event"] = "SPELL_CAST_START",
["npcID"] = 213119,
},
[400165] = {
["event"] = "SPELL_CAST_START",
["source"] = "永恒暮光大法师",
["npcID"] = 201223,
},
[369563] = {
["encounterName"] = "失落的矮人",
["source"] = "巴尔洛戈",
["npcID"] = 184581,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2555,
},
[448492] = {
["source"] = "守卫队长苏雷曼",
["event"] = "SPELL_CAST_START",
["npcID"] = 212826,
},
[394922] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "布雷卡斯",
["npcID"] = 196855,
},
[212423] = {
["event"] = "SPELL_CAST_START",
["source"] = "复生的潜伏者",
["npcID"] = 99541,
},
[453580] = {
["source"] = "焦灼散播者",
["event"] = "SPELL_CAST_START",
["npcID"] = 220267,
},
[225732] = {
["event"] = "SPELL_CAST_START",
["source"] = "薇兰达斯·拉文凯斯夫人",
["npcID"] = 98538,
},
[205231] = {
["event"] = "SPELL_CAST_START",
["source"] = "黑眼",
["npcID"] = 103673,
},
[409704] = {
["event"] = "SPELL_CAST_START",
["source"] = "谢戴赛索",
["npcID"] = 203411,
},
[424888] = {
["encounterName"] = "E.D.N.A.",
["source"] = "E.D.N.A",
["encounterID"] = 2854,
["event"] = "SPELL_CAST_START",
["npcID"] = 210108,
},
[62042] = {
["source"] = "回溯托里姆",
["event"] = "SPELL_CAST_START",
["npcID"] = 221923,
},
[384134] = {
["source"] = "诺库德战矛",
["event"] = "SPELL_CAST_START",
["npcID"] = 192791,
},
[428879] = {
["source"] = "击石者",
["event"] = "SPELL_CAST_START",
["npcID"] = 213954,
},
[50284] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "回溯地底之王",
["npcID"] = 226098,
},
[379023] = {
["event"] = "SPELL_CAST_START",
["source"] = "山峦觅食者",
["npcID"] = 191240,
},
[377532] = {
["source"] = "雷背碾压者",
["event"] = "SPELL_CAST_START",
["npcID"] = 191057,
},
[448444] = {
["encounterName"] = "蛛网将军阿贝纳尔",
["source"] = "蛛网将军阿贝纳尔",
["encounterID"] = 2877,
["event"] = "SPELL_CAST_START",
["npcID"] = 221896,
},
[410223] = {
["encounterName"] = "火光之龙菲莱克",
["source"] = "菲莱克",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[406358] = {
["encounterName"] = "被遗忘的实验体",
["source"] = "奈尔迪丝",
["npcID"] = 200912,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[214003] = {
["event"] = "SPELL_CAST_START",
["source"] = "复活的剑士",
["npcID"] = 102094,
},
[371551] = {
["source"] = "山崖护卫博达妮",
["event"] = "SPELL_CAST_START",
["npcID"] = 202612,
},
[424414] = {
["encounterName"] = "戴尔克莱上尉",
["source"] = "戴尔克莱上尉",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 207946,
},
[387083] = {
["source"] = "迷时棘背野猪人",
["event"] = "SPELL_CAST_START",
["npcID"] = 187264,
},
[460618] = {
["source"] = "过度劳累的厨师",
["event"] = "SPELL_CAST_START",
["npcID"] = 220744,
},
[412136] = {
["event"] = "SPELL_CAST_START",
["source"] = "瓦罗，时誓守护者",
["npcID"] = 201222,
},
[438826] = {
["event"] = "SPELL_CAST_START",
["source"] = "阿提克",
["npcID"] = 217533,
},
[427382] = {
["source"] = "引擎语者",
["event"] = "SPELL_CAST_START",
["npcID"] = 212764,
},
[385419] = {
["source"] = "护炉管理者",
["event"] = "SPELL_CAST_START",
["npcID"] = 192703,
},
[409093] = {
["encounterName"] = "玛格莫莱克斯",
["source"] = "玛格莫莱克斯",
["npcID"] = 201579,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2683,
},
[405022] = {
["encounterName"] = "鳞长萨卡雷斯",
["source"] = "萨卡雷斯",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[377522] = {
["encounterName"] = "督军莎尔佳",
["source"] = "狂怒余烬",
["npcID"] = 192464,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2611,
},
[429428] = {
["source"] = "爆地图腾",
["event"] = "SPELL_CAST_START",
["npcID"] = 214287,
},
[376186] = {
["event"] = "SPELL_CAST_START",
["source"] = "监视者拉哈尔",
["npcID"] = 189235,
},
[394731] = {
["event"] = "SPELL_CAST_START",
["source"] = "不稳定的土地",
["npcID"] = 198709,
},
[397892] = {
["event"] = "SPELL_CAST_START",
["source"] = "伊玛库塔",
["npcID"] = 104275,
},
[369675] = {
["event"] = "SPELL_CAST_START",
["source"] = "石窟地占师",
["npcID"] = 184022,
},
[412505] = {
["event"] = "SPELL_CAST_START",
["source"] = "提尔先锋",
["npcID"] = 205151,
},
[413529] = {
["source"] = "时流畸体",
["event"] = "SPELL_CAST_START",
["npcID"] = 199749,
},
[420490] = {
["source"] = "破壳导能者",
["event"] = "SPELL_CAST_START",
["npcID"] = 207038,
},
[393298] = {
["event"] = "SPELL_CAST_START",
["source"] = "阴燃巨像",
["npcID"] = 188673,
},
[411700] = {
["event"] = "SPELL_CAST_START",
["source"] = "迷时猎潮者",
["npcID"] = 205365,
},
[438471] = {
["encounterName"] = "阿瓦诺克斯",
["source"] = "阿瓦诺克斯",
["npcID"] = 213179,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2926,
},
[378397] = {
["event"] = "SPELL_CAST_START",
["source"] = "花岗岩之爪",
["npcID"] = 201557,
},
[372696] = {
["event"] = "SPELL_CAST_START",
["source"] = "原始主宰",
["npcID"] = 188244,
},
[375652] = {
["event"] = "SPELL_CAST_START",
["source"] = "奥术看护者",
["npcID"] = 196115,
},
[445191] = {
["source"] = "喷火冲锋者",
["event"] = "SPELL_CAST_START",
["npcID"] = 213577,
},
[448515] = {
["event"] = "SPELL_CAST_START",
["source"] = "艾蕾娜·安博兰兹",
["npcID"] = 211290,
},
[420326] = {
["source"] = "焰缚哨兵",
["event"] = "SPELL_CAST_START",
["npcID"] = 206900,
},
[226347] = {
["event"] = "SPELL_CAST_START",
["source"] = "石爪虫王",
["npcID"] = 102404,
},
[214988] = {
["event"] = "SPELL_CAST_START",
["source"] = "复仇之魂",
["npcID"] = 100364,
},
[200248] = {
["event"] = "SPELL_CAST_START",
["source"] = "复活的奥术师",
["npcID"] = 98280,
},
[386410] = {
["encounterName"] = "莱萨杰丝，噬雷之龙",
["source"] = "莱萨杰丝",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[448818] = {
["source"] = "狗头人颅面者",
["event"] = "SPELL_CAST_START",
["npcID"] = 203951,
},
[401248] = {
["encounterName"] = "永恒守护者提尔",
["source"] = "永恒守护者提尔",
["npcID"] = 198998,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2670,
},
[398394] = {
["event"] = "SPELL_CAST_START",
["source"] = "砾壳尖鸣者",
["npcID"] = 220155,
},
[448341] = {
["source"] = "狗头人重击者",
["event"] = "SPELL_CAST_START",
["npcID"] = 203877,
},
[385569] = {
["encounterName"] = "莱萨杰丝，噬雷之龙",
["source"] = "莱萨杰丝",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[214989] = {
["event"] = "SPELL_CAST_START",
["source"] = "复仇之魂",
["npcID"] = 100364,
},
[211406] = {
["event"] = "SPELL_CAST_START",
["source"] = "炽燃小鬼",
["npcID"] = 104295,
},
[426524] = {
["encounterName"] = "拉罗达尔，烈焰守护者",
["source"] = "火焰树人",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208459,
},
[167385] = {
["event"] = "SPELL_CAST_START",
["source"] = "石拳",
["npcID"] = 189617,
},
[382303] = {
["encounterName"] = "布罗马奇",
["source"] = "布罗马奇",
["npcID"] = 184018,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2556,
},
[422518] = {
["encounterName"] = "火光之龙菲莱克",
["source"] = "菲莱克",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[418009] = {
["encounterName"] = "迷时战场",
["source"] = "联盟弓手",
["npcID"] = 206352,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[209033] = {
["event"] = "SPELL_CAST_START",
["source"] = "暮色卫队卫兵",
["npcID"] = 104246,
},
[372971] = {
["event"] = "SPELL_CAST_START",
["source"] = "卡拉希铁匠",
["npcID"] = 189471,
},
[408605] = {
["event"] = "SPELL_CAST_START",
["source"] = "碎裂湮灭者",
["npcID"] = 198869,
},
[427869] = {
["encounterName"] = "虚空代言人艾里克",
["source"] = "虚空代言人艾里克",
["encounterID"] = 2883,
["event"] = "SPELL_CAST_START",
["npcID"] = 213119,
},
[449368] = {
["event"] = "SPELL_CAST_START",
["source"] = "流浪者伊达",
["npcID"] = 220953,
},
[196563] = {
["encounterName"] = "督军帕杰什",
["source"] = "督军帕杰什",
["npcID"] = 91784,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1810,
},
[201226] = {
["event"] = "SPELL_CAST_START",
["source"] = "污血之怒",
["npcID"] = 100531,
},
[393348] = {
["event"] = "SPELL_CAST_START",
["source"] = "坚韧的巢穴守望者",
["npcID"] = 198263,
},
[428894] = {
["source"] = "咒炉荣誉卫兵",
["event"] = "SPELL_CAST_START",
["npcID"] = 214264,
},
[376683] = {
["encounterName"] = "巴拉卡可汗",
["source"] = "巴拉卡可汗",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[369328] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "符文保护者",
["npcID"] = 184107,
},
[386921] = {
["encounterName"] = "格拉尼斯",
["source"] = "屠龙者之矛",
["encounterID"] = 2637,
["event"] = "SPELL_CAST_START",
["npcID"] = 194367,
},
[371565] = {
["source"] = "欧恩伊尔唤风者",
["event"] = "SPELL_CAST_START",
["npcID"] = 191244,
},
[417634] = {
["encounterName"] = "拉罗达尔，烈焰守护者",
["source"] = "拉罗达尔，烈焰守护者",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[403203] = {
["encounterName"] = "融合体密室",
["source"] = "永恒炽焰",
["npcID"] = 201773,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[448347] = {
["source"] = "迪乌米克",
["event"] = "SPELL_CAST_START",
["npcID"] = 211564,
},
[396346] = {
["event"] = "SPELL_CAST_START",
["source"] = "好战者卡拉德",
["npcID"] = 190932,
},
[409445] = {
["event"] = "SPELL_CAST_START",
["source"] = "贪食的岩浆虫",
["npcID"] = 203825,
},
[373614] = {
["event"] = "SPELL_CAST_START",
["source"] = "炎缚毁灭者",
["npcID"] = 190034,
},
[377384] = {
["event"] = "SPELL_CAST_START",
["source"] = "水波暴怒者",
["npcID"] = 190407,
},
[204243] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "梦魇住民",
["npcID"] = 101991,
},
[430097] = {
["encounterName"] = "机械大师",
["source"] = "代言人布洛克",
["encounterID"] = 2888,
["event"] = "SPELL_CAST_START",
["npcID"] = 213217,
},
[428345] = {
["source"] = "熔火之蝎",
["event"] = "SPELL_CAST_START",
["npcID"] = 213696,
},
[389518] = {
["event"] = "SPELL_CAST_START",
["source"] = "花火捣键者",
["npcID"] = 212596,
},
[421398] = {
["encounterName"] = "丁达尔·迅贤，烈焰预言者",
["source"] = "丁达尔·迅贤",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[389446] = {
["encounterName"] = "看护者伊里度斯",
["source"] = "废灵装置",
["npcID"] = 196712,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[378420] = {
["source"] = "原始雪崩",
["event"] = "SPELL_CAST_START",
["npcID"] = 187082,
},
[387826] = {
["source"] = "尤克赫尔驭兽师",
["event"] = "SPELL_CAST_START",
["npcID"] = 195878,
},
[226296] = {
["event"] = "SPELL_CAST_START",
["source"] = "邪裂巨人",
["npcID"] = 91000,
},
[401258] = {
["encounterName"] = "扎卡利突袭",
["source"] = "督军卡格尼",
["npcID"] = 199659,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[387843] = {
["event"] = "SPELL_CAST_START",
["source"] = "幽魂唤魔师",
["npcID"] = 196202,
},
[398497] = {
["event"] = "SPELL_CAST_START",
["source"] = "雷巅岩喉蝠",
["npcID"] = 212364,
},
[387950] = {
["event"] = "SPELL_CAST_START",
["source"] = "喷口践踏者",
["npcID"] = 187919,
},
[413544] = {
["source"] = "时流畸体",
["event"] = "SPELL_CAST_START",
["npcID"] = 199749,
},
[451423] = {
["event"] = "SPELL_CAST_START",
["source"] = "谢非提克",
["npcID"] = 219984,
},
[440162] = {
["source"] = "猩红臭盖菌",
["event"] = "SPELL_CAST_START",
["npcID"] = 212579,
},
[444722] = {
["source"] = "热心的圣殿骑士",
["event"] = "SPELL_CAST_START",
["npcID"] = 207949,
},
[450400] = {
["source"] = "监督者拉德洛克",
["event"] = "SPELL_CAST_START",
["npcID"] = 220897,
},
[135029] = {
["source"] = "水元素",
["event"] = "SPELL_CAST_START",
["npcID"] = 208441,
},
[411958] = {
["event"] = "SPELL_CAST_START",
["source"] = "伊律迪孔的造物",
["npcID"] = 205691,
},
[413024] = {
["event"] = "SPELL_CAST_START",
["source"] = "瓦罗，时誓守护者",
["npcID"] = 201222,
},
[113656] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "大地之灵",
["npcID"] = 69792,
},
[426855] = {
["encounterName"] = "尼穆威，轮回编织者",
["source"] = "尼穆威",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 206172,
},
[193375] = {
["encounterName"] = "乌拉罗格·塑山",
["source"] = "乌拉罗格·塑山",
["npcID"] = 91004,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1791,
},
[415296] = {
["source"] = "拉罗达尔，烈焰守护者",
["event"] = "SPELL_CAST_START",
["npcID"] = 205136,
},
[428077] = {
["source"] = "梦境守护者",
["event"] = "SPELL_CAST_START",
["npcID"] = 210423,
},
[192985] = {
["encounterName"] = "艾萨拉之怒",
["source"] = "艾萨拉之怒",
["npcID"] = 96028,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1814,
},
[381694] = {
["encounterName"] = "劈爪的战团",
["source"] = "伤齿",
["npcID"] = 186124,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[386559] = {
["encounterName"] = "不屈者卡金",
["source"] = "不屈者卡金",
["npcID"] = 189727,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2617,
},
[406581] = {
["event"] = "SPELL_CAST_START",
["source"] = "原始熔岩元素",
["npcID"] = 202264,
},
[398634] = {
["source"] = "铁潮射手",
["event"] = "SPELL_CAST_START",
["npcID"] = 200852,
},
[382836] = {
["encounterName"] = "提拉和马鲁克",
["source"] = "马鲁克",
["npcID"] = 186338,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[387955] = {
["event"] = "SPELL_CAST_START",
["source"] = "虚无修复者",
["npcID"] = 196203,
},
[200551] = {
["encounterName"] = "地底之王达古尔",
["source"] = "达古尔",
["npcID"] = 91007,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1793,
},
[451428] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "谢非提克",
["npcID"] = 219984,
},
[191527] = {
["event"] = "SPELL_CAST_START",
["source"] = "刃舞者伊莲娜",
["npcID"] = 96657,
},
[367481] = {
["event"] = "SPELL_CAST_START",
["source"] = "枯萎噬咬者",
["npcID"] = 187231,
},
[372600] = {
["event"] = "SPELL_CAST_START",
["source"] = "哨兵塔隆达丝",
["npcID"] = 184124,
},
[426734] = {
["encounterName"] = "代言人夏多克朗",
["source"] = "代言人夏多克朗",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[378222] = {
["source"] = "入侵的龙蛙",
["event"] = "SPELL_CAST_START",
["npcID"] = 181831,
},
[433002] = {
["event"] = "SPELL_CAST_START",
["source"] = "沾血的助手",
["npcID"] = 216333,
},
[409456] = {
["encounterName"] = "伊律迪孔",
["source"] = "伊律迪孔",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[426860] = {
["encounterName"] = "阿努布伊卡基",
["source"] = "阿努布伊卡基",
["encounterID"] = 2838,
["event"] = "SPELL_CAST_START",
["npcID"] = 211089,
},
[374892] = {
["event"] = "SPELL_CAST_START",
["source"] = "平原行者幼崽",
["npcID"] = 187939,
},
[449383] = {
["event"] = "SPELL_CAST_START",
["source"] = "流浪者伊达",
["npcID"] = 220953,
},
[443111] = {
["event"] = "SPELL_CAST_START",
["source"] = "晦幽信徒",
["npcID"] = 216867,
},
[387960] = {
["event"] = "SPELL_CAST_START",
["source"] = "喷口践踏者",
["npcID"] = 187919,
},
[449815] = {
["event"] = "SPELL_CAST_START",
["source"] = "圣物承载者山德雷斯",
["npcID"] = 217534,
},
[200154] = {
["event"] = "SPELL_CAST_START",
["source"] = "顶石粉碎者",
["npcID"] = 102253,
},
[407917] = {
["encounterName"] = "奈萨里奥的回响",
["source"] = "奈萨里奥",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[378454] = {
["event"] = "SPELL_CAST_START",
["source"] = "原始雪崩",
["npcID"] = 187082,
},
[383073] = {
["encounterName"] = "泰洛斯",
["source"] = "泰洛斯",
["npcID"] = 190496,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[449385] = {
["event"] = "SPELL_CAST_START",
["source"] = "流浪者伊达",
["npcID"] = 220953,
},
[427579] = {
["source"] = "坚韧的鬃罴",
["event"] = "SPELL_CAST_START",
["npcID"] = 210507,
},
[434137] = {
["event"] = "SPELL_CAST_START",
["source"] = "皇家毒壳者",
["npcID"] = 220730,
},
[381535] = {
["event"] = "SPELL_CAST_START",
["source"] = "焦躁的钥石",
["npcID"] = 189811,
},
[383866] = {
["event"] = "SPELL_CAST_START",
["source"] = "烛芯化形",
["npcID"] = 205407,
},
[396856] = {
["event"] = "SPELL_CAST_START",
["source"] = "火焰亡魂",
["npcID"] = 203756,
},
[202728] = {
["event"] = "SPELL_CAST_START",
["source"] = "恐惧魔王孟达休斯",
["npcID"] = 99649,
},
[193376] = {
["encounterName"] = "乌拉罗格·塑山",
["source"] = "乌拉罗格·塑山",
["npcID"] = 91004,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1791,
},
[372839] = {
["event"] = "SPELL_CAST_START",
["source"] = "诺库德掷矛者",
["npcID"] = 191570,
},
[15493] = {
["event"] = "SPELL_CAST_START",
["source"] = "旧忆十字军战士",
["npcID"] = 213564,
},
[195037] = {
["event"] = "SPELL_CAST_START",
["source"] = "积怨神谕者",
["npcID"] = 95861,
},
[388643] = {
["encounterName"] = "莱萨杰丝，噬雷之龙",
["source"] = "莱萨杰丝",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[378413] = {
["source"] = "狂乱的潮汐之核",
["event"] = "SPELL_CAST_START",
["npcID"] = 213699,
},
[392284] = {
["event"] = "SPELL_CAST_START",
["source"] = "贪婪的始祖幼龙",
["npcID"] = 193145,
},
[385916] = {
["encounterName"] = "格拉尼斯",
["source"] = "格拉尼斯",
["encounterID"] = 2637,
["event"] = "SPELL_CAST_START",
["npcID"] = 186616,
},
[193502] = {
["event"] = "SPELL_CAST_START",
["source"] = "格雷凡纳·裂魂",
["npcID"] = 98177,
},
[371584] = {
["source"] = "铁潮盐法师",
["event"] = "SPELL_CAST_START",
["npcID"] = 200853,
},
[452171] = {
["source"] = "虫群专家多米丝",
["event"] = "SPELL_CAST_START",
["npcID"] = 216578,
},
[388706] = {
["source"] = "入侵的风暴元素",
["event"] = "SPELL_CAST_START",
["npcID"] = 191235,
},
[446086] = {
["event"] = "SPELL_CAST_START",
["source"] = "苏雷吉反自然者",
["npcID"] = 216339,
},
[395273] = {
["event"] = "SPELL_CAST_START",
["source"] = "原始风暴哨卫",
["npcID"] = 196856,
},
[391793] = {
["event"] = "SPELL_CAST_START",
["source"] = "狂乱的潮汐之核",
["npcID"] = 213699,
},
[409216] = {
["event"] = "SPELL_CAST_START",
["source"] = "碎裂织魔者",
["npcID"] = 198872,
},
[383298] = {
["event"] = "SPELL_CAST_START",
["source"] = "召唤出的熔岩元素",
["npcID"] = 182815,
},
[428916] = {
["source"] = "虔诚的牧师",
["event"] = "SPELL_CAST_START",
["npcID"] = 206697,
},
[270515] = {
["event"] = "SPELL_CAST_START",
["source"] = "灌注艾泽里特的元素",
["npcID"] = 137905,
},
[426869] = {
["event"] = "SPELL_CAST_START",
["source"] = "曳焰执法者",
["npcID"] = 212548,
},
[405668] = {
["event"] = "SPELL_CAST_START",
["source"] = "碎裂破坏者",
["npcID"] = 201753,
},
[360075] = {
["event"] = "SPELL_CAST_START",
["source"] = "魔法调节的自动体核心",
["npcID"] = 182210,
},
[376706] = {
["event"] = "SPELL_CAST_START",
["source"] = "诺库德风暴法师",
["npcID"] = 190294,
},
[400492] = {
["source"] = "扎卡利圣地卫士",
["event"] = "SPELL_CAST_START",
["npcID"] = 202803,
},
[427894] = {
["source"] = "铸炉大师达米安",
["event"] = "SPELL_CAST_START",
["npcID"] = 212831,
},
[195595] = {
["event"] = "SPELL_CAST_START",
["source"] = "水元素",
["npcID"] = 99300,
},
[459938] = {
["event"] = "SPELL_CAST_START",
["source"] = "滑蜡者落耳",
["npcID"] = 213883,
},
[373636] = {
["event"] = "SPELL_CAST_START",
["source"] = "斑点徘徊者",
["npcID"] = 195460,
},
[375945] = {
["event"] = "SPELL_CAST_START",
["source"] = "冰角山羊",
["npcID"] = 193980,
},
[396159] = {
["event"] = "SPELL_CAST_START",
["source"] = "世界侵蚀者乌姆灵",
["npcID"] = 187366,
},
[426145] = {
["encounterName"] = "蜡烛之王",
["source"] = "蜡烛之王",
["encounterID"] = 2787,
["event"] = "SPELL_CAST_START",
["npcID"] = 208745,
},
[377732] = {
["event"] = "SPELL_CAST_START",
["source"] = "莱弗提管理者",
["npcID"] = 184319,
},
[193505] = {
["event"] = "SPELL_CAST_START",
["source"] = "邪裂巨人",
["npcID"] = 91000,
},
[424825] = {
["source"] = "晋升者希尔瓦奈什",
["event"] = "SPELL_CAST_START",
["npcID"] = 207107,
},
[384899] = {
["source"] = "腐弓游侠",
["event"] = "SPELL_CAST_START",
["npcID"] = 186208,
},
[374720] = {
["encounterName"] = "莱魔",
["source"] = "莱魔",
["npcID"] = 186644,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2582,
},
[427897] = {
["source"] = "铸炉大师达米安",
["event"] = "SPELL_CAST_START",
["npcID"] = 212831,
},
[442995] = {
["event"] = "SPELL_CAST_START",
["source"] = "风险投资公司蜂蜜收割者",
["npcID"] = 220946,
},
[446325] = {
["source"] = "被感染的雌孔雀",
["event"] = "SPELL_CAST_START",
["npcID"] = 212710,
},
[418684] = {
["event"] = "SPELL_CAST_START",
["source"] = "联盟驱逐坦克",
["npcID"] = 208208,
},
[13608] = {
["source"] = "回溯之银溪镇伐木工",
["event"] = "SPELL_CAST_START",
["npcID"] = 226197,
},
[375687] = {
["event"] = "SPELL_CAST_START",
["source"] = "腐朽图腾",
["npcID"] = 190426,
},
[11021] = {
["source"] = "灼热雏龙",
["event"] = "SPELL_CAST_START",
["npcID"] = 4324,
},
[423200] = {
["encounterName"] = "斯卡莫拉克",
["source"] = "斯卡莫拉克",
["encounterID"] = 2880,
["event"] = "SPELL_CAST_START",
["npcID"] = 210156,
},
[437956] = {
["event"] = "SPELL_CAST_START",
["source"] = "风险投资公司纵火狂",
["npcID"] = 218671,
},
[381602] = {
["encounterName"] = "基拉卡与厄克哈特·风脉",
["source"] = "基拉卡",
["npcID"] = 190484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[423117] = {
["encounterName"] = "沃尔科罗斯",
["source"] = "沃尔科罗斯",
["encounterID"] = 2737,
["event"] = "SPELL_CAST_START",
["npcID"] = 208478,
},
[457959] = {
["event"] = "SPELL_CAST_START",
["source"] = "吉欧瑟姆斯",
["npcID"] = 217416,
},
[440185] = {
["source"] = "侵蚀的真菌人",
["event"] = "SPELL_CAST_START",
["npcID"] = 216281,
},
[375056] = {
["encounterName"] = "查尔加斯，龙鳞之灾",
["source"] = "查尔加斯，龙鳞之灾",
["npcID"] = 189340,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2613,
},
[409473] = {
["event"] = "SPELL_CAST_START",
["source"] = "贪食的岩浆虫",
["npcID"] = 203825,
},
[377179] = {
["source"] = "风灾幼龙",
["event"] = "SPELL_CAST_START",
["npcID"] = 190230,
},
[439202] = {
["encounterName"] = "艾帕",
["source"] = "艾帕",
["npcID"] = 210267,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2929,
},
[367500] = {
["event"] = "SPELL_CAST_START",
["source"] = "蕨斑战灾者",
["npcID"] = 185529,
},
[450424] = {
["event"] = "SPELL_CAST_START",
["source"] = "凝结的蜡油巨人",
["npcID"] = 223206,
},
[404916] = {
["encounterName"] = "米罗克",
["source"] = "米罗克",
["npcID"] = 198999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[399062] = {
["source"] = "铁潮打击者",
["event"] = "SPELL_CAST_START",
["npcID"] = 200858,
},
[411236] = {
["encounterName"] = "鳞长萨卡雷斯",
["source"] = "萨卡雷斯",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[432114] = {
["event"] = "SPELL_CAST_START",
["source"] = "死板的熔炉法师",
["npcID"] = 212884,
},
[381834] = {
["encounterName"] = "劈爪的战团",
["source"] = "莉拉·劈爪",
["npcID"] = 186122,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[456101] = {
["event"] = "SPELL_CAST_START",
["source"] = "重构的斯卡丁",
["npcID"] = 219245,
},
[420737] = {
["source"] = "长老卡莎梵",
["event"] = "SPELL_CAST_START",
["npcID"] = 206818,
},
[451822] = {
["source"] = "领地渊行者",
["event"] = "SPELL_CAST_START",
["npcID"] = 224218,
},
[458775] = {
["source"] = "觉醒的硫磺破坏者",
["event"] = "SPELL_CAST_START",
["npcID"] = 225894,
},
[378764] = {
["encounterName"] = "树口",
["source"] = "树口",
["npcID"] = 186120,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2568,
},
[367503] = {
["event"] = "SPELL_CAST_START",
["source"] = "腐朽代言人",
["npcID"] = 186191,
},
[409477] = {
["event"] = "SPELL_CAST_START",
["source"] = "谢戴赛索",
["npcID"] = 203411,
},
[458692] = {
["source"] = "觉醒的熔火之怒",
["event"] = "SPELL_CAST_START",
["npcID"] = 225896,
},
[391050] = {
["event"] = "SPELL_CAST_START",
["source"] = "大引导者莱瓦迪",
["npcID"] = 197535,
},
[441214] = {
["event"] = "SPELL_CAST_START",
["source"] = "美味测试员",
["npcID"] = 220060,
},
[372623] = {
["encounterName"] = "哨兵塔隆达丝",
["source"] = "哨兵塔隆达丝",
["npcID"] = 184124,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2557,
},
[209378] = {
["event"] = "SPELL_CAST_START",
["source"] = "伊玛库塔",
["npcID"] = 104275,
},
[438971] = {
["encounterName"] = "本克·鸣蜂",
["source"] = "贪婪的燧烬蜂",
["npcID"] = 218016,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2931,
},
[455817] = {
["source"] = "浊刺",
["event"] = "SPELL_CAST_START",
["npcID"] = 220771,
},
[387315] = {
["source"] = "失败的鳞长海洛索尔",
["event"] = "SPELL_CAST_START",
["npcID"] = 201822,
},
[195046] = {
["event"] = "SPELL_CAST_START",
["source"] = "积怨神谕者",
["npcID"] = 95861,
},
[431304] = {
["encounterName"] = "阿努布伊卡基",
["source"] = "暗影具象",
["encounterID"] = 2838,
["event"] = "SPELL_CAST_START",
["npcID"] = 211341,
},
[445311] = {
["source"] = "巨硕螃蟹",
["event"] = "SPELL_CAST_START",
["npcID"] = 224589,
},
[382620] = {
["event"] = "SPELL_CAST_START",
["source"] = "骨箭猎手",
["npcID"] = 185534,
},
[435560] = {
["encounterName"] = "戈尔迪·底爵",
["source"] = "戈尔迪·底爵",
["npcID"] = 214661,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2930,
},
[436592] = {
["encounterName"] = "戈尔迪·底爵",
["source"] = "戈尔迪·底爵",
["npcID"] = 214661,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2930,
},
[453894] = {
["source"] = "朗克哈特",
["event"] = "SPELL_CAST_START",
["npcID"] = 222152,
},
[453889] = {
["source"] = "朗克哈特",
["event"] = "SPELL_CAST_START",
["npcID"] = 222152,
},
[436637] = {
["encounterName"] = "戈尔迪·底爵",
["source"] = "戈尔迪·底爵",
["npcID"] = 214661,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2930,
},
[435622] = {
["encounterName"] = "戈尔迪·底爵",
["source"] = "戈尔迪·底爵",
["npcID"] = 214661,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2930,
},
[456664] = {
["event"] = "SPELL_CAST_START",
["source"] = "拉巴恩",
["npcID"] = 228343,
},
[290435] = {
["source"] = "佩里克·泰兹维普",
["event"] = "SPELL_CAST_START",
["npcID"] = 150750,
},
[284968] = {
["source"] = "马斯图斯·雪息",
["event"] = "SPELL_CAST_START",
["npcID"] = 150746,
},
[440195] = {
["event"] = "SPELL_CAST_START",
["source"] = "恶意暗影",
["npcID"] = 225338,
},
[404364] = {
["encounterName"] = "米罗克",
["source"] = "米罗克",
["npcID"] = 202789,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[376723] = {
["encounterName"] = "巴拉卡可汗",
["source"] = "诺库德风暴法师",
["npcID"] = 190294,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[199143] = {
["encounterName"] = "库塔洛斯·拉文凯斯",
["source"] = "丹塔利纳克斯",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[331044] = {
["event"] = "SPELL_CAST_START",
["source"] = "蛮翼恐爪鸟",
["npcID"] = 170067,
},
[325782] = {
["event"] = "SPELL_CAST_START",
["source"] = "暗穴喷毒者",
["npcID"] = 164038,
},
},
["performance_units"] = {
[211306] = true,
[214441] = true,
[219746] = true,
[176920] = true,
[96247] = true,
[189363] = true,
[100529] = true,
[208994] = true,
[210231] = true,
[167999] = true,
[196679] = true,
[194999] = true,
[196642] = true,
[189707] = true,
[189706] = true,
[197398] = true,
[191714] = true,
[84401] = true,
},
["InterruptableSpells"] = {
[376171] = true,
[387125] = true,
[387411] = true,
[372711] = true,
[377950] = true,
[374045] = true,
[386015] = true,
[124682] = true,
[220543] = true,
[116705] = true,
[392398] = true,
[427609] = true,
[369602] = true,
[374778] = true,
[372683] = true,
[1064] = true,
[198590] = true,
[377384] = true,
[385029] = true,
[6552] = true,
[426240] = true,
[147362] = true,
[57994] = true,
[404754] = true,
[196447] = true,
[190984] = true,
[377503] = true,
[371984] = true,
[31935] = true,
[374339] = true,
[1766] = true,
[381770] = true,
[91807] = true,
[386024] = true,
[377008] = true,
[381516] = true,
[374563] = true,
[383231] = true,
[369674] = true,
[373897] = true,
[397892] = true,
[386026] = true,
[369675] = true,
[384808] = true,
[373803] = true,
[395694] = true,
[382249] = true,
[397394] = true,
[376725] = true,
[377488] = true,
[378282] = true,
[97547] = true,
[429812] = true,
[378155] = true,
[420320] = true,
[32747] = true,
[384633] = true,
[183752] = true,
[377500] = true,
[387618] = true,
[373680] = true,
[387613] = true,
[372743] = true,
[373395] = true,
[372538] = true,
[395427] = true,
[383651] = true,
[351338] = true,
[374699] = true,
[34914] = true,
[387843] = true,
[187707] = true,
[369365] = true,
[372223] = true,
[384161] = true,
[373017] = true,
[392576] = true,
[48181] = true,
[324536] = true,
[396640] = true,
[194153] = true,
[369399] = true,
[93985] = true,
[386546] = true,
[374544] = true,
[369400] = true,
[388863] = true,
[377338] = true,
[392451] = true,
[377402] = true,
[388862] = true,
[384197] = true,
[96231] = true,
[384194] = true,
[386071] = true,
[392924] = true,
[384365] = true,
[387564] = true,
[387596] = true,
[377341] = true,
[374706] = true,
[436841] = true,
[382474] = true,
[347008] = true,
[375596] = true,
[367500] = true,
[373932] = true,
[388392] = true,
[377389] = true,
[19647] = true,
[2139] = true,
[47528] = true,
[386012] = true,
[369823] = true,
[369411] = true,
[386997] = true,
[686] = true,
[367503] = true,
[188443] = true,
},
["profiles"] = {
["Jundies Plater"] = {
["target_highlight"] = false,
["aura_breakline_space"] = 1,
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    local color = \"gray\"\n    \n    function envTable.updateNameplateColor(unitFrame)\n        if not InCombatLockdown() then\n            return\n        end\n\n        -- Hardened Carapace stacks on Shattereshell Scarab\n        if unitFrame.namePlateNpcId == 218884 then\n            local auraInfo = C_UnitAuras.GetAuraDataBySpellName(unitId, C_Spell.GetSpellName(438706))\n            \n            if auraInfo and auraInfo.applications and auraInfo.applications <= 5 then\n                Plater.SetNameplateColor(unitFrame) -- omitting a color should reset it\n                return\n            end\n        end\n        \n        Plater.SetNameplateColor(unitFrame, color)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable) end",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable) end",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateNameplateColor(unitFrame)\nend",
["Time"] = 1727071096,
["Icon"] = "524354",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    local color = \"gray\"\n    \n    function envTable.updateNameplateColor(unitFrame)\n        if not InCombatLockdown() then\n            return\n        end\n\n        -- Hardened Carapace stacks on Shattereshell Scarab\n        if unitFrame.namePlateNpcId == 218884 then\n            local auraInfo = C_UnitAuras.GetAuraDataBySpellName(unitId, C_Spell.GetSpellName(438706))\n            \n            if auraInfo and auraInfo.applications and auraInfo.applications <= 5 then\n                Plater.SetNameplateColor(unitFrame) -- omitting a color should reset it\n                return\n            end\n        end\n        \n        Plater.SetNameplateColor(unitFrame, color)\n    end\nend",
["NpcNames"] = {
},
["semver"] = "",
["Enabled"] = true,
["Revision"] = 578,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable) end",
["Name"] = "Invalidate Unit - Jundies",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (self, unitId, unitFrame, envTable) end",
["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
261265,
261266,
271590,
350857,
352016,
235308,
235089,
367573,
362020,
232156,
374779,
113309,
117665,
379256,
396734,
406730,
403049,
410631,
410654,
403284,
421013,
425794,
260923,
264027,
75683,
336499,
335141,
256957,
440177,
438706,
451026,
325697,
442611,
458199,
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateNameplateColor(unitFrame)\nend",
["Temp_Initialization"] = "function (self, unitId, unitFrame, envTable) end",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable) end",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 14, \"orange\");\n    envTable.EnergyAmount:SetPoint (\"top\", unitFrame, \"left\", -8, 20);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n--The War Within\n\n--\n\n--DRAGONFLIGHT\n\n--Amirdrassil\n--Gnarlroot - 209333\n--Nymue - 206172\n--Smolderon - 200927\n--Pip - 208367\n--Urctos - 208363\n\n--Aberrus, the Shadowed Crucible\n--Zskarn - 202375\n--Rashok - 201320\n--Magmorax - 201579\n\n--VAULT OF THE INCARNATES\n\n--Eranog - 184972\n--Terros - 190496\n--Dethea, Ascended - 189813 \n--Broodkeeper Diurna - 190245\n--Kurog Grimtotem - 184986\n\n--DUNGEONS\n--Overgrown Ancient - 196482\n--Telash Greywing - 186737\n--Granyth - 186616\n--The Raging Tempest - 186615\n--Zancha - 131383\n--Unbound Abomination - 133007\n--Warlord Sargha - 189901\n--Chargath, Bane of Scales - 189340\n--Emberon - 184422\n--Cragmaw - 131817\n--Unbound Abomination - 133007\n\n--SHADOWLANDS\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n164558 = Hakkar the Soulflayer\n\n162060 = Oryphrion\ncustom:\n171557 = shade-of-bargast\n\n--BFA\n\n--\n--Priestess Alun'za - 122967\n\n-- Sepulcher of the First Ones\n\n--Xymox adds - 184140\n--Lihuvim - 182169\n--Tala - 104217 for testing\n\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["OptionsValues"] = {
["fontColor"] = {
1,
1,
1,
1,
},
["fontSize"] = 12,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n",
["Time"] = 1726353060,
["Icon"] = 136048,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 14, \"orange\");\n    envTable.EnergyAmount:SetPoint (\"top\", unitFrame, \"left\", -8, 20);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n--The War Within\n\n--\n\n--DRAGONFLIGHT\n\n--Amirdrassil\n--Gnarlroot - 209333\n--Nymue - 206172\n--Smolderon - 200927\n--Pip - 208367\n--Urctos - 208363\n\n--Aberrus, the Shadowed Crucible\n--Zskarn - 202375\n--Rashok - 201320\n--Magmorax - 201579\n\n--VAULT OF THE INCARNATES\n\n--Eranog - 184972\n--Terros - 190496\n--Dethea, Ascended - 189813 \n--Broodkeeper Diurna - 190245\n--Kurog Grimtotem - 184986\n\n--DUNGEONS\n--Overgrown Ancient - 196482\n--Telash Greywing - 186737\n--Granyth - 186616\n--The Raging Tempest - 186615\n--Zancha - 131383\n--Unbound Abomination - 133007\n--Warlord Sargha - 189901\n--Chargath, Bane of Scales - 189340\n--Emberon - 184422\n--Cragmaw - 131817\n--Unbound Abomination - 133007\n\n--SHADOWLANDS\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n164558 = Hakkar the Soulflayer\n\n162060 = Oryphrion\ncustom:\n171557 = shade-of-bargast\n\n--BFA\n\n--\n--Priestess Alun'za - 122967\n\n-- Sepulcher of the First Ones\n\n--Xymox adds - 184140\n--Lihuvim - 182169\n--Tala - 104217 for testing\n\n--]=]",
["NpcNames"] = {
"171557",
"162060",
"168318",
"184140",
"182169",
"196482",
"186120",
"186116",
"189901",
"197025",
"190496",
"189813",
"190245",
"184972",
"184986",
"164558",
"186737",
"186616",
"186615",
"131383",
"133007",
"202375",
"201320",
"201579",
"189340",
"131817",
"209333",
"122967",
"206172",
"200927",
"208367",
"208363",
},
["semver"] = "",
["Enabled"] = true,
["Revision"] = 585,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Name"] = "add trigger",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Key"] = "fontSize",
["Value"] = 16,
["Name"] = "Text Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.80392156862745,
0.80392156862745,
0.80392156862745,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["Name"] = "Show Energy - Jundies",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show the energy amount above the nameplate.",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.options = {\n        color = \"yellow\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 6, -- number of lines. Defaul value is 8;\n        frequency = 0.5, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 4, -- length of lines. Default value depends on region size and number of lines;\n        th = 2, -- thickness of lines. Default value is 2;\n        xOffset = 0.5,\n        yOffset = 0.5, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n    self.glowStarted = false\n    \n    envTable.pandemicTime[self.spellId..unitId] = nil\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    envTable.pandemicTime = envTable.pandemicTime or {}\n    envTable.pandemicTime[self.spellId..unitId] = envTable._RemainingTime * 0.3\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --if (timeLeft < (envTable.pandemicTime[self.spellId..unitId] or (envTable._Duration*0.3))) then\n    if (timeLeft < (envTable._Duration*0.3)) then\n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self.Cooldown, nil, envTable.options, envTable.options.key)\n        end\n    else\n        if self.glowStarted then\n            self.glowStarted = false\n            Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1726353056,
["Icon"] = 413591,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.options = {\n        color = \"yellow\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 6, -- number of lines. Defaul value is 8;\n        frequency = 0.5, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 4, -- length of lines. Default value depends on region size and number of lines;\n        th = 2, -- thickness of lines. Default value is 2;\n        xOffset = 0.5,\n        yOffset = 0.5, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\n    \nend\n\n\n",
["NpcNames"] = {
},
["semver"] = "",
["Enabled"] = true,
["Revision"] = 365,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    envTable.pandemicTime = envTable.pandemicTime or {}\n    envTable.pandemicTime[self.spellId..unitId] = envTable._RemainingTime * 0.3\nend\n\n\n",
["Name"] = "Pandemic Glow - Jundies",
["Author"] = "Viash-Thrall",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Adds a configurable pixel border glow to the buff/debuff if the remaining duration is less than 30% of its total duration.",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
292711,
278946,
212463,
284402,
284401,
2818,
703,
1943,
295425,
283668,
316220,
258179,
207690,
315341,
1822,
1079,
106830,
202347,
204213,
391191,
980,
172,
445468,
445465,
316099,
383346,
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --if (timeLeft < (envTable.pandemicTime[self.spellId..unitId] or (envTable._Duration*0.3))) then\n    if (timeLeft < (envTable._Duration*0.3)) then\n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self.Cooldown, nil, envTable.options, envTable.options.key)\n        end\n    else\n        if self.glowStarted then\n            self.glowStarted = false\n            Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n    self.glowStarted = false\n    \n    envTable.pandemicTime[self.spellId..unitId] = nil\n    \nend\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["OptionsValues"] = {
["useCastbarColor"] = false,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1727078560,
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["NpcNames"] = {
},
["semver"] = "",
["Enabled"] = true,
["Revision"] = 1220,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.8,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Key"] = "shakeAmplitude",
["Value"] = 5,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.56470588235294,
0.56470588235294,
0.56470588235294,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 8,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.41176470588235,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["Name"] = "Important Casts - Jundies",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
373046,
372863,
164686,
153072,
153680,
196497,
388886,
387145,
384365,
152964,
398150,
152801,
397878,
397914,
3636,
376171,
350687,
372735,
373017,
392488,
268030,
257784,
337943,
320822,
333292,
341840,
324987,
333478,
178072,
330438,
329423,
350287,
334928,
348428,
330532,
358980,
351073,
358026,
351603,
356023,
330513,
334076,
237946,
237952,
312262,
242733,
362628,
316443,
356031,
356011,
356001,
355642,
355644,
355782,
355057,
356133,
357260,
357284,
347015,
355139,
336451,
364240,
364241,
361923,
368063,
356407,
363024,
355584,
334664,
340300,
366288,
232120,
228554,
228009,
228025,
228019,
227977,
228278,
228280,
228567,
29339,
169341,
162415,
340037,
373513,
373618,
167232,
227646,
375606,
386549,
385568,
385393,
388211,
211464,
215433,
371983,
373405,
391599,
387627,
375653,
388392,
387862,
392457,
396812,
383823,
371624,
393309,
393296,
391268,
393429,
374623,
390548,
391019,
387615,
152818,
225100,
210261,
212784,
392486,
397889,
395859,
385331,
388804,
156718,
398206,
106856,
106864,
397394,
367500,
377488,
377612,
385574,
215204,
212773,
397382,
257426,
265540,
265542,
278961,
403978,
403671,
257397,
278755,
413044,
265511,
183528,
193803,
193585,
410870,
87779,
374045,
374699,
385029,
373897,
378282,
384161,
369675,
369465,
369365,
411302,
274400,
400296,
405433,
408805,
411994,
413607,
412922,
417481,
418200,
411300,
412378,
412233,
407124,
415304,
412012,
421029,
421031,
420525,
425816,
265368,
264390,
264407,
263959,
253583,
252781,
255041,
256849,
200630,
204243,
201399,
168082,
427459,
164965,
164887,
169839,
200345,
76813,
429176,
76820,
200248,
225562,
436841,
334748,
324293,
434802,
322938,
256957,
275826,
446700,
257169,
272571,
449455,
429109,
443430,
451871,
76711,
338353,
432967,
433841,
452162,
431309,
450756,
451097,
462508,
429428,
407120,
386024,
444743,
427609,
432959,
424420,
440687,
448248,
429545,
447950,
447411,
445021,
333623,
257732,
460092,
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function()\nend",
["OnHideCode"] = "function()\nend",
["OptionsValues"] = {
["debuffed"] = 0.79999995231628,
["casting"] = 1.1999999284744,
["hide"] = true,
},
["Temp_OnShowCode"] = "function()\nend\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (_, _, unitFrame, _, scriptTable)\n    local isDebuffed = scriptTable.isDebuffed(unitFrame)\n    \n    if isDebuffed then\n        if scriptTable.config.hide then\n            scriptTable.hide(unitFrame)\n            return\n        end\n        \n        Plater.SetNameplateScale(unitFrame, scriptTable.config.debuffed)\n        -- instantly ccd enemies (e.g. freeze trap) never had the animation start\n        if unitFrame.healthBar.HealthFlashFrame then\n            unitFrame.healthBar.HealthFlashFrame:StopAnimating()\n        end\n        \n        return\n    end\n    scriptTable.show(unitFrame)\n    \n    Plater.SetNameplateScale(unitFrame, scriptTable.config.casting)\n    Plater.FlashNameplateBorder(unitFrame)\nend",
["Time"] = 1726864248,
["Icon"] = 298642,
["Temp_ConstructorCode"] = "function()\nend",
["NpcNames"] = {
"204560",
},
["semver"] = "1.0.6",
["Enabled"] = false,
["Revision"] = 257,
["Options"] = {
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "nameplate scale while debuffed",
["Min"] = 0,
["Key"] = "debuffed",
["Value"] = 0.8,
["Name"] = "Debuffed Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "nameplate scale while casting",
["Min"] = 0,
["Key"] = "casting",
["Value"] = 1.4,
["Name"] = "Casting Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "hide",
["Value"] = false,
["Name"] = "Hide Nameplate when ccd",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["OnShowCode"] = "function()\nend\n\n\n\n",
["Name"] = "Incorporeal - Jundies",
["Author"] = "Ququlcoatl-Blackmoore",
["Initialization"] = "function (scriptTable)\n    -- taken from https://github.com/Tercioo/Plater-Nameplates/blob/master/libs/DF/spells.lua#L916\n    -- but trimmed to only include ccs that would deal with it for good\n    local spells = {\n        [118699] = \"WARLOCK\", -- Fear (debuff spellid)\n        [710] = \"WARLOCK\", -- Banish\n        [118] = \"MAGE\", -- Polymorph\n        [61305] = \"MAGE\", -- Polymorph (black cat)\n        [28271] = \"MAGE\", -- Polymorph Turtle\n        [161354] = \"MAGE\", -- Polymorph Monkey\n        [161353] = \"MAGE\", -- Polymorph Polar Bear Cub\n        [126819] = \"MAGE\", -- Polymorph Porcupine\n        [277787] = \"MAGE\", -- Polymorph Direhorn\n        [61721] = \"MAGE\", -- Polymorph Rabbit\n        [28272] = \"MAGE\", -- Polymorph Pig\n        [277792] = \"MAGE\", -- Polymorph Bumblebee\n        [391622] = \"MAGE\", -- Polymorph Duck\n        [9484] = \"PRIEST\", -- Shackle Undead\n        [2094] = \"ROGUE\", -- Blind\n        [427773] = \"ROGUE\", -- Blind\n        [20066] = \"PALADIN\", -- Repentance (talent)\n        [10326] = \"PALADIN\", -- Turn Evil\n        [2637] = \"DRUID\", -- Hibernate\n        [115078] = \"MONK\", -- Paralysis\n        [51514] = \"SHAMAN\", -- Hex\n        [210873] = \"SHAMAN\", -- Hex (Compy)\n        [211004] = \"SHAMAN\", -- Hex (Spider)\n        [211010] = \"SHAMAN\", -- Hex (Snake)\n        [211015] = \"SHAMAN\", -- Hex (Cockroach)\n        [269352] = \"SHAMAN\", -- Hex (Skeletal Hatchling)\n        [277778] = \"SHAMAN\", -- Hex (Zandalari Tendonripper)\n        [277784] = \"SHAMAN\", -- Hex (Wicker Mongrel)\n        [309328] = \"SHAMAN\", -- Hex (Living Honey)\n        [217832] = \"DEMONHUNTER\", -- Imprison\n        [360806] = \"EVOKER\", -- Sleep Walk\n        [3355] = \"HUNTER\", -- Freezing Trap\n        [1513] = \"HUNTER\" -- Scare Beast\n    }\n    \n    --- @return boolean\n    scriptTable.isDebuffed = function(unitFrame)\n        for spellId in pairs(spells) do\n            if Plater.UnitHasAura(unitFrame, spellId) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    scriptTable.hide = function(unitFrame)\n        -- no check whether its already hidden as it may reappear for whichever\n        -- reason when you turn camera away and back to it again\n        Plater.HideHealthBar(unitFrame)\n        Plater.DisableHighlight(unitFrame)\n        unitFrame._isHidden = true\n    end\n    \n    scriptTable.show = function(unitFrame)\n        if not unitFrame._isHidden then\n            return\n        end\n        \n        Plater.ShowHealthBar(unitFrame)\n        Plater.EnableHighlight(unitFrame)\n        unitFrame._isHidden = false\n    end\nend",
["Desc"] = "conditionally scales the nameplate of Incorporeal Beings when not ccd",
["version"] = 7,
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (_, _, unitFrame, _, scriptTable)\n    local isDebuffed = scriptTable.isDebuffed(unitFrame)\n    \n    if isDebuffed then\n        if scriptTable.config.hide then\n            scriptTable.hide(unitFrame)\n            return\n        end\n        \n        Plater.SetNameplateScale(unitFrame, scriptTable.config.debuffed)\n        -- instantly ccd enemies (e.g. freeze trap) never had the animation start\n        if unitFrame.healthBar.HealthFlashFrame then\n            unitFrame.healthBar.HealthFlashFrame:StopAnimating()\n        end\n        \n        return\n    end\n    scriptTable.show(unitFrame)\n    \n    Plater.SetNameplateScale(unitFrame, scriptTable.config.casting)\n    Plater.FlashNameplateBorder(unitFrame)\nend",
["Temp_Initialization"] = "function (scriptTable)\n    -- taken from https://github.com/Tercioo/Plater-Nameplates/blob/master/libs/DF/spells.lua#L916\n    -- but trimmed to only include ccs that would deal with it for good\n    local spells = {\n        [118699] = \"WARLOCK\", -- Fear (debuff spellid)\n        [710] = \"WARLOCK\", -- Banish\n        [118] = \"MAGE\", -- Polymorph\n        [61305] = \"MAGE\", -- Polymorph (black cat)\n        [28271] = \"MAGE\", -- Polymorph Turtle\n        [161354] = \"MAGE\", -- Polymorph Monkey\n        [161353] = \"MAGE\", -- Polymorph Polar Bear Cub\n        [126819] = \"MAGE\", -- Polymorph Porcupine\n        [277787] = \"MAGE\", -- Polymorph Direhorn\n        [61721] = \"MAGE\", -- Polymorph Rabbit\n        [28272] = \"MAGE\", -- Polymorph Pig\n        [277792] = \"MAGE\", -- Polymorph Bumblebee\n        [391622] = \"MAGE\", -- Polymorph Duck\n        [9484] = \"PRIEST\", -- Shackle Undead\n        [2094] = \"ROGUE\", -- Blind\n        [427773] = \"ROGUE\", -- Blind\n        [20066] = \"PALADIN\", -- Repentance (talent)\n        [10326] = \"PALADIN\", -- Turn Evil\n        [2637] = \"DRUID\", -- Hibernate\n        [115078] = \"MONK\", -- Paralysis\n        [51514] = \"SHAMAN\", -- Hex\n        [210873] = \"SHAMAN\", -- Hex (Compy)\n        [211004] = \"SHAMAN\", -- Hex (Spider)\n        [211010] = \"SHAMAN\", -- Hex (Snake)\n        [211015] = \"SHAMAN\", -- Hex (Cockroach)\n        [269352] = \"SHAMAN\", -- Hex (Skeletal Hatchling)\n        [277778] = \"SHAMAN\", -- Hex (Zandalari Tendonripper)\n        [277784] = \"SHAMAN\", -- Hex (Wicker Mongrel)\n        [309328] = \"SHAMAN\", -- Hex (Living Honey)\n        [217832] = \"DEMONHUNTER\", -- Imprison\n        [360806] = \"EVOKER\", -- Sleep Walk\n        [3355] = \"HUNTER\", -- Freezing Trap\n        [1513] = \"HUNTER\" -- Scare Beast\n    }\n    \n    --- @return boolean\n    scriptTable.isDebuffed = function(unitFrame)\n        for spellId in pairs(spells) do\n            if Plater.UnitHasAura(unitFrame, spellId) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    scriptTable.hide = function(unitFrame)\n        -- no check whether its already hidden as it may reappear for whichever\n        -- reason when you turn camera away and back to it again\n        Plater.HideHealthBar(unitFrame)\n        Plater.DisableHighlight(unitFrame)\n        unitFrame._isHidden = true\n    end\n    \n    scriptTable.show = function(unitFrame)\n        if not unitFrame._isHidden then\n            return\n        end\n        \n        Plater.ShowHealthBar(unitFrame)\n        Plater.EnableHighlight(unitFrame)\n        unitFrame._isHidden = false\n    end\nend",
["Temp_OnHideCode"] = "function()\nend",
["url"] = "https://wago.io/8_ULM1VxI/7",
},
{
["ConstructorCode"] = "function (_, _, _, envTable, scriptTable)\n    \n    \n    --TWW Dungeons\n    \n    local cityOfThreads = {\n        [219984] = { 50 }, --Xeph'itik\n    }\n    \n    local dawnbreaker = {\n        [211087] = { 50 }, --Speaker Shadowcrown\n        [213937] = { 59.5 }, --Rasha'nan\n    }\n    \n    local prioryOfTheSacredFlame = {\n        [207940] = { 50 }, --Prioress Murrpray\n    }\n    \n    local darkflameCleft = {\n        [210797] = { 44.5 }, --The Darkness\n    }\n    \n    --DF Dungeons\n    \n    local dawnOfTheInfinite = {\n        [207638] = { 80 }, -- Blight of Galakrond\n        [207639] = { 80 }, -- Blight of Galakrond\n        [198997] = { 80 }, -- Blight of Galakrond\n        [201792] = { 50 }, -- Ahnzon\n        [199000] = { 20 }, -- Deios\n        [198933] = { 90, 85 }, -- Iridikron\n    }\n    \n    local rubyLifePools = {\n        [190485] = { 50 }, -- Stormvein\n        [190484] = { 50 }, -- Kyrakka\n        [193435] = { 50 }, -- Kyrakka\n        [188252] = { 75, 45 }, -- Melidrussa Chillworn\n        [197697] = { 50 }, -- Flamegullet\n    }\n    \n    local azureVault = {\n        [186738] = { 75, 50, 25 }, -- Umbrelskul\n    }\n    \n    local brackenhideHollow = {\n        [186125] = { 15 }, -- Tricktotem\n        [186122] = { 15 }, -- Rira Hackclaw\n        [186124] = { 15 }, -- Gashtooth\n        [185534] = { 15 }, -- Bonebolt Hunter\n        [186206] = { 15 }, -- Cruel Bonecrusher\n        [185508] = { 15 }, -- Claw Fighter\n        [185528] = { 15 }, -- Trickclaw Mystic\n        [186121] = { 4 }, -- Decatriarch Wratheye\n        [186227] = { 20 }, -- Monstrous Decay\n    }\n    \n    local neltharus = {\n        [194816] = { 10 }, -- Forgewrought Monstrosity\n    }\n    \n    local hallsOfInfusion = {\n        [189719] = { 15 }, -- Watcher Irideus\n        [190407] = { 20 }, -- Aqua Rager\n        [189729] = { 60 }, -- Primal Tsunami\n    }\n    \n    local nokhudOffensive = {\n        [186151] = { 60 }, --Balakar Khan\n    }\n    \n    local uldaman = {\n        [184020] = { 40 }, -- Hulking Berserker\n        [184580] = { 10 }, -- Olaf\n        [184581] = { 10 }, -- Baelog\n        [184582] = { 10 }, -- Eric \"The Swift\"\n        [184125] = { 1 }, -- Chrono-Lord Deios\n    }\n    \n    --SL Dungeons\n    \n    local theaterOfPain = {\n        [164451] = { 40 }, -- Dessia the Decapitator\n        [164463] = { 40 }, -- Paceran the Virulent\n        [164461] = { 40 }, -- Sathel the Accursed\n        [165946] = { 50 }, -- Mordretha\n    }\n    \n    local mistsOfTirnaScithe = {\n        [164501] = { 70, 40, 10 }, -- Mistcaller\n        [164926] = { 50 }, --Drust Boughbreaker\n        [164804] = { 20 }, -- Droman Oulfarran\n        [164517] = { 70, 40 }, --Tred'ova\n    }\n    \n    local plaguefall = {\n        [164267] = { 66, 33 }, -- Magrave Stradama\n        [164967] = { 66, 33 }, -- Doctor ickus\n        [169861] = { 66, 33 }, -- Ickor Bileflesh\n    }\n    \n    local hallsOfAtonement = {\n        [164218] = { 70, 40 }, --Lord Chamberlain\n    }\n    \n    local sanguineDepths = {\n        [162099] = { 50 }, -- General Kaal Boss fight\n    }\n    \n    local spiresOfAscension = {\n        [162061] = { 70, 30 }, --Devos\n    }\n    \n    local necroticWake = {\n        [163121] = { 70 }, -- Stitched Vanguard\n    }\n    \n    local deOtherSide = {\n        [164558] = { 80, 60, 40, 20 }, -- Hakkar the Soulflayer\n    }\n    \n    local tazaveshGambit = {\n        [177269] = { 40 }, -- So'leah\n    }\n    \n    local tazaveshStreets = {\n        [175806] = { 66, 33 }, -- So'azmi\n    }\n    \n    --BFA Dungeons\n    \n    local freehold = {\n        [126983] = { 60, 30 }, -- Harlan Sweete - Freehold\n        [126832] = { 75 }, -- Skycap'n Kragg - Freehold\n        [129699] = { 90, 70, 50, 30 }, -- Ludwig von Tortollan - Freehold\n    }\n    \n    local waycrest = {\n        [131527] = { 30 }, -- Lord Waycrest\n    }\n    \n    local siegeOfBoralus = {\n        [129208] = { 66, 33 }, -- Dread Captain Lockwood\n    }\n    \n    local motherlode = {\n        [133345] = { 20 }, -- Feckless Assistant\n    }\n    \n    local junkyard = {\n        [150276] = { 50 }, -- Heavy Scrapbot\n        [152009] = { 30 }, -- Malfunctioning Scrapbots\n        [144298] = { 30 }, -- Defense Bot Mk III (Workshop)\n    }\n    \n    local workshop = {\n        [144298] = { 30 }, -- Defense Bot Mk III (casts a shield)\n    }\n    \n    --Legion Dungeons\n    \n    local karazhanUpper = {\n        [114790] = { 66, 33 }, -- Viz'aduum\n    }\n    \n    local karazhanLower = {\n        [114261] = { 50 }, -- Toe Knee\n        [114260] = { 50 }, -- Mrrgria\n        [114265] = { 50 }, -- Gang Ruffian\n        [114783] = { 50 }, -- Reformed Maiden\n        [114312] = { 60 }, -- Moroes\n    }\n    \n    local hallsOfValor = {\n        [96574] = { 30 }, -- Stormforged Sentinel\n        [95674] = { 60.5 }, -- Fenryr P1\n        [94960] = { 10.5 }, -- Hymdall\n        [95676] = { 80, 5 }, -- Odyn\n    }\n    \n    local courtOfStars = {\n        [104215] = { 25 }, -- Patrol Captain Gerdo\n    }\n    \n    local neltharionsLair = {\n        [91005] = { 20 }, -- Naraxas\n    }\n    \n    local blackRookHold = {\n        [98542] = { 50 }, -- Amalgam of Souls\n        [98965] = { 20 }, -- Kur'talos Ravencrest\n    }\n    \n    local darkheartThicket = {\n        [99192] = { 50 }, -- Shade of Xavius\n    }\n    \n    --WoD Dungeons\n    \n    local grimrailDepot = {\n        [81236] = { 50 }, -- Grimrail Technician\n        [79545] = { 60 }, -- Nitrogg Thundertower\n        [77803] = { 20 }, -- Railmaster Rocketspark\n    }\n    \n    local ironDocks = {\n        [81297] = { 50 }, -- Dreadfang -> Fleshrender Nok'gar\n    }\n    \n    local shadowmoonBurialGrounds = {\n        [76057] = { 20.5 }, -- Carrion Worm\n    }\n    \n    --MoP Dungeons\n    \n    local templeOfTheJadeSerpent = {\n        [59544] = { 50 }, --The Nodding Tiger\n        [56732] = { 70, 30 }, -- Liu Flameheart\n    }\n    \n    --Cata Dungeons\n    \n    local throneOfTheTides = {\n        [40586] = { 60, 30 }, -- Lady Naz'jar\n        [40825] = { 25 }, -- Erunak Stonespeaker\n    }\n    \n    local grimBatol = {\n        [224249] = { 50 }, --Twilight Lavabender\n        [40320] = { 50 }, --Valiona\n    }\n    \n    \n    --Raids \n    \n    local amirdrassil = {\n        [208445] = { 35 }, -- Larodar\n        [204931] = { 70 }, -- Fyrakk\n    }\n    \n    local aberrus = {\n        [201261] = { 80, 60, 40 }, -- Kazzara\n        [201773] = { 50 }, -- Moltannia (Eternal Blaze)\n        [201774] = { 50 }, -- Krozgoth (Essence of Shadow)\n        [201668] = { 60, 35 }, -- Neltharion\n        [200912] = { 50 }, -- Neldris, Experiment\n        [200913] = { 50 }, -- Thadrion, Experiment\n        [199659] = { 25 }, -- Warlord Kagni, Assault of the Zaqali\n        [201754] = { 65, 40 }, -- Sarkareth\n        [203230] = { 50 }, -- Dragonfire Golem, Zskarn\n    }\n    \n    local vault = {\n        [181378] = { 66, 33 }, -- Kurog Grimtotem\n        [194990] = { 50 }, -- Stormseeker Acolyte\n        [189492] = { 65 }, -- Raszageth\n    }\n    \n    local sepulcher = {\n        [181548] = { 40 }, -- Absolution: Prototype Pantheon\n        [181551] = { 40 }, -- Duty: Prototype Pantheon\n        [181546] = { 40 }, -- Renewal: Prototype Pantheon\n        [181549] = { 40 }, -- War: Prototype Pantheon\n        [183501] = { 75, 50 }, --Xymox\n        [180906] = { 78, 45 }, --Halondrus\n        [183671] = { 40 }, -- Monstrous Soul - Anduin\n        [185421] = { 15 }, -- The Jailer\n    }\n    \n    local sanctumOfDomination = {\n        [175730] = { 70, 40 }, -- Fatescribe Roh-Kalo\n        [176523] = { 70, 40 }, -- Painsmith\n        [175725] = { 66, 33 }, -- Eye of the Jailer\n        [176929] = { 60, 20 }, -- Remnant of Kel'Thuzad\n        [175732] = { 83, 50 }, -- Sylvanas Windrunner\n    }\n    \n    local nathria = {\n        [166969] = { 50 }, -- Council of Blood - Frieda\n        [166970] = { 50 }, -- Council of Blood - Stavros\n        [166971] = { 50 }, -- Council of Blood - Niklaus\n        [167406] = { 70.5, 37.5 }, -- Sire Denathrius\n        [173162] = { 66, 33 }, -- Lord Evershade\n    }\n    \n    local openWorld = {\n        [180013] = { 20 }, -- Escaped Wilderling, Shadowlands - Korthia\n        [179931] = { 80, 60 }, -- Relic Breaker krelva, Shadowlands - Korthia\n        [193532] = { 40 }, -- Bazual, The Dreaded Flame, Dragonflight\n    }\n    \n    local mageTower = {\n        [116410] = { 33 }, -- Karam Magespear\n    }\n    \n    envTable.lifePercent = {}\n    \n    local zones = {\n        darkflameCleft,\n        prioryOfTheSacredFlame,\n        cityOfThreads,\n        dawnbreaker,\n        rubyLifePools,\n        azureVault,\n        brackenhideHollow,\n        neltharus,\n        hallsOfInfusion,\n        nokhudOffensive,\n        uldaman,\n        theaterOfPain,\n        mistsOfTirnaScithe,\n        plaguefall,\n        hallsOfAtonement,\n        sanguineDepths,\n        spiresOfAscension,\n        necroticWake,\n        deOtherSide,\n        tazaveshGambit,\n        tazaveshStreets,\n        freehold,\n        waycrest,\n        siegeOfBoralus,\n        motherlode,\n        junkyard,\n        workshop,\n        karazhanUpper,\n        karazhanLower,\n        hallsOfValor,\n        courtOfStars,\n        neltharionsLair,\n        blackRookHold,\n        darkheartThicket,\n        grimrailDepot,\n        ironDocks,\n        shadowmoonBurialGrounds,\n        templeOfTheJadeSerpent,\n        throneOfTheTides,\n        grimBatol,\n        amirdrassil,\n        aberrus,\n        vault,\n        sepulcher,\n        sanctumOfDomination,\n        nathria,\n        openWorld,\n        mageTower,\n        dawnOfTheInfinite,\n    }\n    \n    for i = 1, #zones do\n        local zone = zones[i]\n        \n        for id, thresholds in pairs(zone) do\n            envTable.lifePercent[id] = thresholds\n        end\n    end\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        \n        if not markersTable then\n            return\n        end\n        \n        local unitLifePercent = envTable._HealthPercent / 100\n        \n        for _, percent in ipairs(markersTable) do\n            percent = percent / 100\n            if unitLifePercent > percent then\n                if not unitFrame.healthMarker then\n                    envTable.CreateMarker(unitFrame)\n                end\n                \n                unitFrame.healthMarker:Show()\n                local width = unitFrame.healthBar:GetWidth()\n                unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width * percent, 0)\n                \n                local overlaySize = width * (unitLifePercent - percent)\n                unitFrame.healthOverlay:SetWidth(overlaySize)\n                unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                \n                unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                \n                unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                \n                return\n            end\n        end\n        \n        if unitFrame.healthMarker and unitFrame.healthMarker:IsShown() then\n            unitFrame.healthMarker:Hide()\n            unitFrame.healthOverlay:Hide()\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
["indicatorAlpha"] = 0.75,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1727078854,
["NpcNames"] = {
"81236",
"77803",
"150276",
"152009",
"175806",
"114790",
"81297",
"79545",
"177269",
"133345",
"164926",
"114265",
"114261",
"114783",
"180013",
"179931",
"193532",
"116410",
"190485",
"193435",
"188252",
"186738",
"186125",
"186122",
"186124",
"184422",
"96574",
"114312",
"164804",
"164267",
"164967",
"169861",
"162061",
"144298",
"181548",
"181551",
"181546",
"181549",
"183501",
"180906",
"185421",
"163121",
"175730",
"176523",
"175725",
"176929",
"166969",
"166970",
"166971",
"167406",
"173162",
"175732",
"183671",
"114260",
"184581",
"184582",
"184580",
"185534",
"190407",
"194816",
"186151",
"59544",
"186121",
"197697",
"194990",
"76057",
"56732",
"95676",
"94960",
"104215",
"95674",
"189492",
"190484",
"97087",
"184020",
"201261",
"91005",
"113537",
"126983",
"185508",
"186206",
"185528",
"189719",
"129732",
"199659",
"201773",
"201774",
"164218",
"164501",
"162099",
"164451",
"164463",
"164461",
"165946",
"201754",
"203230",
"199000",
"201792",
"198997",
"207639",
"20763",
"129699",
"198933",
"98542",
"98965",
"99192",
"40586",
"40825",
"208445",
"207638",
"131527",
"201668",
"200912",
"200913",
"126832",
"204931",
"189729",
"164929",
"224249",
"219984",
"211087",
"129208",
"164517",
"40320",
"207940",
"213937",
"210797",
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option8",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Key"] = "indicatorAlpha",
["Value"] = 0.79,
["Name"] = "Vertical Line Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Key"] = "fillAlpha",
["Value"] = 0.2,
["Name"] = "Fill Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["Revision"] = 757,
["semver"] = "",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Prio"] = 99,
["Author"] = "Duracell",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Health Markers - Jundies",
["Enabled"] = true,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_ConstructorCode"] = "function (_, _, _, envTable, scriptTable)\n    \n    \n    --TWW Dungeons\n    \n    local cityOfThreads = {\n        [219984] = { 50 }, --Xeph'itik\n    }\n    \n    local dawnbreaker = {\n        [211087] = { 50 }, --Speaker Shadowcrown\n        [213937] = { 59.5 }, --Rasha'nan\n    }\n    \n    local prioryOfTheSacredFlame = {\n        [207940] = { 50 }, --Prioress Murrpray\n    }\n    \n    local darkflameCleft = {\n        [210797] = { 44.5 }, --The Darkness\n    }\n    \n    --DF Dungeons\n    \n    local dawnOfTheInfinite = {\n        [207638] = { 80 }, -- Blight of Galakrond\n        [207639] = { 80 }, -- Blight of Galakrond\n        [198997] = { 80 }, -- Blight of Galakrond\n        [201792] = { 50 }, -- Ahnzon\n        [199000] = { 20 }, -- Deios\n        [198933] = { 90, 85 }, -- Iridikron\n    }\n    \n    local rubyLifePools = {\n        [190485] = { 50 }, -- Stormvein\n        [190484] = { 50 }, -- Kyrakka\n        [193435] = { 50 }, -- Kyrakka\n        [188252] = { 75, 45 }, -- Melidrussa Chillworn\n        [197697] = { 50 }, -- Flamegullet\n    }\n    \n    local azureVault = {\n        [186738] = { 75, 50, 25 }, -- Umbrelskul\n    }\n    \n    local brackenhideHollow = {\n        [186125] = { 15 }, -- Tricktotem\n        [186122] = { 15 }, -- Rira Hackclaw\n        [186124] = { 15 }, -- Gashtooth\n        [185534] = { 15 }, -- Bonebolt Hunter\n        [186206] = { 15 }, -- Cruel Bonecrusher\n        [185508] = { 15 }, -- Claw Fighter\n        [185528] = { 15 }, -- Trickclaw Mystic\n        [186121] = { 4 }, -- Decatriarch Wratheye\n        [186227] = { 20 }, -- Monstrous Decay\n    }\n    \n    local neltharus = {\n        [194816] = { 10 }, -- Forgewrought Monstrosity\n    }\n    \n    local hallsOfInfusion = {\n        [189719] = { 15 }, -- Watcher Irideus\n        [190407] = { 20 }, -- Aqua Rager\n        [189729] = { 60 }, -- Primal Tsunami\n    }\n    \n    local nokhudOffensive = {\n        [186151] = { 60 }, --Balakar Khan\n    }\n    \n    local uldaman = {\n        [184020] = { 40 }, -- Hulking Berserker\n        [184580] = { 10 }, -- Olaf\n        [184581] = { 10 }, -- Baelog\n        [184582] = { 10 }, -- Eric \"The Swift\"\n        [184125] = { 1 }, -- Chrono-Lord Deios\n    }\n    \n    --SL Dungeons\n    \n    local theaterOfPain = {\n        [164451] = { 40 }, -- Dessia the Decapitator\n        [164463] = { 40 }, -- Paceran the Virulent\n        [164461] = { 40 }, -- Sathel the Accursed\n        [165946] = { 50 }, -- Mordretha\n    }\n    \n    local mistsOfTirnaScithe = {\n        [164501] = { 70, 40, 10 }, -- Mistcaller\n        [164926] = { 50 }, --Drust Boughbreaker\n        [164804] = { 20 }, -- Droman Oulfarran\n        [164517] = { 70, 40 }, --Tred'ova\n    }\n    \n    local plaguefall = {\n        [164267] = { 66, 33 }, -- Magrave Stradama\n        [164967] = { 66, 33 }, -- Doctor ickus\n        [169861] = { 66, 33 }, -- Ickor Bileflesh\n    }\n    \n    local hallsOfAtonement = {\n        [164218] = { 70, 40 }, --Lord Chamberlain\n    }\n    \n    local sanguineDepths = {\n        [162099] = { 50 }, -- General Kaal Boss fight\n    }\n    \n    local spiresOfAscension = {\n        [162061] = { 70, 30 }, --Devos\n    }\n    \n    local necroticWake = {\n        [163121] = { 70 }, -- Stitched Vanguard\n    }\n    \n    local deOtherSide = {\n        [164558] = { 80, 60, 40, 20 }, -- Hakkar the Soulflayer\n    }\n    \n    local tazaveshGambit = {\n        [177269] = { 40 }, -- So'leah\n    }\n    \n    local tazaveshStreets = {\n        [175806] = { 66, 33 }, -- So'azmi\n    }\n    \n    --BFA Dungeons\n    \n    local freehold = {\n        [126983] = { 60, 30 }, -- Harlan Sweete - Freehold\n        [126832] = { 75 }, -- Skycap'n Kragg - Freehold\n        [129699] = { 90, 70, 50, 30 }, -- Ludwig von Tortollan - Freehold\n    }\n    \n    local waycrest = {\n        [131527] = { 30 }, -- Lord Waycrest\n    }\n    \n    local siegeOfBoralus = {\n        [129208] = { 66, 33 }, -- Dread Captain Lockwood\n    }\n    \n    local motherlode = {\n        [133345] = { 20 }, -- Feckless Assistant\n    }\n    \n    local junkyard = {\n        [150276] = { 50 }, -- Heavy Scrapbot\n        [152009] = { 30 }, -- Malfunctioning Scrapbots\n        [144298] = { 30 }, -- Defense Bot Mk III (Workshop)\n    }\n    \n    local workshop = {\n        [144298] = { 30 }, -- Defense Bot Mk III (casts a shield)\n    }\n    \n    --Legion Dungeons\n    \n    local karazhanUpper = {\n        [114790] = { 66, 33 }, -- Viz'aduum\n    }\n    \n    local karazhanLower = {\n        [114261] = { 50 }, -- Toe Knee\n        [114260] = { 50 }, -- Mrrgria\n        [114265] = { 50 }, -- Gang Ruffian\n        [114783] = { 50 }, -- Reformed Maiden\n        [114312] = { 60 }, -- Moroes\n    }\n    \n    local hallsOfValor = {\n        [96574] = { 30 }, -- Stormforged Sentinel\n        [95674] = { 60.5 }, -- Fenryr P1\n        [94960] = { 10.5 }, -- Hymdall\n        [95676] = { 80, 5 }, -- Odyn\n    }\n    \n    local courtOfStars = {\n        [104215] = { 25 }, -- Patrol Captain Gerdo\n    }\n    \n    local neltharionsLair = {\n        [91005] = { 20 }, -- Naraxas\n    }\n    \n    local blackRookHold = {\n        [98542] = { 50 }, -- Amalgam of Souls\n        [98965] = { 20 }, -- Kur'talos Ravencrest\n    }\n    \n    local darkheartThicket = {\n        [99192] = { 50 }, -- Shade of Xavius\n    }\n    \n    --WoD Dungeons\n    \n    local grimrailDepot = {\n        [81236] = { 50 }, -- Grimrail Technician\n        [79545] = { 60 }, -- Nitrogg Thundertower\n        [77803] = { 20 }, -- Railmaster Rocketspark\n    }\n    \n    local ironDocks = {\n        [81297] = { 50 }, -- Dreadfang -> Fleshrender Nok'gar\n    }\n    \n    local shadowmoonBurialGrounds = {\n        [76057] = { 20.5 }, -- Carrion Worm\n    }\n    \n    --MoP Dungeons\n    \n    local templeOfTheJadeSerpent = {\n        [59544] = { 50 }, --The Nodding Tiger\n        [56732] = { 70, 30 }, -- Liu Flameheart\n    }\n    \n    --Cata Dungeons\n    \n    local throneOfTheTides = {\n        [40586] = { 60, 30 }, -- Lady Naz'jar\n        [40825] = { 25 }, -- Erunak Stonespeaker\n    }\n    \n    local grimBatol = {\n        [224249] = { 50 }, --Twilight Lavabender\n        [40320] = { 50 }, --Valiona\n    }\n    \n    \n    --Raids \n    \n    local amirdrassil = {\n        [208445] = { 35 }, -- Larodar\n        [204931] = { 70 }, -- Fyrakk\n    }\n    \n    local aberrus = {\n        [201261] = { 80, 60, 40 }, -- Kazzara\n        [201773] = { 50 }, -- Moltannia (Eternal Blaze)\n        [201774] = { 50 }, -- Krozgoth (Essence of Shadow)\n        [201668] = { 60, 35 }, -- Neltharion\n        [200912] = { 50 }, -- Neldris, Experiment\n        [200913] = { 50 }, -- Thadrion, Experiment\n        [199659] = { 25 }, -- Warlord Kagni, Assault of the Zaqali\n        [201754] = { 65, 40 }, -- Sarkareth\n        [203230] = { 50 }, -- Dragonfire Golem, Zskarn\n    }\n    \n    local vault = {\n        [181378] = { 66, 33 }, -- Kurog Grimtotem\n        [194990] = { 50 }, -- Stormseeker Acolyte\n        [189492] = { 65 }, -- Raszageth\n    }\n    \n    local sepulcher = {\n        [181548] = { 40 }, -- Absolution: Prototype Pantheon\n        [181551] = { 40 }, -- Duty: Prototype Pantheon\n        [181546] = { 40 }, -- Renewal: Prototype Pantheon\n        [181549] = { 40 }, -- War: Prototype Pantheon\n        [183501] = { 75, 50 }, --Xymox\n        [180906] = { 78, 45 }, --Halondrus\n        [183671] = { 40 }, -- Monstrous Soul - Anduin\n        [185421] = { 15 }, -- The Jailer\n    }\n    \n    local sanctumOfDomination = {\n        [175730] = { 70, 40 }, -- Fatescribe Roh-Kalo\n        [176523] = { 70, 40 }, -- Painsmith\n        [175725] = { 66, 33 }, -- Eye of the Jailer\n        [176929] = { 60, 20 }, -- Remnant of Kel'Thuzad\n        [175732] = { 83, 50 }, -- Sylvanas Windrunner\n    }\n    \n    local nathria = {\n        [166969] = { 50 }, -- Council of Blood - Frieda\n        [166970] = { 50 }, -- Council of Blood - Stavros\n        [166971] = { 50 }, -- Council of Blood - Niklaus\n        [167406] = { 70.5, 37.5 }, -- Sire Denathrius\n        [173162] = { 66, 33 }, -- Lord Evershade\n    }\n    \n    local openWorld = {\n        [180013] = { 20 }, -- Escaped Wilderling, Shadowlands - Korthia\n        [179931] = { 80, 60 }, -- Relic Breaker krelva, Shadowlands - Korthia\n        [193532] = { 40 }, -- Bazual, The Dreaded Flame, Dragonflight\n    }\n    \n    local mageTower = {\n        [116410] = { 33 }, -- Karam Magespear\n    }\n    \n    envTable.lifePercent = {}\n    \n    local zones = {\n        darkflameCleft,\n        prioryOfTheSacredFlame,\n        cityOfThreads,\n        dawnbreaker,\n        rubyLifePools,\n        azureVault,\n        brackenhideHollow,\n        neltharus,\n        hallsOfInfusion,\n        nokhudOffensive,\n        uldaman,\n        theaterOfPain,\n        mistsOfTirnaScithe,\n        plaguefall,\n        hallsOfAtonement,\n        sanguineDepths,\n        spiresOfAscension,\n        necroticWake,\n        deOtherSide,\n        tazaveshGambit,\n        tazaveshStreets,\n        freehold,\n        waycrest,\n        siegeOfBoralus,\n        motherlode,\n        junkyard,\n        workshop,\n        karazhanUpper,\n        karazhanLower,\n        hallsOfValor,\n        courtOfStars,\n        neltharionsLair,\n        blackRookHold,\n        darkheartThicket,\n        grimrailDepot,\n        ironDocks,\n        shadowmoonBurialGrounds,\n        templeOfTheJadeSerpent,\n        throneOfTheTides,\n        grimBatol,\n        amirdrassil,\n        aberrus,\n        vault,\n        sepulcher,\n        sanctumOfDomination,\n        nathria,\n        openWorld,\n        mageTower,\n        dawnOfTheInfinite,\n    }\n    \n    for i = 1, #zones do\n        local zone = zones[i]\n        \n        for id, thresholds in pairs(zone) do\n            envTable.lifePercent[id] = thresholds\n        end\n    end\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        \n        if not markersTable then\n            return\n        end\n        \n        local unitLifePercent = envTable._HealthPercent / 100\n        \n        for _, percent in ipairs(markersTable) do\n            percent = percent / 100\n            if unitLifePercent > percent then\n                if not unitFrame.healthMarker then\n                    envTable.CreateMarker(unitFrame)\n                end\n                \n                unitFrame.healthMarker:Show()\n                local width = unitFrame.healthBar:GetWidth()\n                unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width * percent, 0)\n                \n                local overlaySize = width * (unitLifePercent - percent)\n                unitFrame.healthOverlay:SetWidth(overlaySize)\n                unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                \n                unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                \n                unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                \n                return\n            end\n        end\n        \n        if unitFrame.healthMarker and unitFrame.healthMarker:IsShown() then\n            unitFrame.healthMarker:Hide()\n            unitFrame.healthOverlay:Hide()\n        end\n    end\nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"top\", unitFrame.HealthBar, -22, 15);   \n    envTable.FixateTarget.outline = scriptTable.config.outline\n    envTable.FixateTarget:Hide()\nend\n\n--MISC\n--174773 - Spiteful Shade\n\n--The War Within\n\n--220626 - Parasite\n\n--Ara Kara\n--218961 - Starved Crawler\n\n\n--Dragonflight\n\n--Brackenhide\n--194745 - Rotfang Hyena\n\n--Halls of Infusion\n--190366, 195399 - Curious Swoglet\n\n\n--Shadowlands\n\n--Halls of Atonement\n--165913 - Ghastly Parishioner\n--167898 - Manifestation of Envy\n\n--Necrotic Wake\n--164702 - Carrion Worm\n--167731 - Surgeons before 3rd boss\n\n\n--BFA\n\n--Freehold\n--129529 - Blacktooth Scrapper\n\n--Underrot\n--133835 - Feral Bloodswarmer\n\n--Siege of Boredom\n--128649 - 1st boss\n\n\n--LEGION\n\n--Nelth's Lair\n--101476 - Molten Charskin - Dargrul Encounter\n\n--Blackrook hold\n--102781 - Fel Bat Pup\n\n\n--OLD SHIT\n\n--Throne of the tides\n--212681 - Vicious Snap Dragon\n\n--Temple of the Jade Serpent\n--56792 - Figment of Doubt\n\n\n\n--87329 - test dummy \n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n\n\n",
["OptionsValues"] = {
["dotsColor"] = {
0,
1,
0.0078431377187371,
1,
},
["outline"] = true,
["nameplateColor"] = {
0.8666667342186,
0.43529415130615,
0,
1,
},
["changeNameplateColor"] = true,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.colorchanged = false\nend\n\n\n\n\n\n\n\n",
["UID"] = "0x669cfe742d32773",
["UpdateCode"] = "function (_, unitId, unitFrame, envTable, scriptTable)\n    --check if can change the nameplate color\n    local targetName = UnitName(unitId .. \"target\")\n    \n    if not targetName then\n        return\n    end\n    \n    local role = UnitGroupRolesAssigned(unitId .. \"target\")\n    \n    -- ignore temporary fixates if the unit is targeting the tank (again)\n    if role == \"TANK\" then\n        Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n        envTable.FixateTarget:Hide()\n        \n        return\n    end\n    \n    if UnitIsUnit(targetName, \"player\") then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n        \n        if not envTable.colorchanged then\n            Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n            unitFrame.healthBar.MainTargetDotAnimation =\n            Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4)\n            \n            envTable.colorchanged = true\n        end\n    end\n    \n    targetName = Plater.SetTextColorByClass(unitId .. \"target\", targetName)\n    envTable.FixateTarget.text = targetName\n    envTable.FixateTarget:Show()\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1727078545,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"top\", unitFrame.HealthBar, -22, 15);   \n    envTable.FixateTarget.outline = scriptTable.config.outline\n    envTable.FixateTarget:Hide()\nend\n\n--MISC\n--174773 - Spiteful Shade\n\n--The War Within\n\n--220626 - Parasite\n\n--Ara Kara\n--218961 - Starved Crawler\n\n\n--Dragonflight\n\n--Brackenhide\n--194745 - Rotfang Hyena\n\n--Halls of Infusion\n--190366, 195399 - Curious Swoglet\n\n\n--Shadowlands\n\n--Halls of Atonement\n--165913 - Ghastly Parishioner\n--167898 - Manifestation of Envy\n\n--Necrotic Wake\n--164702 - Carrion Worm\n--167731 - Surgeons before 3rd boss\n\n\n--BFA\n\n--Freehold\n--129529 - Blacktooth Scrapper\n\n--Underrot\n--133835 - Feral Bloodswarmer\n\n--Siege of Boredom\n--128649 - 1st boss\n\n\n--LEGION\n\n--Nelth's Lair\n--101476 - Molten Charskin - Dargrul Encounter\n\n--Blackrook hold\n--102781 - Fel Bat Pup\n\n\n--OLD SHIT\n\n--Throne of the tides\n--212681 - Vicious Snap Dragon\n\n--Temple of the Jade Serpent\n--56792 - Figment of Doubt\n\n\n\n--87329 - test dummy \n\n\n",
["Icon"] = "4630415",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n\n\n",
["Revision"] = 1101,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.8666667342186,
0.43529415130615,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
0,
1,
0.0078431377187371,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Outline Test",
},
},
["NpcNames"] = {
"174773",
"164702",
"165913",
"167898",
"56792",
"194745",
"129529",
"133835",
"101476",
"190366",
"195399",
"212681",
"102781",
"Shattershell Scarab",
"220626",
"218961",
"165251",
"162689",
"167731",
"128649",
"144160",
"40357",
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.colorchanged = false\nend\n\n\n\n\n\n\n\n",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Changes nameplate color to Orange and adds glow to npcs that are fixated on you",
["ScriptType"] = 3,
["Prio"] = 99,
["Name"] = "Fixate - Jundies",
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (_, unitId, unitFrame, envTable, scriptTable)\n    --check if can change the nameplate color\n    local targetName = UnitName(unitId .. \"target\")\n    \n    if not targetName then\n        return\n    end\n    \n    local role = UnitGroupRolesAssigned(unitId .. \"target\")\n    \n    -- ignore temporary fixates if the unit is targeting the tank (again)\n    if role == \"TANK\" then\n        Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n        envTable.FixateTarget:Hide()\n        \n        return\n    end\n    \n    if UnitIsUnit(targetName, \"player\") then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n        \n        if not envTable.colorchanged then\n            Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n            unitFrame.healthBar.MainTargetDotAnimation =\n            Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4)\n            \n            envTable.colorchanged = true\n        end\n    end\n    \n    targetName = Plater.SetTextColorByClass(unitId .. \"target\", targetName)\n    envTable.FixateTarget.text = targetName\n    envTable.FixateTarget:Show()\nend\n\n\n\n\n\n\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
},
{
["ConstructorCode"] = "function()\nend",
["OnHideCode"] = "function()\nend",
["OptionsValues"] = {
["casting"] = 1.1999999284744,
},
["Temp_OnShowCode"] = "function()\nend\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (_, _, unitFrame, _, scriptTable)\n    Plater.SetNameplateScale(unitFrame, scriptTable.config.casting)\n    Plater.FlashNameplateBorder(unitFrame)\nend",
["Time"] = 1726864253,
["Icon"] = 132397,
["Temp_ConstructorCode"] = "function()\nend",
["NpcNames"] = {
"214287",
},
["semver"] = "",
["Enabled"] = true,
["Revision"] = 315,
["Options"] = {
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Nameplate Scale",
["Min"] = 0,
["Key"] = "casting",
["Value"] = 1.2,
["Name"] = "Casting Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["OnShowCode"] = "function()\nend\n\n\n\n",
["Name"] = "Must Die - Jundies",
["Author"] = "Ququlcoatl-Blackmoore",
["Initialization"] = "function (scriptTable)        \nend",
["Desc"] = "conditionally scales the nameplate of Incorporeal Beings when not ccd",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (_, _, unitFrame, _, scriptTable)\n    Plater.SetNameplateScale(unitFrame, scriptTable.config.casting)\n    Plater.FlashNameplateBorder(unitFrame)\nend",
["Temp_Initialization"] = "function (scriptTable)        \nend",
["Temp_OnHideCode"] = "function()\nend",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["Time"] = 1727078553,
["Icon"] = 644389,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend",
["NpcNames"] = {
"167966",
"199220",
"199916",
"225601",
"39450",
},
["semver"] = "1.0.1",
["Enabled"] = true,
["Revision"] = 166,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["Name"] = "Hide Nameplate - Jundies",
["Author"] = "Briarbreed-Area 52",
["Initialization"] = "function (scriptTable)\nend\n\n-- 167966: Experimental Sludge (De Other Side)\n-- 199220 - Stagbeetle (Valdrakken)\n-- 199916 - Bridge Slimes (Brackenhide Hollow)",
["Desc"] = "Hide nameplates based on the unit's NPC ID.",
["version"] = 2,
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["Temp_Initialization"] = "function (scriptTable)\nend\n\n-- 167966: Experimental Sludge (De Other Side)\n-- 199220 - Stagbeetle (Valdrakken)\n-- 199916 - Bridge Slimes (Brackenhide Hollow)",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend\n\n\n",
["url"] = "https://wago.io/Haq3jHDkU/2",
},
},
["npcs_renamed"] = {
[173044] = "Stitcher",
[176394] = "Worker",
[212764] = "Speaker",
[192333] = "Alpha",
[191222] = "Frost Dragon",
[197985] = "Flame",
[190381] = "Rotburst",
[207796] = "Burning",
[98965] = "Kur'talos",
[176523] = "Painsmith",
[185683] = "Speed Relic",
[87329] = "Test Dummy",
[98521] = "Etheldrin",
[101839] = "Cat",
[199368] = "Big Crystal",
[164967] = "Dickus",
[179334] = "Zo'dahh",
[144298] = "Mk III",
[184319] = "Custodian",
[204560] = "Incorporeal",
[135234] = "Doggo",
[181224] = "Da Sausage",
[114627] = "Terror",
[216340] = "Sentry",
[189813] = "Dathea",
[167731] = "Separator",
[184130] = "Earthen",
[184908] = "Haste Boi",
[179733] = "Fish Stick",
[184972] = "Eggnog",
[131823] = "M'lady",
[163891] = "Bad Slime",
[201261] = "Kazzara",
[184910] = "Speed Boi",
[128551] = "Doggo",
[190340] = "Defender",
[184911] = "CDR Boi",
[180990] = "Jailer",
[185610] = "Simp",
[59555] = "Haunting",
[229537] = "Emissary",
[174843] = "Maitre D",
[214012] = "Dark ",
[214287] = "Bad Totem",
[175806] = "Sa'lami",
[181548] = "Absolution",
[178141] = "Fish Sticker",
[227300] = "Big Spawn",
[164705] = "Haste Slime",
[99192] = "Xavius",
[168969] = "Green Slime",
[194897] = "Stormsurge Totem",
[209090] = "T. Swift",
[181549] = "War",
[197509] = "Cloud",
[181546] = "Renewal",
[201155] = "Nascent Dragon",
[182169] = "Lithium",
[151657] = "Bomb",
[164707] = "Purple Slime",
[184582] = "Eric",
[197298] = "Nascent Dragon",
[214840] = "Engorged",
[174773] = "Spiteful",
[197219] = "Big Lasher",
[185685] = "CDR Relic",
[70245] = "uh oh",
[181551] = "Duty",
[180773] = "Trash Can",
[102781] = "Bat",
[165946] = "Mordretha",
[216658] = "Izo",
[198998] = "Tyr",
[175646] = "S.U.C.C. Master",
[114632] = "Attendant",
[165010] = "Purple Slime",
[190426] = "Decay Totem",
[98696] = "Illysanna",
[220401] = "Detector",
[214350] = "Turned",
[151649] = "Mk I",
[185680] = "Haste Relic",
[175663] = "Hill Brad",
[208445] = "Larodar",
[198047] = "Tempest",
[98538] = "Velandras",
},
["bossmod_support_bars_text_enabled"] = false,
["saved_cvars_last_change"] = {
["ShowClassColorInNameplate"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateOverlapV"] = "Interface/AddOns/Plater/Plater.lua:1585",
["ShowNamePlateLoseAggroFlash"] = "Interface/AddOns/Plater/Plater.lua:1585",
["SoftTargetIconGameObject"] = "Interface/AddOns/Plater/Plater.lua:1585",
["NamePlateClassificationScale"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateShowFriendlyTotems"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplatePersonalHideDelaySeconds"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateShowFriendlyPets"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateOverlapH"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplatePersonalShowWithTarget"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateMinAlpha"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateResourceOnTarget"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateLargerScale"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateMaxDistance"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateShowFriendlyMinions"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateSelfScale"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateTargetBehindMaxDistance"] = "Interface/AddOns/Plater/Plater.lua:1585",
["SoftTargetInteract"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateShowEnemies"] = "Interface/AddOns/Plater/Plater.lua:1585",
["NamePlateVerticalScale"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateSelectedAlpha"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateShowSelf"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplatePersonalShowAlways"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateMotionSpeed"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateGlobalScale"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateShowEnemyMinions"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateShowEnemyPets"] = "Interface/AddOns/Plater/Plater.lua:8637",
["nameplateShowFriendlyNPCs"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateSelectedScale"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateSelfTopInset"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateShowOnlyNames"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateShowEnemyMinus"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateShowFriends"] = "Interface/AddOns/Plater/Plater.lua:8687",
["nameplateMinAlphaDistance"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateMotion"] = "Interface/AddOns/Plater/Plater.lua:1585",
["NamePlateHorizontalScale"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateMinScale"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateShowEnemyTotems"] = "Interface/AddOns/Plater/Plater.lua:8649",
["nameplateOtherTopInset"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateOtherAtBase"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateSelfBottomInset"] = "Interface/AddOns/Plater/Plater.lua:1585",
["SoftTargetNameplateInteract"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateShowFriendlyGuardians"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateSelfAlpha"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateOccludedAlphaMult"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateShowAll"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplateLargeTopInset"] = "Interface/AddOns/Plater/Plater.lua:1585",
["nameplatePersonalShowInCombat"] = "Interface/AddOns/Plater/Plater.lua:1585",
},
["aura_cache_by_name"] = {
["mort'regar's echoes"] = {
333575,
},
["broodkeeper's blaze"] = {
394452,
394453,
},
["regrowth"] = {
8936,
16561,
20665,
22373,
22695,
27637,
28744,
34361,
39000,
39125,
66067,
69882,
72922,
72932,
84158,
97426,
98099,
102047,
165753,
173791,
176218,
187697,
188905,
224527,
265532,
283745,
292627,
292734,
311571,
326689,
338857,
},
["storm dominance"] = {
374918,
396076,
396077,
396111,
396113,
},
["crippling poison"] = {
3408,
3409,
25809,
30981,
44289,
115196,
132747,
132748,
169622,
169623,
283648,
283649,
},
["flame dominance"] = {
374881,
396056,
396062,
396105,
396106,
},
["blazing soul"] = {
111642,
235365,
389176,
411008,
422067,
423530,
426898,
},
["echoing void"] = {
307232,
307236,
317014,
317020,
317022,
317029,
318280,
318485,
318486,
373281,
373304,
373305,
},
["ice barrier"] = {
11426,
33245,
69787,
198094,
201565,
240074,
262251,
264458,
267504,
284882,
},
["sphere of suppression"] = {
294906,
294907,
294908,
294909,
294910,
294912,
294919,
294920,
294922,
298292,
298418,
298419,
298420,
300012,
300013,
},
["atrophic poison"] = {
83609,
381637,
392388,
},
["concentrated flame"] = {
295368,
295373,
295374,
295375,
295376,
295377,
295378,
295379,
295380,
295384,
299349,
299353,
302564,
},
["sanguine sphere"] = {
163689,
166591,
},
["enslaved"] = {
201089,
204831,
211680,
222424,
268192,
299156,
303622,
323961,
},
["bolster"] = {
209859,
280001,
},
["frost dominance"] = {
374916,
396072,
396074,
396108,
396109,
},
["chaos brand"] = {
1490,
255260,
281242,
},
["whip rage"] = {
29340,
233210,
},
["kevin's wrath"] = {
352520,
352528,
352533,
352534,
},
["sinful revelation"] = {
309623,
324260,
},
["predatory instincts"] = {
389808,
},
["iron wire"] = {
196861,
256148,
},
["earth shield"] = {
379,
974,
32734,
38590,
54479,
54480,
55599,
55600,
56451,
57802,
57803,
58981,
58982,
59471,
59472,
60013,
60014,
66063,
66064,
67530,
67537,
69568,
69569,
69925,
69926,
77905,
79927,
79928,
101649,
101650,
143475,
143479,
145559,
145560,
159981,
159982,
165773,
199355,
199356,
204288,
204290,
226078,
254417,
254425,
268709,
268710,
374066,
374067,
377874,
377875,
383648,
413008,
413010,
},
["power word: shield"] = {
17,
11647,
11835,
11974,
17139,
20697,
22187,
27607,
29408,
32595,
35944,
36052,
41373,
44175,
44291,
46193,
66099,
71548,
71780,
83842,
84039,
102409,
113734,
122808,
123258,
127399,
135313,
136100,
165718,
211558,
226076,
248441,
284471,
318158,
344426,
},
["strength of the pack"] = {
64369,
64381,
171114,
178149,
178150,
189715,
199184,
199186,
200922,
260057,
341222,
341223,
359768,
365338,
},
["numbing poison"] = {
5760,
5761,
158873,
158876,
311373,
342947,
359078,
},
["consecration"] = {
26573,
32773,
33559,
36946,
37553,
38385,
41541,
43429,
57798,
59998,
69930,
79966,
81297,
107100,
111365,
153441,
158416,
162642,
165711,
184047,
188370,
190010,
200667,
200678,
200679,
204242,
205228,
216217,
221645,
221730,
233390,
243597,
251151,
251152,
251549,
251550,
264082,
283579,
283582,
283583,
288807,
288808,
288809,
290496,
290497,
290498,
294346,
294347,
327980,
344172,
382484,
387881,
413267,
},
["lunar empowerment"] = {
211091,
292664,
},
["ancient flame"] = {
144691,
144695,
144699,
295365,
295367,
295369,
295372,
295381,
299348,
299350,
303380,
369990,
375583,
},
["nimble steps"] = {
352366,
354050,
354051,
354052,
},
["breath of eons"] = {
403631,
403755,
403758,
409632,
409990,
},
["tidebringer"] = {
236501,
236502,
},
["prey on the weak"] = {
131511,
255909,
389788,
389806,
},
["pistol shot"] = {
185763,
207820,
214779,
223933,
240073,
255966,
267241,
267452,
268229,
274253,
275000,
285167,
294934,
},
["liquefying ooze"] = {
345466,
},
["enveloping mist"] = {
124682,
209193,
212414,
227345,
231605,
274062,
317602,
344008,
344240,
},
["selfless healer"] = {
85804,
114250,
128863,
216777,
},
["butcher cut"] = {
279416,
279426,
},
["mutilated flesh"] = {
211672,
340431,
381672,
394021,
},
["shadowflame wreathe"] = {
405076,
405764,
405765,
405766,
406753,
406764,
406770,
},
["shadow's grasp"] = {
206760,
263656,
263658,
306965,
},
["scouring touch"] = {
356329,
},
["dream delver"] = {
352786,
353353,
353354,
},
["might of the upper reaches"] = {
333579,
},
["thunder clap"] = {
6343,
57832,
60019,
69304,
85216,
145046,
147683,
183543,
236389,
237917,
262538,
267578,
283929,
316143,
316414,
316490,
382590,
386028,
396719,
},
["nothing personal"] = {
286573,
286579,
286581,
289467,
},
["filthy transfusion"] = {
273834,
273835,
273836,
},
["soulglow spectrometer"] = {
352186,
352938,
352939,
352940,
358379,
},
["mystic touch"] = {
8647,
113746,
331653,
},
["arcane intellect"] = {
1459,
13326,
36880,
45525,
129171,
266499,
367803,
},
["blistering heat"] = {
105444,
105445,
417039,
420950,
420968,
},
["effusive anima accelerator"] = {
352188,
353248,
353349,
360277,
},
["mind flay"] = {
15407,
16568,
17165,
22919,
23953,
26044,
26143,
28310,
29407,
29570,
32417,
35507,
37276,
37330,
37621,
38243,
40842,
42396,
43512,
46562,
52586,
54339,
54805,
57779,
57941,
59367,
59974,
60006,
60472,
65488,
78751,
79541,
79711,
89032,
91134,
103024,
129033,
144293,
149984,
150886,
150893,
154125,
164445,
172670,
183324,
189873,
193473,
193635,
196508,
196509,
201520,
202894,
203037,
203313,
203375,
208697,
216513,
218510,
222075,
234696,
241934,
254123,
260182,
260304,
263117,
264892,
271649,
274019,
274032,
277358,
277521,
278311,
284414,
290402,
292974,
299301,
303566,
306391,
308172,
308884,
308885,
310552,
310555,
312526,
312679,
314187,
314188,
314592,
315949,
316835,
317490,
319027,
321330,
394167,
406231,
},
["in the spotlight"] = {
227931,
312926,
},
["moonkin aura"] = {
209740,
209746,
},
["power word: fortitude"] = {
13864,
21562,
23947,
23948,
36004,
58921,
74973,
94366,
133538,
160637,
165739,
183585,
206629,
211681,
266501,
267528,
284466,
286145,
},
["blaze of glory"] = {
99252,
146038,
146039,
153926,
167629,
167630,
177354,
373972,
373973,
373974,
373975,
373976,
373977,
385528,
},
["insidious chill"] = {
391566,
391568,
},
["freezing ice stone"] = {
402940,
403391,
},
["amplifying poison"] = {
381664,
383414,
394328,
},
["earth dominance"] = {
374917,
396067,
396068,
396085,
396098,
},
["deadly poison"] = {
2818,
2823,
3583,
10022,
13582,
21787,
21788,
32970,
32971,
34616,
34655,
34657,
36872,
38519,
38520,
41191,
41192,
41485,
43580,
43581,
56145,
56149,
59479,
59482,
63755,
63756,
67710,
67711,
72329,
82632,
82633,
96648,
113780,
129410,
130980,
130981,
132745,
132746,
145419,
145420,
145421,
177918,
177919,
177920,
289078,
314113,
373774,
377030,
377036,
394324,
394325,
403952,
},
["defensive countermeasure"] = {
297133,
299428,
300996,
303941,
},
["inspired"] = {
105710,
133461,
133928,
134116,
134454,
134885,
135077,
135414,
135435,
192943,
224693,
235727,
256539,
301972,
343503,
},
["all-consuming spite"] = {
343553,
},
},
["url"] = "https://wago.io/ak3iS95aa/110",
["blizzard_nameplate_font_override_enabled"] = true,
["aura_stack_anchor"] = {
["y"] = 2.5,
["x"] = 8,
["side"] = 12,
},
["indicator_raidmark_scale"] = 0.84999996423721,
["cast_statusbar_spark_alpha"] = 1,
["aura2_y_offset"] = 1.5,
["aura_timer_text_anchor"] = {
["x"] = 0.5,
},
["buffs_on_aura2"] = true,
["plate_config"] = {
["player"] = {
["spellname_text_font"] = "Expressway",
["castbar_offset"] = -55,
["spellpercent_text_font"] = "Expressway",
["mana_incombat"] = {
168,
4,
},
["power_percent_text_font"] = "Expressway",
["cast"] = {
170,
},
["percent_text_size"] = 9,
["castbar_enabled"] = false,
["cast_incombat"] = {
170,
},
["module_enabled"] = false,
["percent_text_font"] = "Expressway",
["healthbar_color_by_hp"] = true,
["health_incombat"] = {
168,
},
["health"] = {
168,
},
["mana"] = {
168,
4,
},
["power_percent_text_size"] = 8,
["percent_text_anchor"] = {
["y"] = 1.2999992370605,
},
["healthbar_color"] = {
0,
0,
0,
},
["percent_text_color"] = {
1,
1,
1,
},
},
["friendlyplayer"] = {
["actorname_text_font"] = "Expressway",
["spellpercent_text_font"] = "Expressway",
["actorname_friend_color"] = {
0.70980392156863,
},
["actorname_text_size"] = 9,
["actorname_use_class_color"] = true,
["cast"] = {
135,
7,
},
["level_text_alpha"] = 0.29999998211861,
["spellpercent_text_enabled"] = true,
["actorname_text_spacing"] = 8,
["only_damaged"] = false,
["actorname_guild_color"] = {
0.49803921568627,
},
["cast_incombat"] = {
135,
7,
},
["percent_show_percent"] = false,
["spellname_text_font"] = "Expressway",
["health_incombat"] = {
135,
15,
},
["health"] = {
135,
15,
},
["spellname_text_anchor"] = {
["y"] = -1.5,
["x"] = -1,
},
["percent_text_font"] = "Expressway",
["percent_text_show_decimals"] = false,
["level_text_font"] = "Expressway",
["only_thename"] = true,
},
["friendlynpc"] = {
["quest_color_enemy"] = {
1,
0.36862745098039,
0,
1,
},
["spellpercent_text_font"] = "Expressway",
["level_text_size"] = 8,
["big_actortitle_text_font"] = "Expressway",
["cast"] = {
135,
7,
},
["percent_text_ooc"] = true,
["big_actortitle_text_size"] = 9,
["spellpercent_text_anchor"] = {
["side"] = 5,
["x"] = 1,
},
["enabled"] = false,
["cast_incombat"] = {
135,
7,
},
["spellname_text_outline"] = "OUTLINE",
["spellname_text_anchor"] = {
["y"] = -1.5,
["x"] = -1,
["side"] = 3,
},
["percent_text_anchor"] = {
["y"] = 0.5,
["side"] = 11,
},
["level_text_font"] = "Expressway",
["actorname_text_font"] = "Expressway",
["quest_color"] = {
1,
0.49803921568627,
},
["quest_color_neutral"] = {
1,
0.65,
0,
},
["big_actorname_text_font"] = "Expressway",
["actorname_text_outline"] = "OUTLINE",
["big_actortitle_text_color"] = {
nil,
0.7843137254902,
nil,
1,
},
["percent_text_size"] = 10,
["actorname_text_spacing"] = 9,
["percent_text_font"] = "Expressway",
["health_incombat"] = {
135,
15,
},
["percent_show_health"] = true,
["spellpercent_text_enabled"] = true,
["percent_text_enabled"] = true,
["spellname_text_size"] = 9,
["health"] = {
135,
15,
},
["big_actorname_text_color"] = {
0.25098039215686,
0.68627450980392,
0.20392156862745,
1,
},
["actorname_text_anchor"] = {
["y"] = 0.5,
["x"] = 2.5,
["side"] = 10,
},
["spellpercent_text_size"] = 9,
["spellname_text_font"] = "Expressway",
["level_text_alpha"] = 0.29999998211861,
},
["global_health_height"] = 16,
["global_health_width"] = 132,
["enemyplayer"] = {
["actorname_text_font"] = "Expressway",
["big_actorname_text_size"] = 10,
["quest_color_enemy"] = {
1,
0.49803921568627,
0,
1,
},
["spellpercent_text_font"] = "Expressway",
["quest_color_neutral"] = {
1,
0.49803921568627,
0,
1,
},
["level_text_size"] = 8,
["spellname_text_size"] = 9,
["big_actortitle_text_font"] = "Expressway",
["cast"] = {
135,
7,
},
["all_names"] = true,
["level_text_alpha"] = 0.29999998211861,
["big_actortitle_text_size"] = 10,
["fixed_class_color"] = {
0.69803921568627,
0.1921568627451,
0.11372549019608,
},
["actorname_text_outline"] = "OUTLINE",
["actorname_text_anchor"] = {
["y"] = 0.5,
["x"] = 2,
["side"] = 10,
},
["spellpercent_text_anchor"] = {
["y"] = -1.5,
["x"] = 3,
["side"] = 5,
},
["spellname_text_font"] = "Expressway",
["actorname_text_spacing"] = 9,
["percent_text_font"] = "Expressway",
["actorname_text_size"] = 10,
["big_actorname_text_font"] = "Expressway",
["cast_incombat"] = {
135,
7,
},
["spellname_text_outline"] = "OUTLINE",
["quest_enabled"] = true,
["quest_color_enabled"] = true,
["health_incombat"] = {
135,
15,
},
["health"] = {
135,
15,
},
["spellname_text_anchor"] = {
["y"] = -1.5,
["x"] = -1,
["side"] = 3,
},
["spellpercent_text_size"] = 9,
["percent_text_anchor"] = {
["y"] = 0.5,
["side"] = 11,
},
["level_text_font"] = "Expressway",
["level_text_enabled"] = false,
},
["enemynpc"] = {
["actorname_text_font"] = "Expressway",
["quest_color_enemy"] = {
nil,
0.49803921568627,
},
["spellpercent_text_font"] = "Expressway",
["quest_color_neutral"] = {
nil,
0.49803921568627,
},
["actorname_text_size"] = 9,
["big_actortitle_text_font"] = "Expressway",
["cast"] = {
135,
7,
},
["spellpercent_text_size"] = 9,
["actorname_text_outline"] = "OUTLINE",
["level_text_alpha"] = 0.29999998211861,
["spellpercent_text_anchor"] = {
["y"] = -1.5,
["x"] = 3,
["side"] = 5,
},
["actorname_text_spacing"] = 8,
["percent_text_font"] = "Expressway",
["cast_incombat"] = {
135,
7,
},
["spellname_text_font"] = "Expressway",
["health_incombat"] = {
135,
15,
},
["actorname_text_anchor"] = {
["y"] = 0.5,
["x"] = 2,
["side"] = 10,
},
["spellname_text_size"] = 9,
["health"] = {
135,
15,
},
["spellname_text_anchor"] = {
["y"] = -1.5,
["x"] = -1,
["side"] = 3,
},
["big_actorname_text_font"] = "Expressway",
["percent_text_anchor"] = {
["y"] = 0.5,
["side"] = 11,
},
["level_text_font"] = "Expressway",
["level_text_enabled"] = false,
},
},
["health_selection_overlay"] = "PlaterFocus",
["aura_y_offset"] = 1.5,
["expansion_triggerwipe"] = {
[8] = true,
[10] = true,
[9] = true,
},
["bossmod_aura_glow_important_only"] = false,
["cast_statusbar_color_nointerrupt"] = {
0.80000007152557,
0.30196079611778,
0.30196079611778,
1,
},
["first_run2"] = true,
["indicator_spec"] = false,
["border_thickness"] = 1.2000000476837,
["resources_settings"] = {
["chr"] = {
["Player-4184-004EAE08"] = "ArcaneCharges",
["Player-3674-0898468A"] = "SoulShards",
["Player-11-0E82EBCD"] = "ArcaneCharges",
["Player-3678-0D4F17CA"] = "ComboPoints",
["Player-11-0E5C6A6B"] = "ComboPoints",
["Player-970-00B46921"] = "ComboPoints",
["Player-11-0E5C6A2D"] = "ComboPoints",
["Player-3674-09CBAF8C"] = "ArcaneCharges",
["Player-3678-0D7BB774"] = "ComboPoints",
["Player-2073-09AF21B0"] = "ComboPoints",
["Player-5764-00018799"] = "ComboPoints",
["Player-4184-00C60F8C"] = "ArcaneCharges",
["Player-5764-0008F0CD"] = "ComboPoints",
["Player-3684-091919FE"] = "HolyPower",
["Player-4184-0021692E"] = "ComboPoints",
["Player-3296-00945C33"] = "ComboPoints",
["Player-5764-0008EBB9"] = "ComboPoints",
["Player-970-006B99B8"] = "ComboPoints",
["Player-3678-0D8642EB"] = "ComboPoints",
["Player-3678-0D4C07B5"] = "ComboPoints",
["Player-4184-00CB2DE1"] = "ComboPoints",
["Player-3678-0D44FD01"] = "ComboPoints",
["Player-4184-008FBEFA"] = "ComboPoints",
["Player-3676-0DBAB9E1"] = "ComboPoints",
["Player-959-0505BE64"] = "Chi",
["Player-970-00B2046C"] = "ComboPoints",
["Player-3296-00936CF9"] = "ComboPoints",
["Player-3674-096625B1"] = "Chi",
["Player-11-0E89E36C"] = "ComboPoints",
["Player-970-0065C1C7"] = "ComboPoints",
["Player-4604-00325132"] = "ComboPoints",
["Player-970-00B49A85"] = "ComboPoints",
["Player-4184-00C7C500"] = "HolyPower",
["Player-4184-00C8CB6C"] = "ComboPoints",
},
["global_settings"] = {
["anchor"] = {
["y"] = 9.7099990844727,
},
["show_depleted"] = false,
["scale"] = 0.80000001192093,
},
},
["health_animation_time_dilatation"] = 1.6699999570847,
["npc_cache"] = {
[99358] = {
"Rotheart Dryad",
"Darkheart Thicket",
"enUS",
},
[198716] = {
"Unstable Storm",
"Vault of the Incarnates",
"enUS",
},
[196798] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
},
[186696] = {
"Quaking Totem",
"Uldaman: Legacy of Tyr",
"enUS",
},
[194241] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[205622] = {
"Krono Sandtongue",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[207796] = {
"Burning Colossus",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[196671] = {
"Arcane Ravager",
"Algeth'ar Academy",
"enUS",
},
[211121] = {
"Rank Overseer",
"Darkflame Cleft",
"enUS",
},
[216364] = {
"Blood Overseer",
"Ara-Kara, City of Echoes",
"enUS",
},
[221863] = {
"Summoned Acolyte",
"Nerub-ar Palace",
"enUS",
},
[184140] = {
"Xy Acolyte",
"Sepulcher of the First Ones",
},
[99359] = {
"Rotheart Keeper",
"Darkheart Thicket",
"enUS",
},
[180432] = {
"Devoted Accomplice",
"Tazavesh, the Veiled Market",
},
[165471] = {
"Nathrian Duelist",
"Castle Nathria",
},
[173016] = {
"Corpse Collector",
"The Necrotic Wake",
"enUS",
},
[129602] = {
"Irontide Enforcer",
"Freehold",
},
[180433] = {
"Wandering Pulsar",
"Tazavesh, the Veiled Market",
},
[200126] = {
"Fallen Waterspeaker",
"Temple of the Jade Serpent",
},
[120651] = {
"Explosives",
"Operation: Mechagon",
},
[212786] = {
"驭虚者",
"驭雷栖巢",
"zhCN",
},
[197697] = {
"Flamegullet",
"Ruby Life Pools",
"enUS",
},
[212403] = {
"Cursedheart Invader",
"The Stonevault",
"enUS",
},
[164578] = {
"Stitchflesh's Creation",
"The Necrotic Wake",
"enUS",
},
[197698] = {
"Thunderhead",
"Ruby Life Pools",
"enUS",
},
[175576] = {
"Containment Cell",
"Tazavesh, the Veiled Market",
},
[208440] = {
"Infinite Slayer",
"Dawn of the Infinite",
"enUS",
},
[126918] = {
"Irontide Crackshot",
"Freehold",
},
[196548] = {
"Ancient Branch",
"Algeth'ar Academy",
"enUS",
},
[135552] = {
"Deathtouched Slaver",
"Waycrest Manor",
"enUS",
},
[218671] = {
"Venture Co. Pyromaniac",
"Cinderbrew Meadery",
"enUS",
},
[84400] = {
"Gnarled Ancient",
"The Everbloom",
"enUS",
},
[186191] = {
"Decay Speaker",
"Brackenhide Hollow",
"enUS",
},
[135169] = {
"Spirit Drain Totem",
"The Underrot",
},
[206140] = {
"Coalesced Time",
"Dawn of the Infinite",
"enUS",
},
[83761] = {
"Ogron Laborer",
"Iron Docks",
},
[98275] = {
"Risen Archer",
"Black Rook Hold",
"enUS",
},
[221102] = {
"Elder Shadeweaver",
"City of Threads",
"enUS",
},
[178392] = {
"Gatewarden Zo'mazz",
"Tazavesh, the Veiled Market",
},
[168418] = {
"Forsworn Inquisitor",
"Spires of Ascension",
},
[200387] = {
"Shambling Infester",
"Temple of the Jade Serpent",
},
[221103] = {
"Hulking Warshell",
"City of Threads",
"enUS",
},
[199748] = {
"Timeline Marauder",
"Dawn of the Infinite",
"enUS",
},
[165222] = {
"Zolramus Bonemender",
"The Necrotic Wake",
"enUS",
},
[201155] = {
"Nascent Proto-Dragon",
"Vault of the Incarnates",
},
[198214] = {
"Broodguardian Ziruss",
"Vault of the Incarnates",
"enUS",
},
[184020] = {
"Hulking Berserker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[220976] = {
"Hollows Guard",
"Khaz Algar",
},
[223150] = {
"Ascended Voidspeaker",
"Nerub-ar Palace",
"enUS",
},
[199749] = {
"Timestream Anomaly",
"Dawn of the Infinite",
"enUS",
},
[168420] = {
"Forsworn Champion",
"Spires of Ascension",
},
[165479] = {
"Court Enforcer",
"Castle Nathria",
},
[212793] = {
"Void Ascendant",
"The Rookery",
"enUS",
},
[178139] = {
"Murkbrine Shellcrusher",
"Tazavesh, the Veiled Market",
},
[83763] = {
"Grom'kar Technician",
"Iron Docks",
},
[184022] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[214840] = {
"Engorged Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[75899] = {
"Possessed Soul",
"Shadowmoon Burial Grounds",
},
[210109] = {
"Earth Infused Golem",
"The Stonevault",
"enUS",
},
[212411] = {
"Torchsnarl",
"Darkflame Cleft",
"enUS",
},
[184023] = {
"Vicious Basilisk",
"Uldaman: Legacy of Tyr",
"enUS",
},
[178141] = {
"Murkbrine Scalebinder",
"Tazavesh, the Veiled Market",
},
[211261] = {
"Ascendant Vis'coxria",
"The Dawnbreaker",
"enUS",
},
[196044] = {
"Unruly Textbook",
"Algeth'ar Academy",
"enUS",
},
[190034] = {
"Blazebound Destroyer",
"Ruby Life Pools",
"enUS",
},
[160495] = {
"Maniacal Soulbinder",
"Theater of Pain",
},
[188244] = {
"Primal Juggernaut",
"Ruby Life Pools",
"enUS",
},
[178142] = {
"Murkbrine Fishmancer",
"Tazavesh, the Veiled Market",
},
[157810] = {
"Mawsworn Endbringer",
"Torghast, Tower of the Damned",
},
[194894] = {
"Primalist Stormspeaker",
"The Nokhud Offensive",
"enUS",
},
[196045] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
"enUS",
},
[201288] = {
"Sundered Champion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[211263] = {
"Deathscreamer Iken'tak",
"The Dawnbreaker",
"enUS",
},
[168425] = {
"Forsworn Annihilator",
"Spires of Ascension",
},
[208450] = {
"Wandering Candle",
"Darkflame Cleft",
"enUS",
},
[83893] = {
"Earthshaper Telu",
"The Everbloom",
"enUS",
},
[128969] = {
"Ashvane Commander",
"Siege of Boralus",
"enUS",
},
[99366] = {
"Taintheart Summoner",
"Darkheart Thicket",
"enUS",
},
[209090] = {
"Tindral Sageswift",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[227632] = {
"Venombite",
"The Dread Pit",
"enUS",
},
[220599] = {
"Bloodstained Webmage",
"Ara-Kara, City of Echoes",
"enUS",
},
[217658] = {
"Sir Braunpyke",
"Priory of the Sacred Flame",
"enUS",
},
[177889] = {
"Mawforged Souljudge",
"Sanctum of Domination",
},
[187224] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[211904] = {
"Tainted Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[134284] = {
"Fallen Deathspeaker",
"The Underrot",
},
[194897] = {
"Stormsurge Totem",
"The Nokhud Offensive",
"enUS",
},
[217531] = {
"Ixin",
"Ara-Kara, City of Echoes",
"enUS",
},
[164463] = {
"Paceran the Virulent",
"Theater of Pain",
},
[114584] = {
"Phantom Crew",
"Return to Karazhan",
},
[98280] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[205384] = {
"Infinite Chronoweaver",
"Dawn of the Infinite",
"enUS",
},
[177891] = {
"Mawforged Summoner",
"Sanctum of Domination",
},
[172265] = {
"Remnant of Fury",
"Sanguine Depths",
},
[227635] = {
"Kas'dru",
"The Dread Pit",
"enUS",
},
[217533] = {
"Atik",
"Ara-Kara, City of Echoes",
"enUS",
},
[220730] = {
"Royal Venomshell",
"City of Threads",
"enUS",
},
[177892] = {
"Mawforged Goliath",
"Sanctum of Domination",
},
[220986] = {
"Hollows Sentry",
"Khaz Algar",
},
[165872] = {
"Flesh Crafter",
"The Necrotic Wake",
"enUS",
},
[214209] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
"enUS",
},
[131858] = {
"Thornguard",
"Waycrest Manor",
"enUS",
},
[168942] = {
"Death Speaker",
"De Other Side",
},
[45912] = {
"Wild Vortex",
"The Vortex Pinnacle",
"enUS",
},
[207177] = {
"Infinite Watchkeeper",
"Dawn of the Infinite",
"enUS",
},
[127757] = {
"Reanimated Honor Guard",
"Atal'Dazar",
"enUS",
},
[40925] = {
"Tainted Sentry",
"Throne of the Tides",
"enUS",
},
[220988] = {
"Skeins Sentry",
"Khaz Algar",
},
[190426] = {
"Decay Totem",
"Brackenhide Hollow",
"enUS",
},
[189531] = {
"Decayed Elder",
"Brackenhide Hollow",
"enUS",
},
[162038] = {
"Regal Mistdancer",
"Sanguine Depths",
},
[98538] = {
"Lady Velandras Ravencrest",
"Black Rook Hold",
"enUS",
},
[150146] = {
"Scrapbone Shaman",
"Operation: Mechagon",
},
[137103] = {
"Blood Visage",
"The Underrot",
"enUS",
},
[101991] = {
"Nightmare Dweller",
"Darkheart Thicket",
"enUS",
},
[162039] = {
"Wicked Oppressor",
"Sanguine Depths",
},
[97068] = {
"Storm Drake",
"Halls of Valor",
"enUS",
},
[75713] = {
"Shadowmoon Bone-Mender",
"Shadowmoon Burial Grounds",
},
[186208] = {
"Rotbow Stalker",
"Brackenhide Hollow",
"enUS",
},
[162040] = {
"Grand Overseer",
"Sanguine Depths",
},
[195927] = {
"Soulharvester Galtmaa",
"The Nokhud Offensive",
"enUS",
},
[199124] = {
"Primalist Chillblaster",
"Vault of the Incarnates",
"enUS",
},
[208459] = {
"Fiery Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[52019] = {
"Skyfall Nova",
"The Vortex Pinnacle",
"enUS",
},
[83578] = {
"Ogron Laborer",
"Iron Docks",
},
[227513] = {
"Tala",
"The Dread Pit",
"enUS",
},
[171376] = {
"Head Custodian Javlin",
"Sanguine Depths",
},
[97197] = {
"Valarjar Purifier",
"Halls of Valor",
"enUS",
},
[203857] = {
"Horde Warlock",
"Dawn of the Infinite",
"enUS",
},
[190686] = {
"Frozen Destroyer",
"Vault of the Incarnates",
"enUS",
},
[195929] = {
"Soulharvester Tumen",
"The Nokhud Offensive",
"enUS",
},
[221760] = {
"Risen Mage",
"Priory of the Sacred Flame",
"enUS",
},
[75459] = {
"Plagued Bat",
"Shadowmoon Burial Grounds",
},
[195930] = {
"Soulharvester Mandakh",
"The Nokhud Offensive",
"enUS",
},
[170483] = {
"Atal'ai Deathwalker's Spirit",
"De Other Side",
},
[39392] = {
"Faceless Corruptor",
"Grim Batol",
"enUS",
},
[193373] = {
"Nokhud Thunderfist",
"The Nokhud Offensive",
"enUS",
},
[190688] = {
"Blazing Fiend",
"Vault of the Incarnates",
"enUS",
},
[168310] = {
"Plagueroc",
"Plaguefall",
},
[133912] = {
"Bloodsworn Defiler",
"The Underrot",
},
[228540] = {
"Nightfall Shadowmage",
"The Dawnbreaker",
"enUS",
},
[208208] = {
"Alliance Destroyer",
"Dawn of the Infinite",
"enUS",
},
[75652] = {
"Void Spawn",
"Shadowmoon Burial Grounds",
},
[197595] = {
"Earthwrought Smasher",
"Vault of the Incarnates",
"enUS",
},
[203861] = {
"Horde Destroyer",
"Dawn of the Infinite",
"enUS",
},
[190690] = {
"Thundering Ravager",
"Vault of the Incarnates",
"enUS",
},
[179821] = {
"Commander Zo'far",
"Tazavesh, the Veiled Market",
},
[83389] = {
"Ironwing Flamespitter",
"Iron Docks",
},
[157571] = {
"Mawsworn Flametender",
"Torghast, Tower of the Damned",
},
[129552] = {
"Monzumi",
"Atal'Dazar",
"enUS",
},
[154758] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[162047] = {
"Insatiable Brute",
"Sanguine Depths",
},
[118491] = {
"Corrupted Risen Mage",
"Black Rook Hold - Artifact Challenge",
},
[115486] = {
"Erudite Slayer",
"Return to Karazhan",
},
[90998] = {
"Blightshard Shaper",
"Neltharion's Lair",
},
[215755] = {
"Ascended Overseer",
"Khaz Algar",
},
[157572] = {
"Mawsworn Firecaller",
"Torghast, Tower of the Damned",
},
[164861] = {
"Spriggan Barkbinder",
"De Other Side",
},
[114783] = {
"Reformed Maiden",
"Return to Karazhan",
},
[105704] = {
"Arcane Manifestation",
"Court of Stars",
},
[166396] = {
"Noble Skirmisher",
"Sanguine Depths",
},
[215756] = {
"Ascended Webwarden",
"Khaz Algar",
},
[187240] = {
"Drakonid Breaker",
"The Azure Vault",
"enUS",
},
[132126] = {
"Gilded Priestess",
"Atal'Dazar",
"enUS",
},
[45915] = {
"Armored Mistral",
"The Vortex Pinnacle",
"enUS",
},
[202969] = {
"Empty Recollection",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[214350] = {
"Turned Speaker",
"The Stonevault",
"enUS",
},
[168443] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[77700] = {
"Shadowmoon Exhumer",
"Shadowmoon Burial Grounds",
},
[84989] = {
"Infested Icecaller",
"The Everbloom",
"enUS",
},
[184300] = {
"Ebonstone Golem",
"Uldaman: Legacy of Tyr",
"enUS",
},
[180336] = {
"Cartel Wiseguy",
"Tazavesh, the Veiled Market",
},
[170490] = {
"Atal'ai High Priest",
"De Other Side",
},
[168572] = {
"Fungi Stormer",
"Plaguefall",
},
[191206] = {
"Primalist Mage",
"Vault of the Incarnates",
"enUS",
},
[184301] = {
"Cavern Seeker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[202971] = {
"Null Glimmer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[225605] = {
"Nightfall Darkcaster",
"The Dawnbreaker",
"enUS",
},
[115488] = {
"Infused Pyromancer",
"Return to Karazhan",
},
[214608] = {
"Screaming Soul",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[84990] = {
"Addled Arcanomancer",
"The Everbloom",
"enUS",
},
[81985] = {
"Everbloom Cultivator",
"The Everbloom",
"enUS",
},
[122969] = {
"Zanchuli Witch-Doctor",
"Atal'Dazar",
"enUS",
},
[40577] = {
"Naz'jar Sentinel",
"Throne of the Tides",
"enUS",
},
[168318] = {
"Forsworn Goliath",
"Spires of Ascension",
},
[163459] = {
"Forsworn Mender",
"Spires of Ascension",
},
[217039] = {
"Nerubian Hauler",
"Ara-Kara, City of Echoes",
"enUS",
},
[225479] = {
"Sureki Webmage",
"The Dawnbreaker",
"enUS",
},
[197219] = {
"Vile Lasher",
"Algeth'ar Academy",
"enUS",
},
[165762] = {
"Soul Infuser",
"Castle Nathria",
},
[122970] = {
"Shadowblade Stalker",
"Atal'Dazar",
"enUS",
},
[131492] = {
"Devout Blood Priest",
"The Underrot",
},
[76104] = {
"Monstrous Corpse Spider",
"Shadowmoon Burial Grounds",
},
[86526] = {
"Grom'kar Chainmaster",
"Iron Docks",
},
[135329] = {
"Matron Bryndle",
"Waycrest Manor",
"enUS",
},
[81603] = {
"Champion Druna",
"Iron Docks",
},
[166275] = {
"Mistveil Shaper",
"Mists of Tirna Scithe",
"enUS",
},
[196198] = {
"Algeth'ar Security",
"Algeth'ar Academy",
},
[174843] = {
"Stoneborn Maitre D'",
"Castle Nathria",
},
[198500] = {
"Council Earthcaller",
"Vault of the Incarnates",
"enUS",
},
[122971] = {
"Dazar'ai Juggernaut",
"Atal'Dazar",
"enUS",
},
[166276] = {
"Mistveil Guardian",
"Mists of Tirna Scithe",
"enUS",
},
[168578] = {
"Fungalmancer",
"Plaguefall",
},
[150292] = {
"Mechagon Cavalry",
"Operation: Mechagon",
},
[218961] = {
"Starved Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[45917] = {
"Cloud Prince",
"The Vortex Pinnacle",
"enUS",
},
[220368] = {
"Failed Batch",
"Cinderbrew Meadery",
"enUS",
},
[211289] = {
"Taener Duelmal",
"Priory of the Sacred Flame",
"enUS",
},
[150165] = {
"Slime Elemental",
"Operation: Mechagon",
},
[198502] = {
"Council Stormcaller",
"Vault of the Incarnates",
"enUS",
},
[122972] = {
"Dazar'ai Augur",
"Atal'Dazar",
"enUS",
},
[207198] = {
"被诅咒的雷霆使",
"UNKNOWN",
"zhCN",
},
[92538] = {
"Tarspitter Grub",
"Neltharion's Lair",
"enUS",
},
[170882] = {
"Bone Magus",
"Theater of Pain",
},
[178171] = {
"Stormforged Guardian",
"Tazavesh, the Veiled Market",
},
[218324] = {
"Nakt",
"Ara-Kara, City of Echoes",
"enUS",
},
[211291] = {
"Sergeant Shaynemail",
"Priory of the Sacred Flame",
"enUS",
},
[196202] = {
"Spectral Invoker",
"Algeth'ar Academy",
"enUS",
},
[212826] = {
"Guard Captain Suleyman",
"Priory of the Sacred Flame",
"enUS",
},
[164873] = {
"Runestag Elderhorn",
"De Other Side",
},
[122973] = {
"Dazar'ai Confessor",
"Atal'Dazar",
"enUS",
},
[180474] = {
"Soul Reaver",
"Sanctum of Domination",
},
[183671] = {
"Monstrous Soul",
"Sepulcher of the First Ones",
},
[196203] = {
"Ethereal Restorer",
"Algeth'ar Academy",
"enUS",
},
[212827] = {
"High Priest Aemya",
"Priory of the Sacred Flame",
"enUS",
},
[129559] = {
"Cutwater Duelist",
"Freehold",
},
[186741] = {
"Arcane Elemental",
"The Azure Vault",
"enUS",
},
[150169] = {
"Toxic Lurker",
"Operation: Mechagon",
},
[183033] = {
"Grim Reflection",
"Sepulcher of the First Ones",
},
[174210] = {
"Blighted Sludge-Spewer",
"Theater of Pain",
},
[100532] = {
"Bloodtainted Burster",
"Darkheart Thicket",
"enUS",
},
[207202] = {
"Void Fragment",
"The Rookery",
"enUS",
},
[182778] = {
"Collapsing Quasar",
"Sepulcher of the First Ones",
},
[163086] = {
"Rancid Gasbag",
"Theater of Pain",
},
[91006] = {
"Rockback Gnasher",
"Neltharion's Lair",
},
[173189] = {
"Nathrian Hawkeye",
"Castle Nathria",
},
[189813] = {
"Dathea, Ascended",
"Vault of the Incarnates",
"enUS",
},
[129369] = {
"Irontide Raider",
"Siege of Boralus",
"enUS",
},
[97720] = {
"Blightshard Skitter",
"Neltharion's Lair",
},
[212831] = {
"Forge Master Damian",
"Priory of the Sacred Flame",
"enUS",
},
[173190] = {
"Court Hawkeye",
"Castle Nathria",
},
[213343] = {
"Forge Loader",
"The Stonevault",
"enUS",
},
[222167] = {
"Brood Infuser",
"Nerub-ar Palace",
"enUS",
},
[153882] = {
"Deadsoul Spirit",
"Torghast, Tower of the Damned",
},
[187897] = {
"Defier Draghar",
"Ruby Life Pools",
"enUS",
},
[129370] = {
"Irontide Waveshaper",
"Siege of Boralus",
"enUS",
},
[151325] = {
"Alarm-o-Bot",
"Operation: Mechagon",
},
[189816] = {
"Dathea Stormlash",
"Vault of the Incarnates",
"enUS",
},
[179842] = {
"Commerce Enforcer",
"Tazavesh, the Veiled Market",
},
[168717] = {
"Forsworn Justicar",
"Spires of Ascension",
},
[144293] = {
"Waste Processing Unit",
"Operation: Mechagon",
},
[183423] = {
"Reformed Bachelor",
"Return to Karazhan",
},
[165137] = {
"Zolramus Gatekeeper",
"The Necrotic Wake",
"enUS",
},
[187771] = {
"Kadros Icewrath",
"Vault of the Incarnates",
"enUS",
},
[168718] = {
"Forsworn Warden",
"Spires of Ascension",
},
[206697] = {
"Devout Priest",
"Priory of the Sacred Flame",
"enUS",
},
[184319] = {
"Refti Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[165010] = {
"Congealed Slime",
"Plaguefall",
},
[200943] = {
"Electrified Colossal Stormfiend",
"Vault of the Incarnates",
},
[164461] = {
"Sathel the Accursed",
"Theater of Pain",
},
[191225] = {
"Tarasek Earthreaver",
"Vault of the Incarnates",
"enUS",
},
[206698] = {
"Fanatical Conjuror",
"Priory of the Sacred Flame",
"enUS",
},
[80816] = {
"Ahri'ok Dugru",
"Iron Docks",
},
[183425] = {
"Wholesome Host",
"Return to Karazhan",
},
[220978] = {
"Skeins Guard",
"Khaz Algar",
},
[105715] = {
"Watchful Inquisitor",
"Court of Stars",
},
[212453] = {
"Ghastly Voidsoul",
"The Stonevault",
"enUS",
},
[129372] = {
"Blacktar Bomber",
"Siege of Boralus",
"enUS",
},
[223423] = {
"Careless Hopgoblin",
"Cinderbrew Meadery",
"enUS",
},
[98810] = {
"Wrathguard Bladelord",
"Black Rook Hold",
"enUS",
},
[205804] = {
"Risen Dragon",
"Dawn of the Infinite",
"enUS",
},
[179334] = {
"Portalmancer Zo'dahh",
"Tazavesh, the Veiled Market",
},
[227514] = {
"Velo",
"The Dread Pit",
"enUS",
},
[176521] = {
"Stygian Abductor",
"Sanctum of Domination",
},
[44404] = {
"Naz'jar Frost Witch",
"Throne of the Tides",
"enUS",
},
[129600] = {
"Bilge Rat Brinescale",
"Freehold",
},
[213932] = {
"Sureki Militant",
"The Dawnbreaker",
"enUS",
},
[194895] = {
"Unstable Squall",
"The Nokhud Offensive",
"enUS",
},
[163862] = {
"Defender of Many Eyes",
"Plaguefall",
},
[190588] = {
"Tectonic Crusher",
"Vault of the Incarnates",
"enUS",
},
[135474] = {
"Thistle Acolyte",
"UNKNOWN",
"enUS",
},
[150250] = {
"Pistonhead Blaster",
"Operation: Mechagon",
},
[114334] = {
"Damaged Golem",
"Return to Karazhan",
},
[179847] = {
"Shadowsteel Horror",
"Sanctum of Domination",
},
[190174] = {
"Hypnosis Bat",
"Operation: Mechagon",
},
[144298] = {
"Defense Bot Mk III",
"Operation: Mechagon",
},
[75979] = {
"Exhumed Spirit",
"Shadowmoon Burial Grounds",
},
[183497] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[100531] = {
"Bloodtainted Fury",
"Darkheart Thicket",
"enUS",
},
[176523] = {
"Painsmith Raznal",
"Sanctum of Domination",
},
[133685] = {
"Befouled Spirit",
"The Underrot",
},
[40166] = {
"Molten Giant",
"Grim Batol",
"enUS",
},
[190206] = {
"Primalist Flamedancer",
"Ruby Life Pools",
"enUS",
},
[180104] = {
"Tangling Bloom",
"The Shadowlands",
},
[224221] = {
"Twilight Overseer",
"Grim Batol",
"enUS",
},
[114796] = {
"Wholesome Hostess",
"Return to Karazhan",
},
[216293] = {
"Trilling Attendant",
"Ara-Kara, City of Echoes",
"enUS",
},
[203230] = {
"Dragonfire Golem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[96574] = {
"Stormforged Sentinel",
"Halls of Valor",
"enUS",
},
[40167] = {
"Twilight Beguiler",
"Grim Batol",
"enUS",
},
[190207] = {
"Primalist Cinderweaver",
"Ruby Life Pools",
"enUS",
},
[198501] = {
"Council Icecaller",
"Vault of the Incarnates",
"enUS",
},
[205363] = {
"Time-Lost Waveshaper",
"Dawn of the Infinite",
"enUS",
},
[180323] = {
"Fatespawn Monstrosity",
"Sanctum of Domination",
},
[188673] = {
"Smoldering Colossus",
"Vault of the Incarnates",
"enUS",
},
[131587] = {
"Bewitched Captain",
"Waycrest Manor",
"enUS",
},
[104247] = {
"Duskwatch Arcanist",
"Court of Stars",
},
[130909] = {
"Fetid Maggot",
"The Underrot",
},
[205623] = {
"Drazos Blackwing",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[40634] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
"enUS",
},
[127111] = {
"Irontide Oarsman",
"Freehold",
},
[205618] = {
"Thorak Greenscale",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[184582] = {
"Eric \"The Swift\"",
"Uldaman: Legacy of Tyr",
"enUS",
},
[154020] = {
"Prisonbreak Cursewalker",
"Torghast, Tower of the Damned",
},
[95842] = {
"Valarjar Thundercaller",
"Halls of Valor",
"enUS",
},
[165529] = {
"Depraved Collector",
"Halls of Atonement",
},
[214761] = {
"Nightfall Ritualist",
"The Dawnbreaker",
"enUS",
},
[98813] = {
"Bloodscent Felhound",
"Black Rook Hold",
"enUS",
},
[165913] = {
"Ghastly Parishioner",
"Halls of Atonement",
},
[45922] = {
"Empyrean Assassin",
"The Vortex Pinnacle",
"enUS",
},
[206066] = {
"Timestream Leech",
"Dawn of the Infinite",
"enUS",
},
[198870] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[221667] = {
"Lost Watcher",
"Nerub-ar Palace",
"enUS",
},
[179852] = {
"Soulless Vengeance",
"The Shadowlands",
},
[214762] = {
"Nightfall Commander",
"The Dawnbreaker",
"enUS",
},
[186246] = {
"Fleshripper Vulture",
"Brackenhide Hollow",
"enUS",
},
[115757] = {
"Wrathguard Flamebringer",
"Return to Karazhan",
},
[155812] = {
"Mawsworn Ritualist",
"Torghast, Tower of the Damned",
},
[192767] = {
"Primal Icebulk",
"Vault of the Incarnates",
"enUS",
},
[224609] = {
"Twilight Destroyer",
"Grim Batol",
"enUS",
},
[192333] = {
"Alpha Eagle",
"Algeth'ar Academy",
"enUS",
},
[164737] = {
"Brood Ambusher",
"Plaguefall",
},
[150168] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[171384] = {
"Research Scribe",
"Sanguine Depths",
},
[83892] = {
"Life Warden Gola",
"The Everbloom",
"enUS",
},
[199233] = {
"Flamescale Captain",
"Vault of the Incarnates",
"enUS",
},
[180070] = {
"Mawsworn Scryer",
"Sanctum of Domination",
},
[166299] = {
"Mistveil Tender",
"Mists of Tirna Scithe",
"enUS",
},
[199547] = {
"Frostforged Zealot",
"Vault of the Incarnates",
},
[177808] = {
"Armored Overseer",
"Tazavesh, the Veiled Market",
},
[205152] = {
"Lerai, Timesworn Maiden",
"Dawn of the Infinite",
"enUS",
},
[190340] = {
"Refti Defender",
"Halls of Infusion",
"enUS",
},
[164702] = {
"Carrion Worm",
"The Necrotic Wake",
"enUS",
},
[204918] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[163458] = {
"Forsworn Castigator",
"Spires of Ascension",
},
[191847] = {
"Nokhud Plainstomper",
"The Nokhud Offensive",
"enUS",
},
[164510] = {
"Shambling Arbalest",
"Theater of Pain",
},
[223844] = {
"Covert Webmancer",
"City of Threads",
"enUS",
},
[171799] = {
"Depths Warden",
"Sanguine Depths",
},
[213806] = {
"Splotch",
"Throne of the Tides",
"enUS",
},
[184331] = {
"Infinite Timereaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[187969] = {
"Flashfrost Earthshaper",
"Ruby Life Pools",
"enUS",
},
[180495] = {
"Enraged Direhorn",
"Tazavesh, the Veiled Market",
},
[208244] = {
"Nerubian Threadmancer",
"Earthcrawl Mines",
"enUS",
},
[115407] = {
"Rook",
"Return to Karazhan",
},
[40936] = {
"Faceless Watcher",
"Throne of the Tides",
"enUS",
},
[195265] = {
"Stormcaller Arynga",
"The Nokhud Offensive",
"enUS",
},
[199549] = {
"Flamesworn Herald",
"Vault of the Incarnates",
},
[98368] = {
"Ghostly Protector",
"Black Rook Hold",
"enUS",
},
[122984] = {
"Dazar'ai Colossus",
"Atal'Dazar",
"enUS",
},
[41096] = {
"Naz'jar Oracle",
"Throne of the Tides",
"enUS",
},
[166302] = {
"Corpse Harvester",
"The Necrotic Wake",
"enUS",
},
[150143] = {
"Scrapbone Grinder",
"Operation: Mechagon",
},
[184972] = {
"Eranog",
"Vault of the Incarnates",
"enUS",
},
[223773] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[205158] = {
"Spurlok, Timesworn Sentinel",
"Dawn of the Infinite",
"enUS",
},
[165919] = {
"Skeletal Marauder",
"The Necrotic Wake",
"enUS",
},
[98370] = {
"Ghostly Councilor",
"Black Rook Hold",
"enUS",
},
[195842] = {
"Ukhel Corruptor",
"The Nokhud Offensive",
"enUS",
},
[198326] = {
"Stormwrought Despoiler",
"Vault of the Incarnates",
},
[104251] = {
"Duskwatch Sentry",
"Court of Stars",
},
[104278] = {
"Felbound Enforcer",
"Court of Stars",
},
[163618] = {
"Zolramus Necromancer",
"The Necrotic Wake",
"enUS",
},
[180335] = {
"Cartel Smuggler",
"Tazavesh, the Veiled Market",
},
[227300] = {
"Bile-Soaked Spawn",
"Nerub-ar Palace",
"enUS",
},
[171805] = {
"Research Scribe",
"Sanguine Depths",
},
[184335] = {
"Infinite Agent",
"Uldaman: Legacy of Tyr",
"enUS",
},
[179841] = {
"Veteran Sparkcaster",
"Tazavesh, the Veiled Market",
},
[100527] = {
"Dreadfire Imp",
"Darkheart Thicket",
"enUS",
},
[102781] = {
"Fel Bat Pup",
"Black Rook Hold",
"enUS",
},
[186125] = {
"Tricktotem",
"Brackenhide Hollow",
"enUS",
},
[212775] = {
"Faceless Seer",
"Throne of the Tides",
"enUS",
},
[167967] = {
"Sentient Oil",
"De Other Side",
},
[168658] = {
"Forsworn Devastator",
"Spires of Ascension",
},
[206074] = {
"Pendule",
"Dawn of the Infinite",
"enUS",
},
[115019] = {
"Coldmist Widow",
"Return to Karazhan",
},
[165410] = {
"High Adjudicator Aleez",
"Halls of Atonement",
},
[205435] = {
"Epoch Ripper",
"Dawn of the Infinite",
"enUS",
},
[163620] = {
"Rotspew",
"The Necrotic Wake",
"enUS",
},
[205691] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[83025] = {
"Grom'kar Battlemaster",
"Iron Docks",
},
[224219] = {
"Twilight Earthcaller",
"Grim Batol",
"enUS",
},
[188302] = {
"Reconfiguration Emitter",
"Castle Nathria",
},
[83026] = {
"Siegemaster Olugar",
"Iron Docks",
},
[179733] = {
"Invigorating Fish Stick",
"Tazavesh, the Veiled Market",
},
[92610] = {
"Understone Drummer",
"Neltharion's Lair",
},
[163621] = {
"Goregrind",
"The Necrotic Wake",
"enUS",
},
[189265] = {
"Qalashi Bonetender",
"Neltharus",
"enUS",
},
[168992] = {
"Risen Cultist",
"De Other Side",
},
[178008] = {
"Decrepit Orb",
"Sanctum of Domination",
},
[168934] = {
"Enraged Spirit",
"De Other Side",
},
[195928] = {
"Soulharvester Duuren",
"The Nokhud Offensive",
"enUS",
},
[196102] = {
"Conjured Lasher",
"The Azure Vault",
"enUS",
},
[177816] = {
"Interrogation Specialist",
"Tazavesh, the Veiled Market",
},
[98243] = {
"Soul-Torn Champion",
"Black Rook Hold",
"enUS",
},
[197509] = {
"Primal Thundercloud",
"Ruby Life Pools",
"enUS",
},
[135234] = {
"Diseased Mastiff",
"Waycrest Manor",
"enUS",
},
[114803] = {
"Spectral Stable Hand",
"Return to Karazhan",
},
[129788] = {
"Irontide Bonesaw",
"Freehold",
},
[114542] = {
"Ghostly Philanthropist",
"Return to Karazhan",
},
[81236] = {
"Grimrail Technician",
"Grimrail Depot",
},
[177817] = {
"Support Officer",
"Tazavesh, the Veiled Market",
},
[114804] = {
"Spectral Charger",
"Return to Karazhan",
},
[200836] = {
"Obsidian Guard",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[194487] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[82579] = {
"Grom'kar Far Seer",
"Grimrail Depot",
},
[150160] = {
"Scrapbone Bully",
"Operation: Mechagon",
},
[180091] = {
"Ancient Core Hound",
"Tazavesh, the Veiled Market",
},
[165414] = {
"Depraved Obliterator",
"Halls of Atonement",
},
[208445] = {
"Larodar, Keeper of the Flame",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[193291] = {
"Apex Blazewing",
"Neltharus",
"enUS",
},
[151476] = {
"Blastatron X-80",
"Operation: Mechagon",
},
[212389] = {
"Cursedheart Invader",
"The Stonevault",
"enUS",
},
[155824] = {
"Lumbering Creation",
"Torghast, Tower of the Damned",
},
[220401] = {
"Pale Priest",
"City of Threads",
"enUS",
},
[175517] = {
"Symbiotic Faerie",
"9.0 Bastion Arena - Path of Ascension",
},
[228539] = {
"Nightfall Darkcaster",
"The Dawnbreaker",
"enUS",
},
[165483] = {
"Court Hierarch",
"Castle Nathria",
},
[187154] = {
"Unstable Curator",
"The Azure Vault",
"enUS",
},
[114544] = {
"Skeletal Usher",
"Return to Karazhan",
},
[128551] = {
"Irontide Mastiff",
"Freehold",
"enUS",
},
[135365] = {
"Matron Alma",
"Waycrest Manor",
"enUS",
},
[194316] = {
"Stormcaller Zarii",
"The Nokhud Offensive",
"enUS",
},
[214066] = {
"Cursedforge Stoneshaper",
"The Stonevault",
"enUS",
},
[208193] = {
"Paladin of the Silver Hand",
"Dawn of the Infinite",
"enUS",
},
[180348] = {
"Cartel Muscle",
"Tazavesh, the Veiled Market",
},
[187155] = {
"Rune Seal Keeper",
"The Azure Vault",
"enUS",
},
[210812] = {
"Royal Wicklighter",
"Darkflame Cleft",
"enUS",
},
[163882] = {
"Decaying Flesh Giant",
"Plaguefall",
},
[45919] = {
"Young Storm Dragon",
"The Vortex Pinnacle",
"enUS",
},
[162057] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[101438] = {
"Vileshard Chunk",
"Neltharion's Lair",
},
[201222] = {
"Valow, Timesworn Keeper",
"Dawn of the Infinite",
"enUS",
},
[173729] = {
"Manifestation of Pride",
"Halls of Atonement",
},
[194317] = {
"Stormcaller Boroo",
"The Nokhud Offensive",
"enUS",
},
[84499] = {
"Entanglement",
"The Everbloom",
"enUS",
},
[188026] = {
"Frost Tomb",
"Vault of the Incarnates",
"enUS",
},
[184580] = {
"Olaf",
"Uldaman: Legacy of Tyr",
"enUS",
},
[167965] = {
"Lubricator",
"De Other Side",
},
[197298] = {
"Nascent Proto-Dragon",
"Vault of the Incarnates",
"enUS",
},
[201223] = {
"Infinite Twilight Magus",
"Dawn of the Infinite",
"enUS",
},
[214012] = {
"Dark Colossus",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[156157] = {
"Coldheart Ascendant",
"Torghast, Tower of the Damned",
},
[157017] = {
"Lithic Watcher",
"Torghast, Tower of the Damned",
},
[115765] = {
"Abstract Nullifier",
"Return to Karazhan",
},
[200840] = {
"Flamebound Huntsman",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[210539] = {
"Corridor Creeper",
"Darkflame Cleft",
"enUS",
},
[129553] = {
"Dinomancer Kish'o",
"Atal'Dazar",
"enUS",
},
[156212] = {
"Coldheart Agent",
"Torghast, Tower of the Damned",
},
[40357] = {
"Invoked Shadowflame Spirit",
"Grim Batol",
"enUS",
},
[174197] = {
"Battlefield Ritualist",
"Theater of Pain",
},
[167963] = {
"Headless Client",
"De Other Side",
},
[135241] = {
"Bilge Rat Pillager",
"Siege of Boralus",
"enUS",
},
[214140] = {
"Naz'jar Sentinel",
"Throne of the Tides",
"enUS",
},
[81432] = {
"Grom'kar Technician",
"Iron Docks",
},
[224732] = {
"Covert Webmancer",
"City of Threads",
"enUS",
},
[59546] = {
"The Talking Fish",
"Temple of the Jade Serpent",
},
[133835] = {
"Feral Bloodswarmer",
"The Underrot",
},
[222964] = {
"Flavor Scientist",
"Cinderbrew Meadery",
"enUS",
},
[213885] = {
"Nightfall Dark Architect",
"The Dawnbreaker",
"enUS",
},
[207199] = {
"Cursed Rooktender",
"The Rookery",
"enUS",
},
[100485] = {
"Soul-torn Vanguard",
"Black Rook Hold",
"enUS",
},
[91000] = {
"Vileshard Hulk",
"Neltharion's Lair",
},
[183707] = {
"Xy Spellslinger",
"Sepulcher of the First Ones",
},
[211816] = {
"Bazaar Sentry",
"Khaz Algar",
},
[98696] = {
"Illysanna Ravencrest",
"Black Rook Hold",
"enUS",
},
[182045] = {
"Necrotic Ritualist",
"Sepulcher of the First Ones",
},
[165805] = {
"Shade of Kael'thas",
"Castle Nathria",
},
[168109] = {
"Empowered Mawsworn Ritualist",
"Torghast, Tower of the Damned",
},
[155831] = {
"Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
},
[85194] = {
"Entanglement",
"The Everbloom",
"enUS",
},
[206214] = {
"Infinite Infiltrator",
"Dawn of the Infinite",
"enUS",
},
[220742] = {
"Guardian Tentacle",
"The Sinkhole",
"enUS",
},
[187033] = {
"Stinkbreath",
"Brackenhide Hollow",
"enUS",
},
[168747] = {
"Venomfang",
"Plaguefall",
},
[102404] = {
"Stoneclaw Grubmaster",
"Neltharion's Lair",
},
[168594] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[100486] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[163121] = {
"Stitched Vanguard",
"The Necrotic Wake",
"enUS",
},
[101637] = {
"Valarjar Aspirant",
"Halls of Valor",
"enUS",
},
[188703] = {
"Protoform Barrier",
"Castle Nathria",
},
[102788] = {
"Felspite Dominator",
"Black Rook Hold",
"enUS",
},
[198263] = {
"Stalwart Broodwarden",
"Vault of the Incarnates",
"enUS",
},
[178630] = {
"Mawsworn Seeker",
"Sanctum of Domination",
},
[189464] = {
"Qalashi Irontorch",
"Neltharus",
"enUS",
},
[76446] = {
"Shadowmoon Enslaver",
"Shadowmoon Burial Grounds",
},
[162099] = {
"General Kaal",
"Sanguine Depths",
},
[87252] = {
"Unruly Ogron",
"Iron Docks",
},
[196115] = {
"Arcane Tender",
"The Azure Vault",
"enUS",
},
[114266] = {
"Shoreline Tidespeaker",
"Return to Karazhan",
},
[221945] = {
"Forgotten Harbinger",
"Nerub-ar Palace",
"enUS",
},
[138187] = {
"Grotesque Horror",
"The Underrot",
},
[154014] = {
"Imprisoned Cabalist",
"Torghast, Tower of the Damned",
},
[135245] = {
"Bilge Rat Demolisher",
"Siege of Boralus",
"enUS",
},
[45704] = {
"Lurking Tempest",
"The Vortex Pinnacle",
"enUS",
},
[199325] = {
"Nokhud Stormcaller",
"The Nokhud Offensive",
},
[96587] = {
"Felsworn Infester",
"Vault of the Wardens",
},
[223253] = {
"Bloodstained Webmage",
"Ara-Kara, City of Echoes",
"enUS",
},
[212739] = {
"Radiating Voidstone",
"The Rookery",
"enUS",
},
[213893] = {
"Nightfall Darkcaster",
"The Dawnbreaker",
"enUS",
},
[189466] = {
"Irontorch Commander",
"Neltharus",
"enUS",
},
[45928] = {
"Executor of the Caliph",
"The Vortex Pinnacle",
"enUS",
},
[192791] = {
"Nokhud Warspear",
"The Nokhud Offensive",
"enUS",
},
[176551] = {
"Vault Purifier",
"Tazavesh, the Veiled Market",
},
[169861] = {
"Ickor Bileflesh",
"Plaguefall",
},
[144071] = {
"Irontide Waveshaper",
"Siege of Boralus",
"enUS",
},
[131821] = {
"Faceless Maiden",
"Waycrest Manor",
"enUS",
},
[190362] = {
"Dazzling Dragonfly",
"Halls of Infusion",
"enUS",
},
[224249] = {
"Twilight Lavabender",
"Grim Batol",
"enUS",
},
[144294] = {
"Mechagon Tinkerer",
"Operation: Mechagon",
},
[169905] = {
"Risen Warlord",
"De Other Side",
},
[59547] = {
"Jiang",
"Temple of the Jade Serpent",
},
[196117] = {
"Crystal Thrasher",
"The Azure Vault",
"enUS",
},
[189555] = {
"Astral Attendant",
"The Azure Vault",
"enUS",
},
[223994] = {
"Nightfall Shadowmage",
"The Dawnbreaker",
"enUS",
},
[213892] = {
"Nightfall Shadowmage",
"The Dawnbreaker",
"enUS",
},
[186658] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[168153] = {
"Plagueroc",
"Plaguefall",
},
[163126] = {
"Brittlebone Mage",
"The Necrotic Wake",
"enUS",
},
[193944] = {
"Qalashi Lavamancer",
"Neltharus",
"enUS",
},
[199595] = {
"Nokhud Defender",
"The Nokhud Offensive",
},
[81819] = {
"Everbloom Naturalist",
"The Everbloom",
"enUS",
},
[115642] = {
"Umbral Imp",
"Faronaar",
},
[209801] = {
"军需官科拉泰特",
"UNKNOWN",
"zhCN",
},
[163894] = {
"Blighted Spinebreaker",
"Plaguefall",
},
[192796] = {
"Nokhud Hornsounder",
"The Nokhud Offensive",
"enUS",
},
[59873] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
},
[156245] = {
"Grand Automaton",
"Torghast, Tower of the Damned",
},
[213338] = {
"Forgebound Mender",
"The Stonevault",
"enUS",
},
[220141] = {
"Royal Jelly Purveyor",
"Cinderbrew Meadery",
"enUS",
},
[167731] = {
"Separation Assistant",
"The Necrotic Wake",
"enUS",
},
[168882] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[189470] = {
"Lava Flare",
"Neltharus",
"enUS",
},
[171184] = {
"Mythresh, Sky's Talons",
"De Other Side",
},
[163128] = {
"Zolramus Sorcerer",
"The Necrotic Wake",
"enUS",
},
[198424] = {
"Primalist Frostsculptor",
"Vault of the Incarnates",
"enUS",
},
[155830] = {
"Mawsworn Disciple",
"Torghast, Tower of the Damned",
},
[81820] = {
"Everbloom Mender",
"The Everbloom",
"enUS",
},
[204560] = {
"Incorporeal Being",
"Halls of Infusion",
"enUS",
},
[94224] = {
"Petrifying Totem",
"Neltharion's Lair",
"enUS",
},
[95769] = {
"Mindshattered Screecher",
"Darkheart Thicket",
"enUS",
},
[163520] = {
"Forsworn Squad-Leader",
"Spires of Ascension",
},
[227578] = {
"Nerubian Webcaster",
"Earthcrawl Mines",
"enUS",
},
[197146] = {
"Qalashi Emissary",
"Vault of the Incarnates",
"enUS",
},
[206351] = {
"Alliance Conjuror",
"Dawn of the Infinite",
"enUS",
},
[155221] = {
"Faeleaf Tender",
"Torghast, Tower of the Damned",
},
[194990] = {
"Stormseeker Acolyte",
"Vault of the Incarnates",
"enUS",
},
[167607] = {
"Stoneborn Slasher",
"Halls of Atonement",
},
[167113] = {
"Spinemaw Acidgullet",
"Mists of Tirna Scithe",
"enUS",
},
[99192] = {
"Shade of Xavius",
"Darkheart Thicket",
"enUS",
},
[115388] = {
"King",
"Return to Karazhan",
},
[98965] = {
"Kur'talos Ravencrest",
"Black Rook Hold",
"enUS",
},
[197145] = {
"Colossal Stormfiend",
"Vault of the Incarnates",
"enUS",
},
[189235] = {
"Overseer Lahar",
"Neltharus",
"enUS",
},
[218884] = {
"Shattershell Scarab",
"Nerub-ar Palace",
"enUS",
},
[190368] = {
"Flamecaller Aymi",
"Halls of Infusion",
"enUS",
},
[199703] = {
"Magma Mystic",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[216326] = {
"Ascended Neophyte",
"City of Threads",
"enUS",
},
[191222] = {
"Juvenile Frost Proto-Dragon",
"Vault of the Incarnates",
"enUS",
},
[195696] = {
"Primalist Thunderbeast",
"The Nokhud Offensive",
"enUS",
},
[156226] = {
"Coldheart Binder",
"Torghast, Tower of the Damned",
},
[188067] = {
"Flashfrost Chillweaver",
"Ruby Life Pools",
"enUS",
},
[229537] = {
"Void Emissary",
"Mists of Tirna Scithe",
"enUS",
},
[168886] = {
"Virulax Blightweaver",
"Plaguefall",
},
[179388] = {
"Hourglass Tidesage",
"Tazavesh, the Veiled Market",
},
[45930] = {
"Minister of Air",
"The Vortex Pinnacle",
"enUS",
},
[216328] = {
"Unstable Test Subject",
"City of Threads",
"enUS",
},
[211341] = {
"Manifested Shadow",
"The Dawnbreaker",
"enUS",
},
[168007] = {
"Empowered Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
},
[40943] = {
"Gilgoblin Aquamage",
"Throne of the Tides",
"enUS",
},
[216621] = {
"Nerubian Webspinner",
"Earthcrawl Mines",
"enUS",
},
[157634] = {
"Flameforge Enforcer",
"Torghast, Tower of the Damned",
},
[166969] = {
"Baroness Frieda",
"Castle Nathria",
},
[187160] = {
"Crystal Fury",
"The Azure Vault",
"enUS",
},
[192800] = {
"Nokhud Lancemaster",
"The Nokhud Offensive",
"enUS",
},
[167612] = {
"Stoneborn Reaver",
"Halls of Atonement",
},
[176573] = {
"Mawsworn Woebringer",
"Torghast, Tower of the Damned",
},
[197149] = {
"Qalashi Lavamancer",
"Vault of the Incarnates",
"enUS",
},
[197406] = {
"Aggravated Skitterfly",
"Algeth'ar Academy",
"enUS",
},
[187768] = {
"Dathea Stormlash",
"Vault of the Incarnates",
"enUS",
},
[166970] = {
"Lord Stavros",
"Castle Nathria",
},
[82590] = {
"Grimrail Scout",
"Grimrail Depot",
},
[224271] = {
"Twilight Warlock",
"Grim Batol",
"enUS",
},
[213913] = {
"Kobold Flametender",
"Darkflame Cleft",
"enUS",
},
[131677] = {
"Heartsbane Runeweaver",
"Waycrest Manor",
"enUS",
},
[220946] = {
"Venture Co. Honey Harvester",
"Cinderbrew Meadery",
"enUS",
},
[190342] = {
"Containment Apparatus",
"Halls of Infusion",
"enUS",
},
[172981] = {
"Kyrian Stitchwerk",
"The Necrotic Wake",
"enUS",
},
[166971] = {
"Castellan Niklaus",
"Castle Nathria",
},
[184107] = {
"Runic Protector",
"Uldaman: Legacy of Tyr",
"enUS",
},
[152905] = {
"Tower Sentinel",
"Torghast, Tower of the Damned",
},
[175550] = {
"Volatile Faerie",
"9.0 Bastion Arena - Path of Ascension",
},
[164414] = {
"Reanimated Mage",
"The Necrotic Wake",
"enUS",
},
[173044] = {
"Stitching Assistant",
"The Necrotic Wake",
"enUS",
},
[128434] = {
"Feasting Skyscreamer",
"Atal'Dazar",
"enUS",
},
[190373] = {
"Primalist Galesinger",
"Halls of Infusion",
"enUS",
},
[164926] = {
"Drust Boughbreaker",
"Mists of Tirna Scithe",
"enUS",
},
[193760] = {
"Surging Ruiner",
"Vault of the Incarnates",
"enUS",
},
[224962] = {
"Cursedforge Mender",
"The Stonevault",
"enUS",
},
[206230] = {
"Infinite Diversionist",
"Dawn of the Infinite",
"enUS",
},
[166589] = {
"Animated Weapon",
"Sanguine Depths",
},
[113537] = {
"Emberhusk Dominator",
"Neltharion's Lair",
},
[84957] = {
"Putrid Pyromancer",
"The Everbloom",
"enUS",
},
[197535] = {
"High Channeler Ryvati",
"Ruby Life Pools",
"enUS",
},
[175861] = {
"Glacial Spike",
"Sanctum of Domination",
},
[198311] = {
"Flamewrought Eradicator",
"Vault of the Incarnates",
"enUS",
},
[214287] = {
"Earth Burst Totem",
"The Stonevault",
"enUS",
},
[198047] = {
"Tempest Channeler",
"Ruby Life Pools",
"enUS",
},
[83390] = {
"Thunderlord Wrangler",
"Iron Docks",
},
[177716] = {
"So' Cartel Assassin",
"Tazavesh, the Veiled Market",
},
[165556] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[186229] = {
"Wilted Oak",
"Brackenhide Hollow",
"enUS",
},
[197671] = {
"Volatile Infuser",
"Vault of the Incarnates",
"enUS",
},
[86684] = {
"Feral Lasher",
"The Everbloom",
"enUS",
},
[76518] = {
"Ritual of Bones",
"Shadowmoon Burial Grounds",
},
[176565] = {
"Disruptive Patron",
"Tazavesh, the Veiled Market",
},
[205337] = {
"Infinite Timebender",
"Dawn of the Infinite",
"enUS",
},
[167876] = {
"Inquisitor Sigar",
"Halls of Atonement",
},
[101326] = {
"Honored Ancestor",
"Halls of Valor",
},
[165824] = {
"Nar'zudah",
"The Necrotic Wake",
"enUS",
},
[164929] = {
"Tirnenn Villager",
"Mists of Tirna Scithe",
"enUS",
},
[81984] = {
"Gnarlroot",
"The Everbloom",
"enUS",
},
[168384] = {
"Flesh Construct",
"The Necrotic Wake",
},
[192934] = {
"Volatile Infuser",
"Vault of the Incarnates",
"enUS",
},
[126919] = {
"Irontide Stormcaller",
"Freehold",
},
[214673] = {
"Flavor Scientist",
"Cinderbrew Meadery",
"enUS",
},
[220974] = {
"Bazaar Guard",
"Khaz Algar",
},
[190377] = {
"Primalist Icecaller",
"Halls of Infusion",
"enUS",
},
[216340] = {
"Sentry Stagshell",
"Ara-Kara, City of Echoes",
"enUS",
},
[168627] = {
"Plaguebinder",
"Plaguefall",
},
[195876] = {
"Desecrated Ohuna",
"The Nokhud Offensive",
"enUS",
},
[84767] = {
"Twisted Abomination",
"The Everbloom",
"enUS",
},
[129374] = {
"Scrimshaw Enforcer",
"Siege of Boralus",
"enUS",
},
[163524] = {
"Kyrian Dark-Praetor",
"Spires of Ascension",
},
[189227] = {
"Qalashi Hunter",
"Neltharus",
"enUS",
},
[205212] = {
"Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[210966] = {
"Sureki Webmage",
"The Dawnbreaker",
"enUS",
},
[197905] = {
"Spellbound Scepter",
"Algeth'ar Academy",
},
[195877] = {
"Risen Mystic",
"The Nokhud Offensive",
"enUS",
},
[214419] = {
"Void Cursed Crusher",
"The Rookery",
"enUS",
},
[220815] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[98706] = {
"Commander Shemdah'sohn",
"Black Rook Hold",
"enUS",
},
[101839] = {
"Risen Companion",
"Black Rook Hold",
"enUS",
},
[197985] = {
"Flame Channeler",
"Ruby Life Pools",
"enUS",
},
[102095] = {
"Risen Lancer",
"Black Rook Hold",
"enUS",
},
[101008] = {
"Stinging Swarm",
"Black Rook Hold",
"enUS",
},
[216338] = {
"Hulking Bloodguard",
"Ara-Kara, City of Echoes",
"enUS",
},
[102287] = {
"Emberhusk Dominator",
"Neltharion's Lair",
},
[131685] = {
"Runic Disciple",
"Waycrest Manor",
"enUS",
},
[198308] = {
"Frostwrought Dominator",
"Vault of the Incarnates",
"enUS",
},
[114627] = {
"Shrieking Terror",
"Return to Karazhan",
},
[166301] = {
"Mistveil Stalker",
"Mists of Tirna Scithe",
"enUS",
},
[104300] = {
"Shadow Mistress",
"Court of Stars",
},
[175992] = {
"Dutiful Attendant",
"Castle Nathria",
},
[216339] = {
"Sureki Unnaturaler",
"City of Threads",
"enUS",
},
[214421] = {
"Coalescing Void Diffuser",
"The Rookery",
"enUS",
},
[164707] = {
"Congealed Slime",
"Plaguefall",
},
[196263] = {
"Nokhud Neophyte",
"The Nokhud Offensive",
"enUS",
},
[131812] = {
"Heartsbane Soulcharmer",
"Waycrest Manor",
"enUS",
},
[190381] = {
"Rotburst Totem",
"Brackenhide Hollow",
"enUS",
},
[216658] = {
"Izo, the Grand Splicer",
"City of Threads",
"enUS",
},
[227581] = {
"Nerubian Oracle",
"Earthcrawl Mines",
"enUS",
},
[115395] = {
"Queen",
"Return to Karazhan",
},
[114626] = {
"Forlorn Spirit",
"Return to Karazhan",
},
[104270] = {
"Guardian Construct",
"Court of Stars",
},
[80805] = {
"Makogg Emberblade",
"Iron Docks",
},
[190370] = {
"Squallbringer Cyraz",
"Halls of Infusion",
"enUS",
},
[205727] = {
"Time-Lost Rocketeer",
"Dawn of the Infinite",
"enUS",
},
[199717] = {
"Nokhud Defender",
"The Nokhud Offensive",
"enUS",
},
[197799] = {
"Quarry Infuser",
"Vault of the Incarnates",
"enUS",
},
[167998] = {
"Portal Guardian",
"Theater of Pain",
},
[59552] = {
"The Crybaby Hozen",
"Temple of the Jade Serpent",
},
[131666] = {
"Coven Thornshaper",
"Waycrest Manor",
"enUS",
},
[170690] = {
"Diseased Horror",
"Theater of Pain",
},
[164921] = {
"Drust Harvester",
"Mists of Tirna Scithe",
"enUS",
},
[211262] = {
"Ixkreten the Unbreakable",
"The Dawnbreaker",
"enUS",
},
[227573] = {
"Anub'vir",
"Earthcrawl Mines",
"enUS",
},
[223774] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[114624] = {
"Arcane Warden",
"Return to Karazhan",
},
[155090] = {
"Anodized Coilbearer",
"Operation: Mechagon",
},
[174773] = {
"Spiteful Shade",
"Algeth'ar Academy",
"enUS",
},
[98081] = {
"Bellowing Idol",
"Neltharion's Lair",
"enUS",
},
[114629] = {
"Spectral Retainer",
"Return to Karazhan",
},
[169924] = {
"Veteran Stoneguard",
"Castle Nathria",
},
[186420] = {
"Earthen Weaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[167111] = {
"Spinemaw Staghorn",
"Mists of Tirna Scithe",
"enUS",
},
[211228] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[180864] = {
"High Torturer",
"Sanctum of Domination",
},
[151127] = {
"Lord of Torment",
"Torghast, Tower of the Damned",
},
[227575] = {
"Armored Shellguard",
"Earthcrawl Mines",
"enUS",
},
[189234] = {
"Frostbreath Arachnid",
"Vault of the Incarnates",
"enUS",
},
[129527] = {
"Bilge Rat Buccaneer",
"Freehold",
},
[203812] = {
"Voice From Beyond",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[82597] = {
"Grom'kar Captain",
"Grimrail Depot",
},
[101075] = {
"Wormspeaker Devout",
"Neltharion's Lair",
"enUS",
},
[176575] = {
"Mawsworn Soulwarden",
"Torghast, Tower of the Damned",
},
[176959] = {
"Mawsworn Soulmage",
"Sanctum of Domination",
},
[131819] = {
"Coven Diviner",
"Waycrest Manor",
"enUS",
},
[212764] = {
"Engine Speaker",
"The Stonevault",
"enUS",
},
[80935] = {
"Grom'kar Boomer",
"Grimrail Depot",
},
[41139] = {
"Naz'jar Oracle",
"Throne of the Tides",
"enUS",
},
[169159] = {
"Unstable Canister",
"Plaguefall",
},
[131436] = {
"Chosen Blood Matron",
"The Underrot",
},
[59553] = {
"The Songbird Queen",
"Temple of the Jade Serpent",
},
[137830] = {
"Pallid Gorger",
"Waycrest Manor",
"enUS",
},
[96664] = {
"Valarjar Runecarver",
"Halls of Valor",
"enUS",
},
[212765] = {
"Void Bound Despoiler",
"The Stonevault",
"enUS",
},
[169927] = {
"Putrid Butcher",
"Theater of Pain",
},
[180015] = {
"Burly Deckhand",
"Tazavesh, the Veiled Market",
},
[185528] = {
"Trickclaw Mystic",
"Brackenhide Hollow",
"enUS",
},
[185656] = {
"Filth Caller",
"Brackenhide Hollow",
"enUS",
},
[95779] = {
"Festerhide Grizzly",
"Darkheart Thicket",
"enUS",
},
[116549] = {
"Backup Singer",
"Return to Karazhan",
},
[164557] = {
"Shard of Halkias",
"Halls of Atonement",
},
[87329] = {
"Raider's Training Dummy",
"Draenor",
},
[80936] = {
"Grom'kar Grenadier",
"Grimrail Depot",
},
[156244] = {
"Winged Automaton",
"Torghast, Tower of the Damned",
},
[185529] = {
"Bracken Warscourge",
"Brackenhide Hollow",
"enUS",
},
[165197] = {
"Skeletal Monstrosity",
"The Necrotic Wake",
"enUS",
},
[208698] = {
"Infinite Riftmage",
"Dawn of the Infinite",
"enUS",
},
[129367] = {
"Bilge Rat Tempest",
"Siege of Boralus",
"enUS",
},
[152898] = {
"Deadsoul Chorus",
"Torghast, Tower of the Damned",
},
[211290] = {
"Elaena Emberlanz",
"Priory of the Sacred Flame",
"enUS",
},
[129529] = {
"Blacktooth Scrapper",
"Freehold",
},
[95834] = {
"Valarjar Mystic",
"Halls of Valor",
"enUS",
},
[45935] = {
"Temple Adept",
"The Vortex Pinnacle",
"enUS",
},
[165763] = {
"Vile Occultist",
"Castle Nathria",
},
[189878] = {
"Nathrezim Infiltrator",
"Operation: Mechagon",
},
[144296] = {
"Spider Tank",
"Operation: Mechagon",
},
[131823] = {
"Sister Malady",
"UNKNOWN",
"enUS",
},
[114632] = {
"Spectral Attendant",
"Return to Karazhan",
},
[205735] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[198702] = {
"Unstable Frost",
"Vault of the Incarnates",
"enUS",
},
[115640] = {
"Fuming Imp",
"Faronaar",
},
[208165] = {
"Alliance Knight",
"Dawn of the Infinite",
"enUS",
},
[168396] = {
"Plaguebelcher",
"Plaguefall",
},
[86372] = {
"Melded Berserker",
"The Everbloom",
"enUS",
},
[133870] = {
"Diseased Lasher",
"The Underrot",
},
[179010] = {
"Fatespawn Anomaly",
"Sanctum of Domination",
},
[95771] = {
"Dreadsoul Ruiner",
"Darkheart Thicket",
"enUS",
},
[192788] = {
"Qalashi Thaumaturge",
"Neltharus",
"enUS",
},
[151773] = {
"Junkyard D.0.G.",
"Operation: Mechagon",
},
[155908] = {
"Deathspeaker",
"Torghast, Tower of the Damned",
},
[178165] = {
"Coastwalker Goliath",
"Tazavesh, the Veiled Market",
},
[201261] = {
"Kazzara, the Hellforged",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[191739] = {
"Scalebane Lieutenant",
"The Azure Vault",
"enUS",
},
[114633] = {
"Spectral Valet",
"Return to Karazhan",
},
[80938] = {
"Grom'kar Hulk",
"Grimrail Depot",
},
[88163] = {
"Grom'kar Cinderseer",
"Grimrail Depot",
},
[191230] = {
"Dragonspawn Flamebender",
"Vault of the Incarnates",
"enUS",
},
[98521] = {
"Lord Etheldrin Ravencrest",
"Black Rook Hold",
"enUS",
},
[212412] = {
"Sootsnout",
"Darkflame Cleft",
"enUS",
},
[170572] = {
"Atal'ai Hoodoo Hexxer",
"De Other Side",
},
[164562] = {
"Depraved Houndmaster",
"Halls of Atonement",
},
[206064] = {
"Coalesced Moment",
"Dawn of the Infinite",
"enUS",
},
[198577] = {
"Unstable Flame",
"Vault of the Incarnates",
"enUS",
},
[56792] = {
"Figment of Doubt",
"Temple of the Jade Serpent",
},
[200137] = {
"Depraved Mistweaver",
"Temple of the Jade Serpent",
},
[162133] = {
"General Kaal",
"Sanguine Depths",
},
[131586] = {
"Banquet Steward",
"Waycrest Manor",
"enUS",
},
[198869] = {
"Sundered Devastator",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[164563] = {
"Vicious Gargon",
"Halls of Atonement",
},
[221979] = {
"Void Bound Howler",
"The Stonevault",
"enUS",
},
[164506] = {
"Ancient Captain",
"Theater of Pain",
},
[179269] = {
"Oasis Security",
"Tazavesh, the Veiled Market",
},
[130400] = {
"Irontide Crusher",
"Freehold",
},
[171341] = {
"Bladebeak Hatchling",
"De Other Side",
},
[59555] = {
"Haunting Sha",
"Temple of the Jade Serpent",
},
[223770] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[194315] = {
"Stormcaller Solongo",
"The Nokhud Offensive",
"enUS",
},
[118489] = {
"Corrupted Risen Soldier",
"Black Rook Hold - Artifact Challenge",
},
[84520] = {
"Pitwarden Gwarnok",
"Iron Docks",
},
[151649] = {
"Defense Bot Mk I",
"Operation: Mechagon",
},
[165076] = {
"Gluttonous Tick",
"Sanguine Depths",
},
[65317] = {
"Xiang",
"Temple of the Jade Serpent",
},
[204206] = {
"Horde Farseer",
"Dawn of the Infinite",
"enUS",
},
[198998] = {
"Tyr, the Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[81212] = {
"Grimrail Overseer",
"Grimrail Depot",
},
[184130] = {
"Earthen Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[130404] = {
"Vermin Trapper",
"Freehold",
},
[199037] = {
"Primalist Shocktrooper",
"Halls of Infusion",
"enUS",
},
[185537] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[171343] = {
"Bladebeak Matriarch",
"De Other Side",
},
[170480] = {
"Atal'ai Deathwalker",
"De Other Side",
},
[223772] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[191164] = {
"Arcane Tender",
"The Azure Vault",
"enUS",
},
[184131] = {
"Earthen Guardian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[198868] = {
"Primalist Voltweaver",
"Vault of the Incarnates",
"enUS",
},
[198709] = {
"Unstable Earth",
"Vault of the Incarnates",
"enUS",
},
[114316] = {
"Baroness Dorothea Millstipe",
"Return to Karazhan",
},
[75506] = {
"Shadowmoon Loyalist",
"Shadowmoon Burial Grounds",
},
[196856] = {
"Primal Stormsentry",
"Vault of the Incarnates",
"enUS",
},
[102232] = {
"Rockbound Trapper",
"Neltharion's Lair",
},
[164567] = {
"Ingra Maloch",
"Mists of Tirna Scithe",
"enUS",
},
[184132] = {
"Earthen Warder",
"Uldaman: Legacy of Tyr",
"enUS",
},
[189706] = {
"Chaotic Essence",
"Castle Nathria",
},
[176598] = {
"Torment Golem",
"Torghast, Tower of the Damned",
},
[150297] = {
"Mechagon Renormalizer",
"Operation: Mechagon",
},
[150253] = {
"Weaponized Crawler",
"Operation: Mechagon",
},
[196576] = {
"Spellbound Scepter",
"Algeth'ar Academy",
"enUS",
},
[115020] = {
"Arcanid",
"Return to Karazhan",
},
[167964] = {
"4.RF-4.RF",
"De Other Side",
},
[212673] = {
"Naz'jar Ravager",
"Throne of the Tides",
"enUS",
},
[208456] = {
"Shuffling Horror",
"Darkflame Cleft",
"enUS",
},
[83894] = {
"Dulhu",
"The Everbloom",
"enUS",
},
[114317] = {
"Lady Catriona Von'Indi",
"Return to Karazhan",
},
[154744] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[180473] = {
"Unstoppable Abomination",
"Sanctum of Domination",
},
[223775] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[150142] = {
"Scrapbone Trashtosser",
"Operation: Mechagon",
},
[210269] = {
"Hired Muscle",
"Cinderbrew Meadery",
"enUS",
},
[199368] = {
"Hardened Crystal",
"The Azure Vault",
"enUS",
},
[220195] = {
"Sureki Silkbinder",
"City of Threads",
"enUS",
},
[183495] = {
"Twisted Worldeater",
"Sepulcher of the First Ones",
},
[198503] = {
"Council Flamecaller",
"Vault of the Incarnates",
"enUS",
},
[214441] = {
"Scorched Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[223776] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[214697] = {
"Chef Chewie",
"Cinderbrew Meadery",
"enUS",
},
[176974] = {
"Soul Reaver",
"Sanctum of Domination",
},
[191232] = {
"Drakonid Stormbringer",
"Vault of the Incarnates",
"enUS",
},
[220196] = {
"Herald of Ansurek",
"City of Threads",
"enUS",
},
[180429] = {
"Adorned Starseer",
"Tazavesh, the Veiled Market",
},
[168156] = {
"Remornia",
"Castle Nathria",
},
[186220] = {
"Brackenhide Shaper",
"Brackenhide Hollow",
"enUS",
},
[223777] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[208438] = {
"Infinite Saboteur",
"Dawn of the Infinite",
"enUS",
},
[205619] = {
"Sarek Cinderbreath",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[219046] = {
"Voracious Worm",
"Nerub-ar Palace",
"enUS",
},
[220197] = {
"Royal Swarmguard",
"City of Threads",
"enUS",
},
[127106] = {
"Irontide Officer",
"Freehold",
},
[186226] = {
"Fetid Rotsinger",
"Brackenhide Hollow",
"enUS",
},
[99891] = {
"Storm Drake",
"Halls of Valor",
"enUS",
},
[213954] = {
"Rock Smasher",
"The Stonevault",
"enUS",
},
[185032] = {
"Taskmaster Xy'pro",
"Sepulcher of the First Ones",
},
[205620] = {
"Malgosa Spellbinder",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[190403] = {
"Glacial Proto-Dragon",
"Halls of Infusion",
"enUS",
},
[151657] = {
"Bomb Tonk",
"Operation: Mechagon",
},
[114319] = {
"Lady Keira Berrybuck",
"Return to Karazhan",
},
[115406] = {
"Knight",
"Return to Karazhan",
},
[180431] = {
"Focused Ritualist",
"Tazavesh, the Veiled Market",
},
[195135] = {
"Bracken Warscourge",
"Brackenhide Hollow",
},
[150251] = {
"Pistonhead Mechanic",
"Operation: Mechagon",
},
[207197] = {
"被诅咒的雷鸫守卫",
"UNKNOWN",
"zhCN",
},
},
["spell_animation_list"] = {
[203782] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = true,
["scaleY"] = -1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = true,
["scaleY"] = -1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[107270] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 200,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 200,
},
},
[7268] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[196278] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.05,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.05,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[189112] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.34999999403954,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.8799999952316,
["fade_in"] = 0,
["duration"] = 0.40000000596046,
["cooldown"] = 0.5,
["frequency"] = 51.979999542236,
},
},
[2643] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[188443] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[162243] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 1,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 1,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[199547] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.59999847412109,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.039999961853,
["scale_upY"] = 1.039999961853,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.59999847412109,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.039999961853,
["scale_upY"] = 1.039999961853,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[228354] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[31661] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[117418] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.1499999910593,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1799999922514,
["cooldown"] = 0.5,
["frequency"] = 116.00999450684,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1499999910593,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1799999922514,
["cooldown"] = 0.5,
["frequency"] = 116.00999450684,
},
},
[17364] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.02,
["scale_upY"] = 1.02,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.10000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["scaleY"] = -1,
["fade_out"] = 0.11,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.02,
["scale_upY"] = 1.02,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.10000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.11,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[222024] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1,
["duration"] = 0.050000000745058,
["scale_downX"] = 1,
["animation_type"] = "scale",
["critical_scale"] = 1,
["scale_upY"] = 1.1000000238419,
["cooldown"] = 0.75,
["scale_downY"] = 0.89999997615814,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1,
["amplitude"] = 1.7999999523163,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 11.14999961853,
},
["3"] = {
["enabled"] = true,
["scale_upX"] = 1,
["duration"] = 0.050000000745058,
["scale_downX"] = 1,
["animation_type"] = "scale",
["critical_scale"] = 1,
["scale_upY"] = 1.1000000238419,
["cooldown"] = 0.75,
["scale_downY"] = 0.89999997615814,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1,
["amplitude"] = 1.7999999523163,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 11.14999961853,
},
},
[11366] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 10,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 10,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[155166] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[46968] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 0.95,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.1,
["frequency"] = 120,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 0.95,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.1,
["frequency"] = 120,
},
},
[187708] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[228478] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.099999994039536,
["absolute_sineX"] = true,
["scaleY"] = 0.79999923706055,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.20000076293945,
["critical_scale"] = 1.05,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.099999994039536,
["absolute_sineX"] = true,
["scaleY"] = 0.79999923706055,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.20000076293945,
["critical_scale"] = 1.05,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[49998] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["enabled"] = true,
["amplitude"] = 1.0330086946487,
["fade_in"] = 0.01,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[204157] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 6,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 6,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[31935] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[53595] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[148135] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.75,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 60.874122619629,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.75,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 60.874122619629,
},
},
[108853] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[324540] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 2,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.89999997615814,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 25.650197982788,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 2,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.89999997615814,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 25.650197982788,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[53351] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[52174] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.075,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.2,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.15,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.3,
["cooldown"] = 0.5,
["frequency"] = 50,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.075,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.2,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.15,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.3,
["cooldown"] = 0.5,
["frequency"] = 50,
},
},
[206930] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[275779] = {
["1"] = {
["scaleY"] = -1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[86040] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.1,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 2,
["fade_in"] = 0.05,
["duration"] = 0.15,
["cooldown"] = 0.25,
["frequency"] = 20,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.1,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 2,
["fade_in"] = 0.05,
["duration"] = 0.15,
["cooldown"] = 0.25,
["frequency"] = 20,
},
},
[100784] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[196819] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1999999284744,
["scale_upY"] = 1.2999999523163,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.21999999880791,
["cooldown"] = 0.5,
["frequency"] = 3.3099999427795,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1999999284744,
["scale_upY"] = 1.2999999523163,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.21999999880791,
["cooldown"] = 0.5,
["frequency"] = 3.3099999427795,
},
},
[27285] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1,
["scale_upY"] = 1.1,
["scale_downX"] = 0.9,
["scale_downY"] = 0.9,
["duration"] = 0.075,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1,
["scale_upY"] = 1.1,
["scale_downX"] = 0.9,
["scale_downY"] = 0.9,
["duration"] = 0.075,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[185438] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.19999998807907,
["absolute_sineX"] = false,
["scaleY"] = -1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 6.460000038147,
["fade_in"] = 0,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.19999998807907,
["absolute_sineX"] = false,
["scaleY"] = -1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 6.460000038147,
["fade_in"] = 0,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[199804] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 0.88999938964844,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.1699999570847,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.19999998807907,
["cooldown"] = 0.5,
["frequency"] = 23.525676727295,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0499999523163,
["scale_upY"] = 1.0499999523163,
["scale_downX"] = 1,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[185763] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.25999999046326,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 3.6583230495453,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.15999999642372,
["cooldown"] = 0.5,
["frequency"] = 23.525663375854,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.25999999046326,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 3.6583230495453,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.15999999642372,
["cooldown"] = 0.5,
["frequency"] = 23.525663375854,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[8042] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.05,
["scale_upY"] = 1.05,
["scale_downX"] = 0.95,
["scale_downY"] = 0.95,
["duration"] = 0.060000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["scaleY"] = -1,
["fade_out"] = 0.05,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 7.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.06,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.05,
["scale_upY"] = 1.05,
["scale_downX"] = 0.95,
["scale_downY"] = 0.95,
["duration"] = 0.060000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.05,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 7.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.06,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[32645] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1000000238419,
["scale_upY"] = 1.1999999284744,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 4.0999999046326,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.12000000476837,
["cooldown"] = 0.5,
["frequency"] = 2.6099998950958,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1000000238419,
["scale_upY"] = 1.1999999284744,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 4.0999999046326,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.12000000476837,
["cooldown"] = 0.5,
["frequency"] = 2.6099998950958,
},
},
[264178] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.08,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.25,
["frequency"] = 20,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.08,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.25,
["frequency"] = 20,
},
},
[187874] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.85,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 100,
},
["2"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.85,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 100,
},
},
[257045] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
},
},
["indicator_scale"] = 0.99999994039536,
["extra_icon_timer_decimals"] = true,
["border_color"] = {
nil,
nil,
nil,
1,
},
["focus_color"] = {
nil,
nil,
nil,
0.49306830763817,
},
["indicator_anchor"] = {
["side"] = 6,
["x"] = 2,
},
["hide_name_on_game_objects"] = false,
["health_selection_overlay_alpha"] = 0,
["minor_height_scale"] = 0.99999994039536,
["extra_icon_show_enrage_border"] = {
0.85098039215686,
0,
0.074509803921569,
},
["aura_padding"] = 0,
["indicator_worldboss"] = false,
["auto_inside_raid_dungeon"] = {
["hide_enemy_player_pets"] = true,
["hide_enemy_player_totems"] = true,
},
["hook_data"] = {
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        --Priest\n        [\"Vampiric Touch\"] = 21,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 25,\n        \n        --Rogue\n        [\"Deathstalker's Mark\"] = 102,\n        [\"Marked for Death\"] = 101,\n        [\"Ghostly Strike\"] = 100,\n        [\"Vendetta\"] = 98,\n        [\"Shiv\"] = 97,\n        [\"Flagellation\"] = 96,\n        [\"Garrote\"] = 95,\n        [\"Rupture\"] = 94,\n        [\"Caustic Spatter\"] = 92,\n        [\"Find Weakness\"] = 93,\n        [\"Crimson Tempest\"] = 85,\n        [\"Between the Eyes\"] = 83,\n        [\"Pistol Shot\"] = 82,\n        -- [\"Se\"] =\n        [\"Serrated Bone Spike\"] = 0,\n        \n        --Druid\n        [\"Sunfire\"] = 100,\n        [\"Moonfire\"] = 99,\n        \n        --Monk\n        [\"Mark of the Crane\"] = 59,\n        \n        --Dungeon Debuffs\n        [\"Droman's Wrath\"] = 1001,\n        \n        --Dungeon Buffs\n        [\"Bolstering\"] = 2001,\n        [\"Slime Coated\"] = 2002,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1726954906,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["Enabled"] = true,
["Revision"] = 580,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Aura Reorder - Jundies",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["Enabled"] = true,
["Revision"] = 207,
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["HooksTemp"] = {
},
["Author"] = "�r��ne-Kel'thuzad",
["PlaterCore"] = 1,
["Desc"] = "Adds double arrow as a target indicators option",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- /RELOAD AFTER IMPORTING OR CHANGING THE SCRIPT\n    -- SELECT THE INDICATOR AT THE TARGET TAB\n    \n    Plater.TargetIndicators    [\"Double Arrows\"] = {\n        path = [[Interface\\AddOns\\Plater\\media\\arrow_double_right_64]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 17,\n        height = 13,\n        x = 14,\n        y = 0,\n        blend = \"ADD\",\n        color = \"white\",\n    }    \n    \nend\n\n\n",
},
["Prio"] = 99,
["Time"] = 1726954889,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["Name"] = "Double Arrow Target",
["Url"] = "https://wago.io/f5itAXjQq/1",
["Icon"] = "Interface\\AddOns\\Plater\\media\\arrow_double_right_64",
["Options"] = {
},
},
{
["OptionsValues"] = {
["SPglowfreq"] = 0.59999990463257,
["SPglowxoff"] = 0.5,
["doNotPurge"] = {
},
["SPglowyoff"] = 0.5,
["SPglowcolor"] = {
1,
1,
0.45490199327469,
1,
},
["SPglowparticle"] = 5,
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    local options1 = {\n        glowType = \"button\",\n        frequency = modTable.config.SPglowfreq\n    }\n    \n    local options2 = {\n        glowType = \"pixel\",\n        N = modTable.config.SPglowparticle,\n        frequency = modTable.config.SPglowfreq,\n        length = modTable.config.SPpixellength,\n        th = modTable.config.SPpixelth,\n        xOffset = modTable.config.SPglowxoff,\n        yOffset = modTable.config.SPglowyoff,\n        border = modTable.config.SPpixelborder\n    }\n    \n    local options3 = {\n        glowType = \"ants\",\n        N = modTable.config.SPglowparticle,\n        frequency = modTable.config.SPglowfreq,\n        scale = modTable.config.SPantsscale,\n        xOffset = modTable.config.SPglowxoff,\n        yOffset = modTable.config.SPglowyoff\n    }\n    \n    modTable.options =\n    (modTable.config.SPglownum == 1 and options1) or (modTable.config.SPglownum == 2 and options2) or\n    (modTable.config.SPglownum == 3 and options3)\n    \n    local doNotPurgeList = {\n        [385063] = true, -- Burning Ambition, Ruby Life Pools\n        [392454] = true, -- Burning Veins, Ruby Life Pools\n        [396020] = true, -- Golden Barrier, Temple of the Jade Serpent\n        [383161] = true -- Decay Infusion, Brackenhide Hollow\n    }\n    \n    for _, id in pairs(modTable.config.doNotPurge) do\n        doNotPurgeList[tonumber(id)] = true\n    end\n    \n    modTable.doNotPurge = function(id)\n        return doNotPurgeList[id] ~= nil\n    end\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitFrame.healthBar:IsShown() then\n        return\n    end\n    \n    local buffSpecialGlow = true\n    local color = modTable.config.SPglowcolor\n    \n    -- functions --\n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers[2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        local auraContainer = auraContainers[containerID]\n        \n        for _, auraIcon in ipairs(auraContainer) do\n            if (auraIcon:IsShown() and auraIcon.CanStealOrPurge and not modTable.doNotPurge(auraIcon.SpellId)) then\n                Plater.StartGlow(auraIcon, nil, modTable.options)\n            else\n                Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n            end\n        end\n    end\n    \n    if buffSpecialGlow then\n        for _, auraIcon in ipairs(unitFrame.ExtraIconFrame.IconPool) do\n            if auraIcon:IsShown() then\n                if (auraIcon.canStealOrPurge and not modTable.doNotPurge(auraIcon.SpellId)) then\n                    Plater.StartGlow(auraIcon, nil, modTable.options)\n                else\n                    Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n                end\n            end\n        end\n    end\nend",
},
["Time"] = 1726352819,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 132096,
["Enabled"] = true,
["Revision"] = 1059,
["semver"] = "",
["Author"] = "Viashi-Antonidas",
["Desc"] = "Adds a glow to the aura if you can steal or purge the buff.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Steal/Purge Aura Glow",
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Common Options",
["Name"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "1(Button) / 2(Pixel) / 3(Ants) ",
["Min"] = 1,
["Key"] = "SPglownum",
["Value"] = 2,
["Name"] = "Glow Type",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Set to negative to inverse direction of rotation",
["Min"] = -2,
["Key"] = "SPglowfreq",
["Value"] = 0.5,
["Name"] = "Glow Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "SPglowcolor",
["Value"] = {
1,
1,
0.45490196078431,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Set glow color",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Options for Pixel & Ants Glow",
["Name"] = "Options for Pixel & Ants Glow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "Set number of lines",
["Min"] = 1,
["Key"] = "SPglowparticle",
["Value"] = 6,
["Name"] = "Number of Particles",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Offset of glow relative to region border",
["Min"] = -10,
["Key"] = "SPglowxoff",
["Value"] = 1.2,
["Name"] = "X-Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Offset of glow relative to region border",
["Min"] = -10,
["Key"] = "SPglowyoff",
["Value"] = 1.2,
["Name"] = "Y-Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Options for Pixel Glow",
["Name"] = "Options for Pixel Glow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "SPpixelborder",
["Value"] = false,
["Name"] = "Pixel Add Border",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Enable to true to create border under lines",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "Set pixel line length",
["Min"] = 0.01,
["Key"] = "SPpixellength",
["Value"] = 6,
["Name"] = "Pixel Line Length",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Set pixel line thickness",
["Min"] = 0.01,
["Key"] = "SPpixelth",
["Value"] = 2,
["Name"] = "Pixel Line Thickness",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Options for Ants Glow",
["Name"] = "Options for Ants Glow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 2.5,
["Desc"] = "Set ants glow scale",
["Min"] = 0.01,
["Key"] = "SPantsscale",
["Value"] = 0.8,
["Name"] = "Ants Glow Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 7,
["Key"] = "doNotPurge",
["Value"] = {
},
["Name"] = "Do Not Purge",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "List of spells you may not want to purge for whichever reason",
},
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    function envTable.CheckAggro (unitFrame)\n        --if the player isn't in combat, ignore this check\n        if (not Plater.IsInCombat()) then\n            return\n        end\n        \n        --if this unit is a player, ignore\n        if (UnitPlayerControlled(unitFrame.unit)) then\n            return\n        end\n        \n        --if this unit isn't in combat, ignore\n        if (not unitFrame.InCombat) then\n            return \n        end\n        \n        --player is a tank?\n        if (Plater.PlayerIsTank) then\n            --player isn't tanking this unit?\n            if (not unitFrame.namePlateThreatIsTanking) then\n                --check if a second tank is tanking it\n                if (Plater.ZoneInstanceType == \"raid\") then\n                    --return a list with the name of tanks in the raid\n                    local tankPlayersInTheRaid = Plater.GetTanks()\n                    \n                    --get the target name of this unit\n                    local unitTargetName = UnitName (unitFrame.targetUnitID)\n                    \n                    --check if the unit isn't targeting another tank in the raid and paint the color\n                    if (not tankPlayersInTheRaid [unitTargetName]) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                    else\n                        --another tank is tanking this unit\n                        --do nothing\n                    end\n                    \n                else\n                    Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                end\n            end\n            \n        else\n            --player is a dps or healer\n            if (unitFrame.namePlateThreatIsTanking) then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro)\n            end\n            \n        end        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1726956793,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\checked_64",
["Enabled"] = true,
["Revision"] = 118,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "When a mob is attacking you, force show the threat color. For tanks, force threat color if the mob is not attacking you.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Force Threat Color NPC",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["UID"] = "0x62f9521d664ad",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    if not Plater.AddPerformanceUnits then\n        return\n    end\n    \n    local units = {\n        \n        -- Raids\n        [189706] = true, -- Chaotic Essence\n        [189707] = true, -- Chaotic mote\n        [176920] = true, -- Domination Arrow -- Sylv\n        [196679] = true, -- Frozen Shroud -- Broodkeeper\n        [194999] = true, -- Volatile Spark -- Raszageth\n        [191714] = true, -- Seeking Stormling -- Raszageth\n        [210231] = true, -- Tainted Lasher -- Gnarlroot\n        [211306] = true, -- Fiery vines -- Tindral\n        [219746] = true, --Tomb - Ansurek\n        \n        -- Dungeons\n        [196642] = true, -- Hungry Lasher (Boss add)\n        [197398] = true, -- Hungry Lasher\n        [208994] = true, -- Infected Lasher\n        [189363] = true, -- Infected Lasher\n        [96247] = true, -- Vileshard Crawler\n        [100529] = true, -- Hatespawn Slime\n        [84401] = true, -- Swift Sproutling (boss add)\n        \n        --Testing\n        [198594] = false, -- Testing target dummy\n        [87329] = false, -- testing\n    }\n    \n    for unit, flag in pairs(units) do\n        if flag and modTable.config.performance then\n            Plater.AddPerformanceUnits(unit)\n        else\n            Plater.RemovePerformanceUnits(unit)\n        end\n        if flag and modTable.config.forceBlizz then\n            Plater.AddForceBlizzardNameplateUnits(unit)\n        else\n            Plater.RemoveForceBlizzardNameplateUnits(unit)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1727053490,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
["Enabled"] = true,
["TANK"] = true,
["HEALER"] = true,
["DAMAGER"] = true,
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 458228,
["Enabled"] = true,
["Revision"] = 383,
["semver"] = "",
["Author"] = "Viashi-Argent Dawn",
["Desc"] = "",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 4,
["Key"] = "performance",
["Value"] = true,
["Name"] = "Performance",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "forceBlizz",
["Value"] = false,
["Name"] = "Force Blizzard",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["Name"] = "Performance Units - Jundies",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local vt = Plater.NameplateHasAura(unitFrame, \"Vampiric Touch\")\n    \n    if vt then\n        Plater.SetNameplateColor(unitFrame)\n    else\n        Plater.SetNameplateColor(unitFrame, \"#7FFFD4\")\n        \n        return\n    end\nend",
},
["Time"] = 1727078598,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["PRIEST"] = true,
},
["map_ids"] = {
},
["role"] = {
["Enabled"] = true,
["DAMAGER"] = true,
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 136207,
["Enabled"] = false,
["Revision"] = 103,
["semver"] = "",
["Author"] = "Эллинойз-Ревущий фьорд",
["Desc"] = "Changing Colors on doted targets",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "ShadowDotsColors [Old]",
["LastHookEdited"] = "Nameplate Updated",
["Options"] = {
},
},
{
["OptionsValues"] = {
["colour_names"] = false,
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend",
["Initialization"] = "function(modTable)\n    \n    -- used for nameColouring\n    -- AARRGGBB\n    local markerToHex = {\n        [1] = \"FFEAEA0D\", -- Yellow 5 Point Star\n        [2] = \"FFEAB10D\", -- Orange Circle\n        [3] = \"FFCD00FF\", -- Purple Diamond\n        [4] = \"FF06D425\", -- Green Triangle\n        [5] = \"FFB3E3D8\", -- Light Blue Moon\n        [6] = \"FF0CD2EA\", -- Blue Square\n        [7] = \"FFD6210B\", -- Red Cross\n        [8] = \"FFFFFFFF\", -- White Skull\n    }\n    \n    -- Makes it so you take their first name e.g Jessie Howlis -> Jessie\n    local nameBlacklist = {\n        [\"the\"] = true,\n        [\"of\"] = true,\n        [\"Tentacle\"] = true,\n        [\"Apprentice\"] = true,\n        [\"Denizen\"] = true,\n        [\"Emissary\"] = true,\n        [\"Howlis\"] = true,\n        [\"Terror\"] = true,\n        [\"Totem\"] = true,\n        [\"Waycrest\"] = true,\n        [\"Aspect\"] = true\n    }\n    \n    \n    -- @unitId  unitID for mob e.g nameplate1\n    function modTable.renamer(unitFrame, unitId)\n        \n        if not (unitId and unitFrame) then\n            return\n        end\n        \n        local name = unitFrame.namePlateUnitName or UnitName(unitId) or \"\"\n        \n        -- 1) shorten\n        if modTable.config[\"short_names\"] and not unitFrame.unitName.isRenamed then\n            local unitName\n            local a, b, c, d, e, f = strsplit(' ', name, 5)\n            if nameBlacklist[b] then\n                unitName = a or b or c or d or e or f\n            else\n                unitName = f or e or d or c or b or a\n            end\n            name = unitName or name\n        end -- if short_names\n        \n        \n        -- 2) Coloring\n        if modTable.config[\"colour_names\"] then\n            local marker = GetRaidTargetIndex(unitId)\n            if marker then\n                local color = markerToHex[marker or 8]\n                name = WrapTextInColorCode(name, color)\n            end\n        end\n        \n        -- 3) Apply\n        unitFrame.healthBar.unitName:SetText(name)\n    end -- envTable.namer\n    \nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend\n\n\n\n",
},
["Time"] = 1727078539,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/vmszcNe2o/4",
["Icon"] = "INTERFACE\\ICONS\\Ability_Monk_Ascension",
["Enabled"] = true,
["Revision"] = 307,
["semver"] = "1.0.3",
["Author"] = "Rhk-Tarren Mill",
["Desc"] = "Aimed at making calls in dungeons simpler by using the last name of a mob or first name of certains ones i.e Jessie Howlis -> Jessie",
["Prio"] = 98,
["version"] = 4,
["PlaterCore"] = 1,
["Name"] = "Short Names",
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 4,
["Key"] = "short_names",
["Value"] = true,
["Name"] = "Shorten Names",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Shortens NPC Names. eg.: \"Murkbrine Fishmancer\" -> \"Fishmancer\"",
},
{
["Type"] = 4,
["Key"] = "colour_names",
["Value"] = true,
["Name"] = "Colour by Raidmark",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Colours the Name by the assigned Raidmark. eg.: Triangle --> Green Name",
},
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateBorder (unitFrame, false)\nend\n\n\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    envTable.UpdateBorder (unitFrame, true)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    --self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = Plater.db.profile.castbar_icon_show --true\n    --anchor icon on what side\n    envTable.IconAnchor = \"left\" --accep 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 0\n    envTable.moveCastIcon = not Plater.db.profile.castbar_icon_customization_enabled --false\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = false\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        if not envTable.moveCastIcon then return end\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:ClearAllPoints()\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", 0, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:ClearAllPoints()\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 0, 0)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            \n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"center\", castBar, \"left\", 0, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\n    \n    function envTable.UpdateBorder (unitFrame, casting)\n        local healthBar = unitFrame.healthBar\n        local castBar = unitFrame.castBar\n        --casting = not casting == false or  ((castBar.casting or castBar.channeling) and not (castBar.interrupted or castBar.failed))\n        \n        if casting then\n            if envTable.ShowIcon and castBar.Icon:IsShown() then\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPLEFT\", castBar.Icon, \"TOPLEFT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPRIGHT\", castBar.Icon, \"TOPRIGHT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            else\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            end\n        else\n            if envTable.IconAnchor == \"left\" then\n                healthBar.border:ClearAllPoints()\n                PixelUtil.SetPoint(healthBar.border, \"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                PixelUtil.SetPoint(healthBar.border, \"BOTTOMRIGHT\", healthBar, \"BOTTOMRIGHT\", 0, 0)\n            elseif envTable.IconAnchor == \"right\" then\n                healthBar.border:ClearAllPoints()\n                PixelUtil.SetPoint(healthBar.border, \"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                PixelUtil.SetPoint(healthBar.border, \"BOTTOMLEFT\", healthBar, \"BOTTOMLEFT\", 0, 0) \n            end\n        end\n    end\n    \n    if not unitFrame.castBar.borderChangeHooked then\n        hooksecurefunc(unitFrame.castBar, \"Hide\", function() envTable.UpdateBorder(unitFrame, false) end)\n        unitFrame.castBar.borderChangeHooked = true\n    end\n    \nend",
},
["Time"] = 1726267217,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/mEN8Q6zUa/12",
["Icon"] = "Interface\\Buttons\\UI-Quickslot2",
["Enabled"] = true,
["Revision"] = 510,
["semver"] = "1.0.11",
["Author"] = "Viash-Thrall",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate and extend the border around icon + cast bar.",
["Prio"] = 99,
["version"] = 12,
["PlaterCore"] = 1,
["Name"] = "Cast Icon Anchor + Border",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.healthBar.ttdTextFrame:SetText(\"\")\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateUnit(unitId, unitFrame.namePlateNpcId)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateUnit(unitId)\nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    -- Credit to Aethys for the algorithm: https://github.com/herotc/hero-lib\n    \n    --general settings:\n    envTable.onlyShowOnBoss = false\n    envTable.includeShields = true\n    \n    --custom health% for specific units:\n    envTable.customPercent = {\n        --Dawnbreaker \n        [213937] = 59.5, --Rasha'nan\n        --Darkflame Cleft\n        [210797] = 44.5, --The Darkness\n        -- City of Threads\n        [219984] = 50, -- Xeph'itik\n        ----- Shadowlands\n        -- Sanguine Depths\n        [162099] = 50, -- General Kaal\n        --- De Other Side\n        [166608] = 10, --Mueh'Zala\n        --- Mists of Tirna Scithe\n        [164929] = 20, -- Tirnenn Villager\n        [164804] = 20, -- Droman Oulfarran\n        ----- Draenor\n        --- Shadowmoon Burial Ground\n        [76057] = 20.5, -- Carrion Worm\n        ----- Legion\n        -- Halls of Valor\n        [95674] = 60, -- Fenryr P1\n        [95676] = 80, -- Odyn\n        [94960] = 10, -- Hymdall\n        -- Court of Stars\n        [104215] = 20, -- Patrol Captain Gerdo\n        ----- Mists of Pandaria\n        -- Temple of the Jade Serpent\n        [56732] = 30, -- Liu Flameheart,\n        ----- Dragonflight\n        -- Brackenhide Hollow\n        [186121] = 4, -- Decatriarch Wratheye\n        -- Uldaman\n        [184580] = 10, -- Olaf\n        [184581] = 10, -- Baelog\n        [184582] = 10, -- Eric \"The Swift\"\n        [184125] = 1, -- Chrono-Lord Deios,\n        -- Doti lower\n        [198933] = 90, -- Iridikron, technically 85 but you care only until 90\n        [207638] = 80, -- Blight of Galakrond\n        [201792] = 60, -- Ahnzon\n    }\n    \n    -- text settings:\n    local textColor = \"white\"\n    local textSize = 12\n    local textFont = \"2002\"\n    local textOutline = \"NONE\" --\"OUTLINE\"\n    --local textShadowColor = \"green\"\n    \n    -- positioning\n    local anchor = {\n        side = 3, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 2, --x offset\n        y = -3, --y offset\n    }\n    \n    -- TTD calculation config\n    envTable.config = {\n        historyCount = 100,\n        historyTime = 10,\n        duration = 600,\n        pctHP = 0,\n    }\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    --frames:\n    \n    --create the text frame that will show the TTD\n    if not unitFrame.healthBar.ttdTextFrame then\n        envTable.ttdTextFrame = Plater:CreateLabel(unitFrame.healthBar, \"\", textSize, textColor)\n        unitFrame.healthBar.ttdTextFrame = envTable.ttdTextFrame\n        envTable.ttdTextFrame:SetText(\"\")\n    end\n    \n    Plater.SetAnchor(unitFrame.healthBar.ttdTextFrame, anchor)\n    \n    if textFont then\n        DetailsFramework:SetFontFace(unitFrame.healthBar.ttdTextFrame, textFont)\n    end\n    if textSize then\n        DetailsFramework:SetFontSize(unitFrame.healthBar.ttdTextFrame, textSize)\n    end\n    if textOutline then\n        DetailsFramework:SetFontOutline(unitFrame.healthBar.ttdTextFrame, textOutline)\n    end\n    if textColor then\n        local r, g, b, a = DetailsFramework:ParseColors(textColor)\n        unitFrame.healthBar.ttdTextFrame:SetTextColor(r, g, b, a)\n    end\n    if textShadowColor then\n        local r, g, b, a = DetailsFramework:ParseColors(textShadowColor)\n        DetailsFramework:SetFontShadow(unitFrame.healthBar.ttdTextFrame, r, g, b, a, 1, -1)\n    end\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    --functions\n    \n    envTable.cache = {}\n    envTable.units = {}\n    \n    function envTable.TTDRefresh(unit)\n        local currentTime = GetTime()\n        local historyCount = envTable.config.historyCount\n        local historyTime = envTable.config.historyTime\n        \n        if not UnitExists(unit) then\n            return\n        end\n        \n        local GUID = UnitGUID(unit)\n        \n        if not GUID then\n            return\n        end\n        \n        local health = UnitHealth(unit)\n        local maxHealth = UnitHealthMax(unit)\n        local absorbsPercent = 0\n        \n        if UnitGetTotalAbsorbs and envTable.includeShields then\n            local absorbs = UnitGetTotalAbsorbs(unit)\n            health = health + absorbs\n            absorbsPercent = absorbs ~= -1 and maxHealth ~= -1 and absorbs / maxHealth * 100 or 0\n        end\n        \n        local healthPercentage = health ~= -1 and maxHealth ~= -1 and health / maxHealth * 100\n        -- Check if it's a valid unit\n        if UnitCanAttack(\"player\", unit) and healthPercentage < (100 + absorbsPercent) then\n            local unitTable = envTable.units[GUID]\n            -- Check if we have seen one time this unit, if we don't then initialize it.\n            if not unitTable or healthPercentage > unitTable[1][1][2] then\n                unitTable = { {}, currentTime }\n                envTable.units[GUID] = unitTable\n            end\n            \n            local values = unitTable[1]\n            local time = currentTime - unitTable[2]\n            -- Check if the % HP changed since the last check (or if there were none)\n            if #values == 0 or healthPercentage ~= values[1][2] then\n                local value\n                local lastIndex = #envTable.cache\n                -- Check if we can re-use a table from the cache -- Buds: i have doubt on the value of reusing table, with the high cost of tinsert on 1st index\n                if lastIndex == 0 then\n                    value = { time, healthPercentage }\n                else\n                    value = envTable.cache[lastIndex]\n                    envTable.cache[lastIndex] = nil\n                    value[1] = time\n                    value[2] = healthPercentage\n                end\n                table.insert(values, 1, value)\n                local n = #values\n                -- Delete values that are no longer valid\n                while (n > historyCount) or (time - values[n][1] > historyTime) do\n                    envTable.cache[#envTable.cache + 1] = values[n]\n                    values[n] = nil\n                    n = n - 1\n                end\n            end\n        end\n    end\n    \n    function envTable.TimeToX(guid, percentage, minSamples)\n        local seconds = 8888\n        local unitTable = envTable.units[guid]\n        -- Simple linear regression\n        -- ( E(x^2)  E(x) )  ( a )  ( E(xy) )\n        -- ( E(x)     n  )  ( b ) = ( E(y)  )\n        -- Format of the above: ( 2x2 Matrix ) * ( 2x1 Vector ) = ( 2x1 Vector )\n        -- Solve to find a and b, satisfying y = a + bx\n        -- Matrix arithmetic has been expanded and solved to make the following operation as fast as possible\n        if unitTable then\n            local values = unitTable[1]\n            local n = #values\n            if n > minSamples then\n                local a, b = 0, 0\n                local Ex2, Ex, Exy, Ey = 0, 0, 0, 0\n                \n                local value, x, y\n                for i = 1, n do\n                    value = values[i]\n                    x, y = value[1], value[2]\n                    \n                    Ex2 = Ex2 + x * x\n                    Ex = Ex + x\n                    Exy = Exy + x * y\n                    Ey = Ey + y\n                end\n                -- invariant to find matrix inverse\n                local invariant = 1 / (Ex2 * n - Ex * Ex)\n                -- Solve for a and b\n                a = (-Ex * Exy * invariant) + (Ex2 * Ey * invariant)\n                b = (n * Exy * invariant) - (Ex * Ey * invariant)\n                if b ~= 0 then\n                    -- Use best fit line to calculate estimated time to reach target health\n                    seconds = (percentage - a) / b\n                    -- Subtract current time to obtain \"time remaining\"\n                    seconds = math.min(7777, seconds - (GetTime() - unitTable[2]))\n                    if seconds < 0 then\n                        seconds = 9999\n                    end\n                end\n            end\n        end\n        \n        return seconds\n    end\n    \n    function envTable.updateUnit(unitId, npcId)\n        if UnitExists(unitId) and (not envTable.onlyShowOnBoss or UnitLevel(unitId) == -1) then\n            envTable.TTDRefresh(unitId)\n            local GUID = UnitGUID(unitId)\n            local customPercent = envTable.customPercent[npcId] or nil\n            envTable.TTD = envTable.TimeToX(GUID, customPercent or envTable.config.pctHP, 3)\n            if envTable.TTD < 7777 and envTable.TTD < envTable.config.duration then\n                envTable.show = true\n                envTable.updateText()\n            end\n        end\n    end\n    \n    function envTable.updateText()\n        ---@type string|number\n        local ret = \"\"\n        \n        local number = envTable.TTD\n        \n        if not number or number == 0 or not envTable.show then\n            unitFrame.healthBar.ttdTextFrame:SetText(\"\")\n            return\n        end\n        \n        local H = floor(number / 3600)\n        local M = floor((number - (floor(number / 3600) * 3600)) / 60)\n        local S = number - math.floor(number / 60) * 60\n        if H > 0 then\n            ret = (\"%02d:%02d:%02d\"):format(H, M, S)\n        elseif M > 0 then\n            ret = (\"%02d:%02d\"):format(M, S)\n        else\n            ret = floor(S)\n        end\n        \n        unitFrame.healthBar.ttdTextFrame:SetText(ret)\n    end\nend",
},
["Time"] = 1726956727,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 2125377,
["Enabled"] = false,
["Revision"] = 210,
["semver"] = "",
["Author"] = "Viash-Thrall",
["Desc"] = "",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Time to Die (TTD)",
["LastHookEdited"] = "Nameplate Updated",
["Options"] = {
},
},
{
["OptionsValues"] = {
["lowScale"] = 0.79999995231628,
["midScale"] = 0.89999997615814,
},
["HooksTemp"] = {
},
["UID"] = "0x6366dbeb1fda6285",
["Hooks"] = {
["Leave Combat"] = "function (_, unitId, unitFrame, _, modTable)\n    -- do nothing while spiteful is disabled\n    -- when updating this, also update Init and Nameplate Updated\n    \n    if not modTable.config.scale then\n        return\n    end\n    \n    local npcID = unitFrame.namePlateNpcId or modTable.parseGUID(unitId)\n    \n    if not npcID or not modTable.isSpiteful(npcID) then\n        return\n    end\n    \n    Plater.SetNameplateScale(\n        unitFrame,\n        modTable.spitefulTargetsPlayer(unitId) and modTable.config.higherScale or modTable.config.extraLowScale\n    )\nend",
["Nameplate Updated"] = "function (_, unitId, unitFrame, _, modTable)\n    -- do nothing while spiteful is disabled\n    -- when updating this, also update Init and Leave Combat\n    \n    if not modTable.config.scale then\n        return\n    end\n    \n    local npcID = unitFrame.namePlateNpcId or modTable.parseGUID(unitId)\n    \n    if not npcID or not modTable.isSpiteful(npcID) then\n        return\n    end\n    \n    Plater.SetNameplateScale(\n        unitFrame,\n        modTable.spitefulTargetsPlayer(unitId) and modTable.config.higherScale or modTable.config.extraLowScale\n    )\nend",
["Initialization"] = "function (modTable)\n    local medium = modTable.config.midScale -- 0.90\n    local small = modTable.config.lowScale -- 0.80\n    local extrasmall = modTable.config.extraLowScale -- 0.70,\n    local larger = modTable.config.higherScale -- 1.1\n    \n    --[[\n    GUIDELINES\n    - use LARGER for enemies with great situational importance that need extra attention\n        ex: totems at the end of Stonevault, Spiteful targeting you\n    - use MEDIUM for enemies that do little to nothing but melee the tank and have average health\n        OR casters without mandatory kick\n        ex: Patchwerk Soldier, Necrotic Wake | Tainted Lashers, Gnarlroot\n        ex: Primalist Galesinger, Halls of Infusion\n    - use SMALL for enemies that do nothing but melee the tank and have less than average health\n        -- ex: Jagged Hound, Waycrest Manor\n    - use EXTRA SMALL for enemies that do nothing at all AND/OR there's so many on the screen, you have no choice\n        ex: Fiery Vines, Tindral | Hungry Lashers, Academy\n    ]]\n    --\n    \n    modTable.npcIDs = {}\n    \n    local test = {\n        --[87329] = extrasmall, -- test dummy    \n    }\n    -- raids\n    local nerubarPalace = {\n        [219739] = small, -- Infested Spawn\n        --[220626] = small, -- Blood Parasite - \n        [223674] = small, --Skitterer - Ansurek\n        [219746] = small, -- Tomb - Ansurek\n        [221344] = medium, -- Gloom Hatchling - Ansurek\n    }\n    local amirdrassil = {\n        [210231] = medium, -- Tainted Lasher, Gnarlroot\n        [211306] = extrasmall, -- Fiery Vines, Tindral\n    }\n    local vault = {\n        [194991] = medium, -- Oathsworn Vanguard\n        [191714] = small, -- Seeking Stormling\n    }\n    local sepulcher = {\n        [183669] = small, -- Fiendish Soul\n    }\n    local nathria = {\n        [169925] = small, -- Begrudging Waiter\n    }\n    \n    -- War Within dungeons\n    \n    local prioryOfTheSacredFlame = {\n        [212838] = small, --Arathi Neophyte\n        [207943] = small, --Arathi Neophyte\n    }\n    \n    local darkflameCleft = {\n        [210148] = small, -- Menial Laborer\n        [210810] = small, -- Menial Laborer\n        [208457] = small, -- Skittering Darkness\n    }\n    \n    local cinderbrewMeadery = {\n        [217126] = extrasmall, --Over-indulged Patron\n        [214668] = small, -- Patron\n        [218865] = small, --Bee-let\n        [210270] = small, --Brew Drop\n        [223562] = small, --Brew Drop #2\n    }\n    \n    local stoneVault = {\n        [214287] = larger, --Earth Burst Totem\n    }\n    \n    local araKara = {\n        [216336] = medium, --Ravenous Crawler\n        [216341] = medium, --Jabbing Flyer\n        [218325] = small, --Swarming Flyer\n        [216337] = small, --Bloodworker\n    }\n    \n    local cityOfThreads = {\n        [220199] = small, --Battle Scarab\n        [216363] = medium, --Reenforced drone\n        [216365] = medium, --Carrier\n        [223357] = medium, --Conscript\n        [216329] = small, --Droplet\n        [220065] = small, --Umbral Weave\n        [222700] = small, --Umbral Weave\n        [219198] = medium, --Ravenous Scarab\n    }\n    \n    local theDawnbreaker = {\n        --[225601] = extrasmall, --Webbed Victim\n        [224616] = small, --Animated Shadow\n    }\n    \n    -- DF Dungeons\n    \n    local murozondsRise = {\n        [205151] = small, -- Tyr's Vanguard\n    }\n    \n    local galakrondsFall = {\n        [204536] = extrasmall, -- Blight Chunk\n        [206065] = extrasmall, -- Interval\n    }\n    \n    local hallsOfInfusion = {\n        [190923] = small, -- Zephyrling\n    }\n    \n    local neltharus = {\n        [192781] = small, -- Ore Elemental\n        [194389] = small, -- Lava Spawn\n    }\n    \n    local uldaman = {\n        [184134] = small, -- Scavenging Leaper\n        [186696] = larger, -- Quaking Totem\n    }\n    \n    local brackenhideHollow = {\n        [189299] = small, -- Decaying Slime\n        [192481] = small, -- Decaying Slime (boss adds)\n        [194330] = small, -- Decaying Slime (from big slime split)\n        [199916] = small, -- Decaying Slime\n        [194273] = small, -- Witherling\n        [187238] = small, -- Witherling\n        [189363] = extrasmall, -- Infected Lasher\n        [208994] = extrasmall, -- Infected Lasher\n        [194373] = small, -- Witherling\n        [190381] = larger, -- Rotburst Totem\n    }\n    \n    local algetharAcademy = {\n        [196642] = extrasmall, -- Hungry Lasher\n        [197398] = extrasmall, -- Hungry Lasher\n        [192329] = small, -- Territorial Eagle\n        [196694] = medium, -- Arcane Forager\n    }\n    \n    local azureVault = {\n        [191313] = extrasmall, -- Bubbling Sapling\n        [196559] = extrasmall, -- Volatile Sapling\n        [187246] = medium, -- Nullmagic Hornswog\n        [187242] = medium, -- Tarasek Looter\n        [187159] = small, -- Whelp\n    }\n    \n    local rubyLifePools = {\n        [189893] = extrasmall, -- Infused Whelp\n        [187894] = extrasmall, -- Infused Whelp\n        [194622] = extrasmall, -- Scorchling\n        [190205] = extrasmall, -- Scorchling\n        [197509] = extrasmall, -- Primal Thundercloud\n    }\n    \n    local nokhudOffensive = {\n        [195855] = small, -- Risen Warrior\n        [195875] = small, -- Desecrated Bakar\n        [196645] = small, -- Desecrated Bakar\n    }\n    \n    -- Shadowlands Dungeons\n    \n    local tazavesh = {\n        [178163] = small, -- Murkbrine Shorerunner\n    }\n    \n    local theaterOfPain = {\n        [163089] = small, -- Disgusting Refuse\n    }\n    \n    local necroticWake = {\n        [166264] = small, -- Spare Parts\n        [166266] = small, -- Spare Parts #2\n        [171500] = small, -- Shuffling Corpse\n        [165138] = small, -- Blight bag\n        [162729] = medium, -- Patchwerk Soldier\n    }\n    \n    local mistsOfTirnaScithe = {\n        [165111] = medium, -- Drust Spiteclaw\n        [167117] = small, -- Larva\n    }\n    \n    local hallsOfAtonement = {\n        [167892] = medium, -- Tormented Soul\n    }\n    \n    local deOtherSide = {\n        [168986] = small, -- Skeletal Raptor\n    }\n    \n    local plaguefall = {\n        [168969] = small, -- Gushing Slime\n    }\n    \n    local sanguineDepths = {\n        [171455] = small, -- Stonewall Gargon\n        [168457] = small, -- Stonewall Gargon\n        [166589] = small, -- Animate Weapon\n    }\n    \n    --BFA Dungeons\n    \n    local mechagon = {\n        [144300] = small, -- Mechagon Citizen\n    }\n    \n    local siegeOfBoralus = {\n        [133990] = medium, -- Scrimshaw Gutter\n        [138002] = medium, -- Scrimshaw Gutter\n        [135258] = medium, -- Curseblade\n    }\n    \n    local atalDazar = {\n        [128435] = extrasmall, -- saurid\n    }\n    \n    local waycrestManor = {\n        [131669] = small, -- Jagged Hound\n    }\n    \n    local underrot = {\n        [131402] = extrasmall, -- Underrot Tick\n    }\n    \n    local freehold = {\n        [130024] = small, -- Soggy Shiprat\n    }\n    \n    -- Legion Dungeons\n    \n    local hallsOfValor = {\n        [97087] = medium, -- Valajar Champion\n        [96640] = medium, -- Valajar Marksman\n        [99922] = small, -- Ebonclaw Packmate\n        [96608] = medium, -- Ebonclaw Worg\n        [96609] = medium, -- Gildedfur Stag\n    }\n    \n    local darkheartThicket = {\n        [100529] = small, -- Hatespawn Slime\n        [101074] = small, -- Hatespawn Whelpling\n        [100991] = small, -- Strangling Roots\n        [107288] = small, -- Vilethorn Sapling\n    }\n    \n    local blackRookHold = {\n        [98677] = small, -- Rook Spiderling\n        [98900] = medium, -- Wyrmtongue Trickster\n        [102781] = extrasmall, -- Fel Bat Pup\n    }\n    \n    local courtOfStars = {\n        [105703] = small, -- Mana Wyrm,\n        [104295] = small, -- Blazing Imp\n    }\n    \n    local neltharionsLair = {\n        [96247] = extrasmall, -- Vileshard Crawler\n        [102430] = small, -- Tarspitter Slug\n    }\n    \n    -- WoD Dungeons\n    \n    local everbloom = {\n        [81864] = small, -- Dreadpetal\n        [84401] = small, -- Swift Sproutling\n    }\n    \n    local shadowmoonBurialGrounds = {\n        [75451] = small, -- Defiled Spirit (non-casting)\n        [77006] = small, -- Corpse Skitterling\n        [76444] = small, -- Subjugated Soul\n    }\n    -- MoP Dungeons\n    local templeOfTheJadeSerpent = {\n        [62358] = small, -- Corrupt Droplet\n        [58319] = small, -- Lesser Sha\n        [59598] = small, -- Lesser Sha\n    }\n    \n    -- Cata Dungeons\n    \n    local throneOfTheTides = {\n        [40923] = extrasmall, -- Unstable Corruption\n    }\n    \n    local vortexPinnacle = {\n        [205326] = medium, -- Gust Soldier\n        [45477] = medium, -- Gust Soldier\n        [45704] = small, -- Lurking Tempest\n        [204337] = small, -- Lurking Tempest\n        [45924] = medium, -- Turbulent Squall\n        [45922] = medium, -- Empyrean Assassin\n        [45926] = medium, -- Servant of Asaad\n        [45932] = small, -- Skyfall Star\n    }\n    \n    local grimBatol = {\n        [224853] = small, -- Hatchling\n        [39388] = medium, -- Boss Hatchling\n    }\n    \n    local misc = {\n        -- Fodder to the Flame demons\n        [169428] = small,\n        [169430] = small,\n        [169429] = small,\n        [169426] = small,\n        [169421] = small,\n        [169425] = small,\n        [168932] = small,\n        -- Misc\n        [189707] = small, -- Chaotic Motes, SL Fated affix\n        [229537] = larger, -- Void Emissary\n        [229296] = small, -- Orb of Ascendance\n    }\n    \n    local maps = {\n        test,\n        prioryOfTheSacredFlame,\n        darkflameCleft,\n        cinderbrewMeadery,\n        theDawnbreaker,\n        stoneVault,\n        amirdrassil,\n        atalDazar,\n        waycrestManor,\n        darkheartThicket,\n        everbloom,\n        blackRookHold,\n        galakrondsFall,\n        throneOfTheTides,\n        templeOfTheJadeSerpent,\n        nokhudOffensive,\n        courtOfStars,\n        shadowmoonBurialGrounds,\n        algetharAcademy,\n        azureVault,\n        hallsOfValor,\n        rubyLifePools,\n        underrot,\n        freehold,\n        neltharionsLair,\n        vortexPinnacle,\n        hallsOfInfusion,\n        neltharus,\n        uldaman,\n        brackenhideHollow,\n        murozondsRise,\n        misc,\n        vault,\n        sepulcher,\n        nathria,\n        nerubarPalace,\n        araKara,\n        cityOfThreads,\n        tazavesh,\n        theaterOfPain,\n        necroticWake,\n        mistsOfTirnaScithe,\n        hallsOfAtonement,\n        deOtherSide,\n        plaguefall,\n        sanguineDepths,\n        grimBatol,\n        siegeOfBoralus,\n        mechagon,\n    }\n    \n    for i = 1, #maps do\n        local map = maps[i]\n        \n        for id, priority in pairs(map) do\n            modTable.npcIDs[id] = priority\n        end\n    end\n    \n    ---@param unit string\n    ---@return number|nil\n    function modTable.parseGUID(unit)\n        local guid = UnitGUID(unit)\n        \n        if not guid then\n            return nil\n        end\n        \n        local id = select(6, strsplit(\"-\", guid))\n        \n        return id and tonumber(id) or nil\n    end\n    \n    -- do nothing while spiteful is disabled\n    -- when updating this, also update Nameplate Updated and Leave Combat\n    \n    ---@param id number\n    ---@return boolean\n    function modTable.isSpiteful(id)\n        return tonumber(id) == 220626 --Blood Parasite\n    end\n    \n    ---@param unitId string\n    ---@return boolean\n    function modTable.spitefulTargetsPlayer(unitId)\n        local targetName = UnitName(unitId .. \"target\")\n        \n        if not targetName then\n            return false\n        end\n        \n        return UnitIsUnit(targetName, \"player\")\n    end\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not modTable.config.scale then\n        return\n    end\n    \n    local npcID = unitFrame.namePlateNpcId or modTable.parseGUID(unitId)\n    \n    if not npcID then\n        return\n    end\n    \n    local scale = modTable.npcIDs[npcID]\n    \n    if scale then\n        Plater.SetNameplateScale(unitFrame, scale)\n    end\nend",
},
["Time"] = 1727078854,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 1041231,
["Enabled"] = true,
["Revision"] = 2234,
["semver"] = "",
["Author"] = "Causese-Valdrakken",
["Desc"] = "Allows you to scale a creatures nameplate based on it's importance in the dungeon.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["LastHookEdited"] = "Initialization",
["Options"] = {
{
["Type"] = 4,
["Key"] = "scale",
["Value"] = true,
["Name"] = "Enable Scaling",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Allows nameplates to scale based on priority.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set scaling value for mid priority.",
["Min"] = 0,
["Key"] = "midScale",
["Value"] = 0.9,
["Name"] = "Mid prio",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set scaling value for low priority.",
["Min"] = 0,
["Key"] = "lowScale",
["Value"] = 0.8,
["Name"] = "Low prio",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set scaling value for extra low scale",
["Min"] = 0,
["Key"] = "extraLowScale",
["Value"] = 0.7,
["Name"] = "Very Low Prio",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Set scaling value for higher priority",
["Min"] = 0,
["Key"] = "higherScale",
["Value"] = 1.1,
["Name"] = "Higher Priority",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["Name"] = "Priority based scaling - Jundies",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    function Plater.UpdateLifePercentText(healthBar, unitId, showHealthAmount, showPercentAmount, showDecimals) -- ~health\n        --get the cached health amount for performance\n        local currentHealth, maxHealth = healthBar.CurrentHealth, healthBar.CurrentHealthMax\n        \n        if showHealthAmount and showPercentAmount then\n            local percent = maxHealth == 0 and 100 or (currentHealth / maxHealth * 100)\n            \n            if showDecimals then\n                if percent < 10 then\n                    healthBar.lifePercent:SetText(Plater.FormatNumber(currentHealth) .. format(\" %.2f%%\", percent))\n                elseif percent < 99.9 then\n                    healthBar.lifePercent:SetText(Plater.FormatNumber(currentHealth) .. format(\" %.1f%%\", percent))\n                else\n                    healthBar.lifePercent:SetText(Plater.FormatNumber(currentHealth) .. \" 100%\")\n                end\n            else\n                healthBar.lifePercent:SetText(Plater.FormatNumber(currentHealth) .. format(\" %d%%\", percent))\n            end\n        elseif showHealthAmount then\n            healthBar.lifePercent:SetText(Plater.FormatNumber(currentHealth))\n        elseif showPercentAmount then\n            local percent = maxHealth == 0 and 100 or (currentHealth / maxHealth * 100)\n            \n            if showDecimals then\n                if percent < 10 then\n                    healthBar.lifePercent:SetText(format(\"%.2f%%\", percent))\n                elseif percent < 99.9 then\n                    healthBar.lifePercent:SetText(format(\"%.1f%%\", percent))\n                else\n                    healthBar.lifePercent:SetText(\"100%\")\n                end\n            else\n                healthBar.lifePercent:SetText(format(\"%d%%\", percent))\n            end\n        else\n            healthBar.lifePercent:SetText(\"\")\n        end\n    end\nend\n\n\n\n\n",
},
["Time"] = 1726954896,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 237031,
["Enabled"] = true,
["Revision"] = 167,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show the total health and percent in the health amount text. See the constructor code to change options.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Health Formatting",
["LastHookEdited"] = "Initialization",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.healthBar.customShieldHookNeedsUpdate = true\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    local hb = unitFrame.healthBar\n    if hb.customShieldHookNeedsUpdate and hb.displayedUnit then\n        hb:UNIT_MAXHEALTH()\n        hb.customShieldHookNeedsUpdate = false\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Initialization"] = "function (modTable)\n    modTable.LibSharedMedia = LibStub:GetLibrary (\"LibSharedMedia-3.0\")\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --Disable for classic\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        function envTable.addHook(unitFrame) end\n        return\n    end\n    \n    --settings: (changing this requires a /reload)\n    local shieldTexture = \"\"\n    --local shieldTexture = \"Details Flat\"\n    local useHalfBar = false --use a \"half bar\" overlay if the health+absorb is > 100% of the health\n    \n    --init\n    local hb = unitFrame.healthBar\n    if shieldTexture and shieldTexture ~= \"\" then\n        local texture = modTable.LibSharedMedia:Fetch(\"statusbar\", shieldTexture)\n        hb.Settings.ShieldIndicatorTexture = texture or [[Interface\\RaidFrame\\Shield-Fill]]\n        hb.shieldAbsorbIndicator:SetTexture(hb.Settings.ShieldIndicatorTexture, true, true)\n    else\n        hb.Settings.ShieldIndicatorTexture = [[Interface\\RaidFrame\\Shield-Fill]]\n        hb.shieldAbsorbIndicator:SetTexture(hb.Settings.ShieldIndicatorTexture, true, true)\n    end\n    \n    -- ensure settings are up to date... workardound till fix in Plater core.\n    unitFrame.healthBar.Settings.ShowShields = Plater.db.profile.show_shield_prediction\n    \n    -- overwrite UpdateHealPrediction on the healthBar\n    function envTable.addHook(unitFrame)\n        if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n            return\n        end\n        local hb = unitFrame.healthBar\n        \n        if hb.isCustomShieldHook then\n            return\n        end\n        --health and absorbs prediction from Plater core, reworked to integrate shields into the health bar\n        hb.UpdateHealPrediction = function(self)\n            local currentHealth = self.currentHealth\n            local currentHealthMax = self.currentHealthMax\n            local healthPercent = currentHealth / currentHealthMax\n            \n            if not currentHealthMax or currentHealthMax <= 0 then\n                return\n            end\n            \n            --order is: the health of the unit > damage absorb > heal absorb > incoming heal\n            local width = self:GetWidth()\n            \n            hb.shieldAbsorbIndicator:Hide()\n            hb.shieldAbsorbGlow:Hide()\n            \n            if not self.displayedUnit then\n                return\n            end\n            \n            if self.Settings.ShowHealingPrediction then\n                --incoming heal on the unit from all sources\n                local unitHealIncoming = UnitGetIncomingHeals(self.displayedUnit) or 0\n                --heal absorbs\n                local unitHealAbsorb = UnitGetTotalHealAbsorbs(self.displayedUnit) or 0\n                \n                if unitHealIncoming > 0 then\n                    --calculate what is the percent of health incoming based on the max health the player has\n                    local incomingPercent = unitHealIncoming / currentHealthMax\n                    self.incomingHealIndicator:Show()\n                    self.incomingHealIndicator:SetWidth(\n                        max(1, min(width * incomingPercent, abs(healthPercent - 1) * width))\n                    )\n                    self.incomingHealIndicator:SetPoint(\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                    self.incomingHealIndicator:SetPoint(\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                else\n                    self.incomingHealIndicator:Hide()\n                end\n                \n                if unitHealAbsorb > 0 then\n                    local healAbsorbPercent = unitHealAbsorb / currentHealthMax\n                    self.healAbsorbIndicator:Show()\n                    self.healAbsorbIndicator:SetWidth(\n                        max(1, min(width * healAbsorbPercent, abs(healthPercent - 1) * width))\n                    )\n                    self.healAbsorbIndicator:SetPoint(\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                    self.healAbsorbIndicator:SetPoint(\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                else\n                    self.healAbsorbIndicator:Hide()\n                end\n            end\n            \n            if self.Settings.ShowShields then\n                --damage absorbs\n                local unitDamageAbsorb = UnitGetTotalAbsorbs(self.displayedUnit) or 0\n                self.currentAbsorb = unitDamageAbsorb\n                \n                if unitDamageAbsorb > 0 then\n                    local curHealthTotal = unitDamageAbsorb + currentHealth\n                    local damageAbsorbPercent\n                    local healthPercentAbsorb\n                    local isHalfBar = false\n                    if curHealthTotal > currentHealthMax then\n                        if useHalfBar then\n                            damageAbsorbPercent = unitDamageAbsorb / currentHealthMax\n                            if damageAbsorbPercent > 1 then\n                                damageAbsorbPercent = 1 -- just limit it to the healthbar width...\n                            end\n                            healthPercentAbsorb = 1 - damageAbsorbPercent\n                            self:SetMinMaxValues(0, currentHealthMax)\n                            \n                            isHalfBar = true\n                        else\n                            damageAbsorbPercent = unitDamageAbsorb / curHealthTotal\n                            healthPercentAbsorb = currentHealth / curHealthTotal\n                            self:SetMinMaxValues(0, curHealthTotal)\n                        end\n                    else\n                        damageAbsorbPercent = unitDamageAbsorb / currentHealthMax\n                        healthPercentAbsorb = currentHealth / currentHealthMax\n                        self:SetMinMaxValues(0, currentHealthMax)\n                    end\n                    --print(healthPercentAbsorb, currentHealth, unitDamageAbsorb, damageAbsorbPercent)\n                    \n                    self.shieldAbsorbIndicator:SetWidth(width * damageAbsorbPercent)\n                    self.shieldAbsorbIndicator:SetPoint(\n                        \"topleft\",\n                        self,\n                        \"topleft\",\n                        width * healthPercentAbsorb,\n                        (isHalfBar and (-self:GetHeight() / 2)) or 0\n                    )\n                    self.shieldAbsorbIndicator:SetPoint(\n                        \"bottomleft\",\n                        self,\n                        \"bottomleft\",\n                        width * healthPercentAbsorb,\n                        0\n                    )\n                    \n                    self.shieldAbsorbIndicator:Show()\n                else\n                    self.shieldAbsorbIndicator:Hide()\n                end\n            end\n            \n            hb.isCustomShieldHook = true\n        end\n        \n        if hb.displayedUnit then\n            hb.shieldAbsorbIndicator:Hide()\n            hb.shieldAbsorbGlow:Hide()\n            hb:UNIT_MAXHEALTH()\n        else\n            hb.customShieldHookNeedsUpdate = true\n        end\n    end\nend",
},
["Time"] = 1726955149,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 135940,
["Enabled"] = true,
["Revision"] = 1263,
["semver"] = "",
["Author"] = "Elaiana-Proudmoore",
["Desc"] = "Adds absorbs to the health bar as full health value.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Absorb Shields in Healthbar",
["LastHookEdited"] = "Constructor",
["Options"] = {
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Options For @scriptname",
["Name"] = "Options Intro",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = "",
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
},
{
["OptionsValues"] = {
["nameColor"] = {
0,
1,
0.011764707043767,
1,
},
["useNameplateColor"] = false,
["useNameColor"] = true,
["borderColor"] = {
0,
1,
0.011764707043767,
1,
},
},
["HooksTemp"] = {
},
["UID"] = "0x669ff67a1d2afb0",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.maybeUpdateColor(unitFrame)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.maybeUpdateColor(unitFrame)\nend",
["Initialization"] = "function (modTable)\n    -- Populated with root immune npcIds from MDT.\n    local immuneMap = {\n        -- not stun immune in MDT\n        [205408] = true, -- Infinite Timeslicer\n    }\n    \n    local hasMDT = false\n    \n    if MDT and MDT.dungeonEnemies then\n        hasMDT = true\n        \n        for _, dungeon in pairs(MDT.dungeonEnemies) do\n            for _, npc in pairs(dungeon) do\n                if npc.characteristics and npc.characteristics and not npc.characteristics[\"Stun\"] then\n                    immuneMap[npc.id] = true\n                end\n            end\n        end\n    end\n    \n    function modTable.maybeUpdateColor(unitFrame)\n        if not hasMDT then\n            return\n        end\n        \n        if immuneMap[unitFrame.namePlateNpcId] == nil then\n            return\n        end\n        \n        if modTable.config.useNameplateColor then\n            Plater.SetNameplateColor(unitFrame, modTable.config.healthBarColor)\n            Plater.DenyColorChange(unitFrame, true)\n        end\n        \n        if modTable.config.useBorderColor then\n            Plater.SetBorderColor(unitFrame, modTable.config.borderColor)\n            Plater.DenyColorChange(unitFrame, true)\n        end\n        \n        if modTable.config.useNameColor then\n            Plater:SetFontColor(unitFrame.unitName, modTable.config.nameColor)\n            Plater.DenyColorChange(unitFrame, true)\n        end\n    end\nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.maybeUpdateColor(unitFrame)\nend",
},
["Time"] = 1724700828,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
["Enabled"] = true,
["64"] = true,
},
},
["url"] = "",
["Icon"] = 135848,
["Enabled"] = false,
["Revision"] = 617,
["semver"] = "",
["Author"] = "Aparratchic-Ragnaros",
["Desc"] = "",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Activate Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
0,
0.34117648005486,
1,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useBorderColor",
["Value"] = false,
["Name"] = "Activate Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "borderColor",
["Value"] = {
0,
1,
0.011764707043767,
1,
},
["Name"] = "Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useNameColor",
["Value"] = false,
["Name"] = "Activate Name Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "nameColor",
["Value"] = {
0,
1,
0.26666668057442,
1,
},
["Name"] = "Name Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["Name"] = "Freeze Immune NPC's [MDT]",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    envTable.color = \"#5d00ff\"\n    \n    envTable.npcs = {\n        [61056] = \"Greater Earth Elemental\",\n        [61146] = \"Black Ox Statue\",\n        [95072] = \"Earth Elemental\",\n        [103822] = \"Treant\"\n    }\n    \n    envTable.rules = {\n        [\"Pet\"] = true,\n        [\"Creature\"] = function(npcID)\n            return (envTable.npcs[npcID] ~= nil)\n        end\n    }\n    \n    envTable.getTypeAndID = function(guid)\n        local unitType, _, _, _, _, npcID = strsplit(\"-\", guid)\n        return unitType, tonumber(npcID or \"0\") or 0\n    end\n    \n    envTable.shallHighlight = function(self, guid)\n        local unitType, npcID = envTable.getTypeAndID(guid)\n        if unitType then\n            local value = envTable.rules[unitType]\n            if value then\n                if type(value) == \"boolean\" then\n                    return value\n                elseif type(value) == \"function\" then\n                    return value(npcID)\n                end\n            end -- value\n        end -- unitType\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)    \n    local inCombat = self.InCombat\n    local isTanking = self.namePlateThreatIsTanking\n    local isTapDenied = UnitIsTapDenied(unitId)\n    \n    if inCombat and not isTanking and not isTapDenied then\n        local exists = UnitExists(self.targetUnitID)\n        if exists then\n            local role = UnitGroupRolesAssigned(self.targetUnitID)\n            local isTank = (role == \"TANK\")\n            \n            if not isTank then\n                local guid = UnitGUID(self.targetUnitID)\n                if envTable.shallHighlight(self, guid) then\n                    Plater.SetNameplateColor(unitFrame, envTable.color)\n                end\n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1726865575,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
["Enabled"] = true,
["TANK"] = true,
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/ZqU9hBu43/3",
["Icon"] = 627607,
["Enabled"] = true,
["Revision"] = 114,
["semver"] = "1.0.2",
["Author"] = "Brewdux-Tarren Mill",
["Desc"] = "Recolors the nameplate, if you the unit is tanked by a pet.",
["Prio"] = 99,
["version"] = 3,
["PlaterCore"] = 1,
["Name"] = "Pet Threat Highlighter",
["LastHookEdited"] = "Constructor",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    if unitFrame.healthBar.questProgressTextFrame then\n        unitFrame.healthBar.questProgressTextFrame:SetText(\"\")\n    end\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateText(unitFrame)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateText(unitFrame)\nend",
["Constructor"] = "function(self, unitId, unitFrame, envTable)\n    local textColor = \"orange\"\n    local textSize = 12\n    \n    -- positioning\n    local anchor = {\n        side = 2, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = -15, --x offset\n        y = 0, --y offset\n    }\n    \n    function envTable.updateText(unitFrame)\n        if not unitFrame or not unitFrame.namePlateIsQuestObjective or not unitFrame.QuestAmountCurrent then\n            if unitFrame.healthBar.questProgressTextFrame and unitFrame.healthBar.questProgressTextFrame:IsShown() then\n                unitFrame.healthBar.questProgressTextFrame:Hide()\n            end\n            \n            return\n        end\n        \n        local text = unitFrame.QuestAmountTotal and unitFrame.QuestAmountTotal - unitFrame.QuestAmountCurrent\n        or unitFrame.QuestAmountCurrent .. \"%\"\n        \n        local currentText = unitFrame.healthBar.questProgressTextFrame\n        and unitFrame.healthBar.questProgressTextFrame:GetText()\n        or nil\n        \n        if currentText == text then\n            return\n        end\n        \n        --create the text frame that will show the quest progress\n        if not unitFrame.healthBar.questProgressTextFrame then\n            envTable.questProgressTextFrame = Plater:CreateLabel(unitFrame.healthBar, \"\", textSize, textColor)\n            Plater.SetAnchor(envTable.questProgressTextFrame, anchor)\n            unitFrame.healthBar.questProgressTextFrame = envTable.questProgressTextFrame\n        end\n        \n        if not unitFrame.healthBar.questProgressTextFrame:IsVisible() then\n            unitFrame.healthBar.questProgressTextFrame:Show()\n        end\n        \n        unitFrame.healthBar.questProgressTextFrame:SetText(text)\n    end\nend",
},
["Time"] = 1726955721,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "236671",
["Enabled"] = true,
["Revision"] = 368,
["semver"] = "",
["Author"] = "Viashi-Antonidas",
["Desc"] = "Adds a text indicator for quest progress to show how many times the objective has to be completed.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "QuestProgress",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
["targetColor"] = {
1,
1,
1,
1,
},
},
["HooksTemp"] = {
},
["UID"] = "0x669565071fdad90",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local targetBorderColor = modTable.config.targetColor\n    local focusBorderColor = modTable.config.focusColor\n    \n    modTable.target = nil\n    modTable.focus = nil\n    \n    local function holdsSameColor(frame, nextColor)\n        local currentR, currentG, currentB, currentA =\n        unpack(frame.customBorderColor and frame.customBorderColor or Plater.db.profile.border_color)\n        local nextR, nextG, nextB, nextA = unpack(nextColor or Plater.db.profile.border_color)\n        \n        return currentR == nextR and currentG == nextG and currentB == nextB and currentA == nextA\n    end\n    \n    function envTable.updateBorderColor(frame)\n        if unitFrame.namePlateIsTarget then\n            if holdsSameColor(unitFrame, targetBorderColor) then\n                return\n            end\n            \n            Plater.SetBorderColor(unitFrame, targetBorderColor)\n            modTable.target = unitFrame\n        elseif unitFrame.IsFocus then\n            if holdsSameColor(unitFrame, focusBorderColor) then\n                return\n            end\n            \n            Plater.SetBorderColor(unitFrame, focusBorderColor)\n            modTable.focus = unitFrame\n        else\n            if not UnitExists(\"target\") then\n                modTable.target = nil\n            end\n            \n            if not UnitExists(\"focus\") or UnitIsFriend(\"focus\", \"player\") then\n                modTable.focus = nil\n            else\n                local plate = C_NamePlate.GetNamePlateForUnit(\"focus\")\n                \n                if plate and plate.unitFrame then\n                    modTable.focus = plate.unitFrame\n                end\n            end\n            \n            if modTable.target ~= unitFrame and modTable.focus ~= unitFrame and not holdsSameColor(unitFrame) then\n                Plater.SetBorderColor(unitFrame)\n            end\n        end\n    end\nend",
},
["Time"] = 1726956735,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "132212",
["Enabled"] = true,
["Revision"] = 336,
["semver"] = "",
["Author"] = "Xephunt-These Go To Eleven",
["Desc"] = "",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["LastHookEdited"] = "Target Changed",
["Options"] = {
{
["Type"] = 1,
["Key"] = "targetColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Target Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes target border color",
},
{
["Type"] = 1,
["Key"] = "focusColor",
["Value"] = {
0,
1,
0.94117653369904,
1,
},
["Name"] = "Focus Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes Focus border color",
},
},
["Name"] = "Target Border Color",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["UID"] = "0x66e5810079f372",
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.EnhancedCastBar(unitId, unitFrame)\nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable) end",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)    \n    modTable.EnhancedCastBar(unitId, unitFrame)\nend",
["Initialization"] = "function (modTable)\n    modTable.reflectableSpells = {}\n    \n    local playerClass = select(3, UnitClass(\"player\"))\n    \n    ---@param spellId number\n    ---@return number, number, boolean, number\n    local function CompatGetSpellCooldown(spellId)\n        if C_Spell.GetSpellCooldown then\n            local info = C_Spell.GetSpellCooldown(spellId)\n            return info.startTime, info.duration, info.isEnabled, info.modRate\n        end\n        \n        return GetSpellCooldown(spellId)\n    end\n    \n    -- Checks to see if a spell is on cooldown, not counting the 1.5s cooldown from global cooldown.\n    ---@param spellID number\n    ---@return boolean\n    local function IsSpellOnCooldown_IgnoreGCD(spellID)\n        local gcdSTART, gcdDUR = CompatGetSpellCooldown(61304) -- GCD\n        local GCD_expirationTime = gcdSTART + gcdDUR\n        local spellStart, spellDuration = CompatGetSpellCooldown(spellID)\n        local spellReadyTime = spellStart + spellDuration\n        return spellReadyTime > GCD_expirationTime\n    end\n    \n    -- Create a tick if it doesn't already exist. The tick will be used to show when interrupt will be available.\n    local function MaybeCreateTickTexture(castBar)\n        if not castBar.tick then\n            castBar.tick = castBar:CreateTexture(nil, \"overlay\")\n            castBar.tick:SetDrawLayer(\"overlay\", 4)\n            castBar.tick:SetBlendMode(\"DISABLE\")\n            --castBar.tick:SetHeight(castBar:GetHeight())\n            castBar.tick:SetHeight(8)\n            castBar.tick:SetTexture(Plater.SparkTextures[8])\n            castBar.tick:SetWidth(2)\n            castBar.tick:SetVertexColor(Plater:ParseColors(modTable.config.colorTick))\n        end\n    end\n    \n    ---@param unitId string\n    ---@return boolean\n    local function UnitIsStillCasting(unitId)\n        if UnitCastingInfo(unitId) ~= nil then\n            return true\n        end\n        \n        if UnitChannelInfo(unitId) ~= nil then\n            return true\n        end\n        \n        return false\n    end\n    \n    local function DetermineInterruptId()\n        if playerClass == 1 then -- Warrior\n            return function()\n                return 6552 -- Pummel\n            end\n        end\n        \n        if playerClass == 2 then -- Paladin\n            return function()\n                return 96231 -- Rebuke\n            end\n        end\n        \n        if playerClass == 3 then -- Hunter\n            return function()\n                local spec = GetSpecialization()\n                \n                if spec == 3 then -- survival\n                    return 187707 -- muzzle\n                end\n                \n                return 147362 -- counter shot\n            end\n        end\n        \n        if playerClass == 4 then -- rogue\n            return function()\n                return 1766 -- kick\n            end\n        end\n        \n        if playerClass == 5 then -- priest\n            return function()\n                local spec = GetSpecialization()\n                \n                if spec == 3 then -- shadow\n                    return 15487 -- silence\n                end\n                \n                return nil\n            end\n        end\n        \n        if playerClass == 6 then -- death knight\n            return function()\n                return 47528 -- mind freeze\n            end\n        end\n        \n        if playerClass == 7 then -- shaman\n            return function()\n                return 57994\n            end\n        end\n        \n        if playerClass == 8 then -- mage\n            return function()\n                return 2139 -- counterspell\n            end\n        end\n        \n        if playerClass == 9 then -- warlock\n            return function()\n                if IsSpellKnown(89766, true) then -- felguard: axe toss\n                    return 89766\n                end\n                \n                if IsSpellKnown(19647, true) then -- felhunter: spell lock\n                    return 19647\n                end\n                \n                if C_UnitAuras.GetPlayerAuraBySpellID(196099) ~= nil and IsSpellKnown(132409, true) then -- spell lock via grimoire of sacrifice\n                    return 132409\n                end\n                \n                return nil\n            end\n        end\n        \n        if playerClass == 10 then -- monk\n            return function()\n                return 116705 -- spear hand strike\n            end\n        end\n        \n        if playerClass == 11 then -- druid\n            return function()\n                local spec = GetSpecialization()\n                \n                if spec == 1 then -- balance\n                    return 78675 -- soalr beam\n                end\n                \n                return 106839 -- skull bash\n            end\n        end\n        \n        if playerClass == 12 then -- demon hunter\n            return function()\n                return 183752 -- disrupt\n            end\n        end\n        \n        if playerClass == 13 then -- evoker\n            return function()\n                return 351338 -- quell\n            end\n        end\n    end\n    \n    local GetInterruptID = DetermineInterruptId()\n    \n    ---@param unitId string\n    ---@param unitFrame Frame\n    function modTable.EnhancedCastBar(unitId, unitFrame)\n        local castBar = unitFrame.castBar\n        \n        if castBar.tick ~= nil then\n            castBar.tick:Hide()\n        end\n        \n        if castBar.IsInterrupted or castBar.interrupted or not UnitIsStillCasting(unitId) then\n            return\n        end\n        \n        local targetUnitId = unitId .. \"target\"\n        \n        if not UnitExists(targetUnitId) then\n            return\n        end\n        \n        local targetName = UnitName(targetUnitId)\n        local isTargettingMe = targetName == UnitName(\"player\")\n        castBar.Text:SetText(castBar.SpellName)\n        \n        -- Cast is targetting a specific unit\n        if targetName then\n            -- Nameplate flash options\n            if isTargettingMe and modTable.config.nameplateFlash then\n                -- Default value of true since it is turned on in the options\n                local showNameplateFlash = true\n                \n                if\n                modTable.config.hideNameplateFlashSolo\n                and not UnitInParty(\"player\")\n                and not UnitInRaid(\"player\")\n                then\n                    showNameplateFlash = false\n                end\n                \n                if modTable.config.hideFlashAsTank and GetSpecializationRole(GetSpecialization()) == \"TANK\" then\n                    showNameplateFlash = false\n                end\n                \n                -- Show nameplate flash if conditions met\n                if showNameplateFlash then\n                    Plater.FlashNameplateBody(unitFrame)\n                end\n            end\n            \n            -- Target name in cast bar options\n            if modTable.config.showTargetName then\n                if modTable.config.replaceName and isTargettingMe then\n                    targetName = \"Me\"\n                end\n                \n                local castBarWidth = castBar:GetWidth()\n                DetailsFramework:TruncateText(castBar.Text, castBarWidth * (modTable.config.castNameSize / 100))\n                \n                local currentText = castBar.Text:GetText()\n                if currentText ~= nil and currentText ~= \"\" then\n                    local castText = currentText .. \" \" .. Plater.SetTextColorByClass(targetUnitId, targetName)\n                    \n                    if\n                    modTable.config.hideNameSolo\n                    and not UnitInParty(\"player\")\n                    and not UnitInRaid(\"player\")\n                    and isTargettingMe\n                    then\n                        castText = currentText\n                    end\n                    \n                    castBar.Text:SetText(castText)\n                    DetailsFramework:TruncateText(castBar.Text, castBarWidth)\n                end\n            end\n        end\n        \n        if not modTable.config.showInterruptColor then\n            return\n        end\n        \n        -- Interrupt bar color options\n        local canInterrupt = castBar.canInterrupt\n        local castEndTime = castBar.spellEndTime\n        local interruptReadyTime = 0\n        local start\n        local duration\n        local interruptID = GetInterruptID()\n        \n        if interruptID ~= nil then\n            start, duration = CompatGetSpellCooldown(interruptID) --local\n            interruptReadyTime = start + duration\n        end\n        \n        local nextColor = modTable.config.colorProtected\n        \n        if canInterrupt and interruptID ~= nil then\n            local playerIsWarlock = playerClass == 9\n            \n            -- Check to see if the spell is known/talented\n            if IsSpellKnown(interruptID, playerIsWarlock) then\n                if interruptReadyTime == 0 then\n                    nextColor = modTable.config.colorInterruptAvailable\n                elseif\n                modTable.config.showSecondaryInterrupts\n                and playerClass == 2 -- paladin\n                and IsSpellKnown(31935) -- avenger's shield\n                and not IsSpellOnCooldown_IgnoreGCD(31935)\n                then\n                    nextColor = modTable.config.colorSecondaryInterrupt\n                elseif interruptReadyTime < (castEndTime - 0.25) then\n                    MaybeCreateTickTexture(castBar)\n                    castBar.tick:Show()\n                    local tickLocation = (start + duration - castBar.spellStartTime) / castBar.maxValue -- castBar.spellStartTime + 0.25\n                    if castBar.channeling then\n                        tickLocation = 1 - tickLocation\n                    end\n                    castBar.tick:SetPoint(\"center\", castBar, \"left\", tickLocation * castBar:GetWidth(), 0)\n                    \n                    nextColor = modTable.config.colorInterruptSoon\n                elseif interruptReadyTime >= (castEndTime - 0.25) then\n                    nextColor = modTable.config.colorNoInterrupt\n                end\n            else\n                nextColor = modTable.config.colorNoInterrupt\n            end\n        end\n        \n        -- Spell Reflection coloring\n        if\n        modTable.config.showSecondaryInterrupts\n        and isTargettingMe\n        and playerClass == 1\n        and IsSpellKnown(23920) -- spell reflect\n        and not IsSpellOnCooldown_IgnoreGCD(23920)\n        and modTable.reflectableSpells[castBar.SpellID] == true\n        then\n            -- Color the bar if the spell is reflectable\n            nextColor = modTable.config.colorSecondaryInterrupt\n        end\n        \n        local currentR, currentG, currentB, currentA = castBar:GetColor()\n        local nextR, nextG, nextB, nextA = unpack(nextColor)\n        \n        if currentR ~= nextR or currentG ~= nextG or currentB ~= nextB or currentA ~= nextA then\n            Plater.SetCastBarColor(unitFrame, nextColor)\n        end\n    end\n    \n    if playerClass == 1 then\n        --TWW Dungeons \n        local araKara = {\n            436322, -- Poison bolt - atik\n            434786, -- Web bolt\n        }\n        \n        local cityOfThreads = {\n            442536, -- Grimweave Blast\n            443427, -- Web Bolt\n            439341, -- Splice - Izo\n            446717, -- Umbral Weave\n            438860, -- Umbral Weave - Izo\n        }\n        \n        local theDawnbreaker = {\n            428086, -- Shadow bolt\n            451114, -- Congealed Shadow\n            432448, -- Stygian Seed\n            431495, -- Black Edge\n            451113, -- Web Bolt\n            431303, -- Night Bolt\n            431494, -- Black Edge\n        }\n        \n        local theStonevault = {\n            429422, -- Stone Bolt\n            426283, -- Arcing Void\n            429110, --Alloy Bolt\n            429545, -- Censoring Gear\n            459210, -- Shadow Claw\n            430097, -- Molten Metal - Speaker Brokk\n        }\n        \n        local cinderbrewMeadery = {\n            \n        }\n        \n        local darkflameCleft = { \n            \n        }\n        \n        local prioryOfTheSacredFlame = {\n            \n        }\n        \n        local theRookery = {\n            \n        }\n        \n        \n        \n        --DF Dungeons\n        \n        local murozondsRise = {\n            400165, -- Epoch Bolt\n            413607, -- Corroding Volley\n            418202, -- Temporal Blast\n            417030, -- Fireball\n            411763, -- Infinite Blast\n            407121, -- Immolate\n        }\n        \n        local galakrondsFall = {\n            415435, -- Infinite Bolt\n            413590, -- Noxious Ejection\n            411958, -- Stonebolt\n        }\n        \n        local rubyLifePools = {\n            373803, -- Cold Claws boss adds\n            372683, -- Cold Claws trash\n            372808, -- Frigid Shard\n            373693, -- Living Bomb\n            371984, -- Icebolt\n            384197, -- Cinderbolt\n            384194, -- Cinderbolt\n            392576, -- Thunderbolt\n            385310, -- Lightning Bolt\n            385536, -- Flame Dance\n        }\n        \n        local azureVault = {\n            374789, -- Infused Strike\n            373932, -- Illusionary Bolt\n            384978, -- Dragon Strike\n            377503, -- Condensed Frost\n            389804, -- Heavy Tome\n            371306, -- Arcane Bolt\n        }\n        \n        local brackenhideHollow = {\n            382249, -- Earth Bolt\n            381694, -- Decayed Senses\n            378155, -- Earth Bolt (boss)\n            382474, -- Decay Surge\n        }\n        \n        local hallsOfInfusion = {\n            374020, -- Containment Beam\n            389443, -- Purifying Blast\n            374706, -- Pyretic Burst\n            375950, -- Ice Shard\n            385963, -- Frost Shock\n            395690, -- Lightning Blast\n            387504, -- Squall Buffet\n            387571, -- Focused Deluge\n        }\n        \n        local uldaman = {\n            369674, -- Stone Spike\n            369675, -- Chain Lightning\n            372718, -- Earthen Shards\n            369399, -- Stone Bolt\n            369365, -- Curse of Stone\n            377395, -- Time Sink\n        }\n        \n        local neltharus = {\n            378818, -- Magma Conflagration\n            372538, -- Melt\n            383231, -- Lava Bolt\n        }\n        \n        local nokhudOffensive = {\n            387125, -- Thunderstrike\n            387127, -- Chain Lightning\n            386012, -- Stormbolt\n            387613, -- Death Bolt\n            382670, -- Gale Arrow\n            376827, -- Conductive Strike\n            384761, -- Wind Burst\n            396206, -- Storm Shock\n            381530, -- Storm Shock\n        }\n        \n        local algetharAcademy = {\n            388862, -- Surge\n            377991, -- Storm Slash\n            387975, -- Arcane Missiles\n        }\n        \n        --Shadowlands Dungeons\n        \n        local mistsOfTirnaScithe = {\n            332767, --Spirit Bolt\n            323057, --Spirit Bolt - Boss\n            332557, --Soul Split\n            463217, --Anima Slash\n            325223, --Anima Injection\n            332486, --Overgrowth\n        }\n        \n        local theNecroticWake = {\n            328667, --Frostbolt Volley\n            333623, --Frostbolt Volley\n            326574, --Noxious Fog\n            320788, --Frozen Binds\n            322274, --Enfeeble\n            334748, --Drain Fluids\n            320462, --Necrotic Bolt\n            333479, --Spew Disease\n            323347, --Clinging Darkness\n            333602, --Frostbolt\n        }\n        \n        \n        \n        --BFA Dungeons\n        \n        local siegeOfBoralus = {\n            272581, -- Water bolt\n            257063, -- Brackish bolt\n        }\n        \n        local waycrestManor = {\n            265372, -- Shadow Cleave\n            263943, -- Etch\n            264105, -- Runic Mark\n            260701, -- Bramble Bolt\n            260699, -- Soul Bolt\n            260700, -- Ruinous Bolt\n            266036, -- Drain Essence\n            264024, -- Soul Bolt\n            426541, -- Runic Bolt\n            264556, -- Tearing Strike\n            264153, -- Spit\n            278444, -- Infest\n            265881, -- Decaying Touch\n            265880, -- Dread Mark\n            268278, -- Wracking Chord\n            261438, -- Wasting Strike\n            261440, -- Virulent Pathogen\n        }\n        \n        local atalDazar = {\n            253562, -- Wildfire\n            254959, -- Soul Burn\n            252923, -- Venom Blast\n            252687, -- Venomfang Strike\n            250096, -- Wracking Pain\n        }\n        \n        local underrot = {\n            265084, -- Blood Bolt\n            260879, -- Blood Bolt (boss)\n            278961, -- Decaying Mind\n            266265, -- Wicked Embrace\n            272180, -- Void Spit\n        }\n        \n        local freehold = {\n            259092, -- Lightning Bolt\n            257908, -- Oiled Blade\n            281420, -- Water Bolt\n        }\n        \n        \n        --Legion Dungeons\n        \n        local darkheartThicket = {\n            204243, -- Tormenting Eye\n            200238, -- Feed on the Weak\n            200185, -- Nightmare Bolt\n            200684, -- Nightmare Toxin\n            200642, -- Despair\n            201411, -- Firebolt\n            201837, -- Shadow Bolt\n        }\n        \n        local blackRookHold = {\n            199663, -- Soul Blast\n            200248, -- Arcane Blitz\n        }\n        \n        local neltharionsLair = {\n            186269, -- Stone Bolt\n            198496, -- Sunder\n            210150, -- Toxic Retch\n            200732, -- Molten Crash\n        }\n        \n        local hallsOfValor = {\n            198595, -- Thunderous Bolt\n            198962, -- Shattered Rune\n            198959, -- Etch\n            191976, -- Arcing Bolt\n            192288, -- Searing Light\n        }\n        \n        local courtOfStars = {\n            209036, -- Throw Torch\n            209413, -- Suppress\n            211406, -- Firebolt\n            211473, -- Shadow Slash\n            373364, -- Vampiric Claws\n        }\n        \n        \n        --WoD Dungeons\n        \n        local everbloom = {\n            169657, -- Poisonous Claws\n            168040, -- Nature's Wrath\n            168092, -- Water Bolt\n            169840, -- Frostbolt\n            169841, -- Arcane Blast\n            169839, -- Pyroblast\n            427858, -- Fireball\n            164965, -- Choking Vines\n        }\n        \n        local shadowmoonBurialGrounds = {\n            152814, -- Shadow Bolt\n            152819, -- Shadow Word: Frailty\n            156776, -- Rending Voidlash\n            398206, -- Death Blast\n            153067, -- Void Devastation\n            153524, -- Plague Spit\n        }\n        \n        --MoP Dungeons\n        \n        local templeOfTheJadeSerpent = {\n            397888, -- Hydrolance\n            114803, -- Throw Torch\n            114571, -- Agony\n            397914, -- Defiling Mist\n            397931, -- Dark Claw\n            106823, -- Serpent Strike\n        }\n        \n        \n        --Cata Dungeons\n        \n        local throneOfTheTides = {\n            426731, -- Water Bolt\n            428542, -- Crushing Depths\n            426768, -- Lightning Bolt\n            75992, -- Lightning Surge\n            428374, -- Focused Tempest\n            426783, -- Mind Flay\n            429048, -- Flame Shock\n            429173, -- Mind Rot\n            429176, -- Aquablast\n            428526, -- Ink Blast\n            428889, -- Foul Bolt\n        }\n        \n        local vortexPinnacle = {\n            410873, -- Rushing Wind\n            86331, -- Lightning Bolt\n            411019, -- Starlight\n            87762, -- Lightning Lash\n            87622, -- Chain Lightning\n        }\n        \n        local grimBatol = { \n            447966, --Shadowflame bolt (Boss)\n            76369, --Shadowflame bolt (adds)\n            450087, --Depth's Grasp\n            451971, --Lava Fist\n            451241, --Shadowflame Slash\n        }\n        \n        \n        \n        -- Raids\n        local nerubarPalace = {\n            438807, --Vicious Bite - Broodtwister\n            441362, --Volatile Concoction - Broodtwister\n            441772, --Void Bolt - Silken Court\n            438200, --Poison Bolt - Silken Court\n        }\n        \n        local amidrassil = {\n            431302, -- Fyr'alath's Flame, Fyrakk\n            421284, -- Coiling Flames, Volcoross\n        }\n        \n        local aberrus = {\n            403203, -- Flame Slash, Amalgamation Chamber\n            403699, -- Shadow Spike\n            397386, -- Lava Bolt, trash\n            410351, -- Flaming Cudgel, Assault\n        }\n        \n        local vault = {\n            396040, -- Pyroblast, Eranog\n            372394, -- Lightning Bolt, Council\n            372315, -- Frost Spike\n            372275, -- Chain Lightning\n            385812, -- Aerial Slash, Dathea\n            375716, -- Ice Barrage, Diurna\n            385553, -- Storm Bolt\n            375653, -- Static Jolt\n        }\n        \n        local zones = {\n            nerubarPalace,\n            araKara,\n            cityOfThreads,\n            grimBatol,\n            mistsOfTirnaScithe,\n            siegeOfBoralus,\n            theDawnbreaker,\n            theNecroticWake,\n            theStonevault,\n            cinderbrewMeadery,\n            darkflameCleft,\n            prioryOfTheSacredFlame,\n            theRookery,\n            rubyLifePools,\n            azureVault,\n            brackenhideHollow,\n            uldaman,\n            neltharus,\n            algetharAcademy,\n            nokhudOffensive,\n            hallsOfInfusion,\n            darkheartThicket,\n            everbloom,\n            throneOfTheTides,\n            waycrestManor,\n            atalDazar,\n            blackRookHold,\n            vortexPinnacle,\n            underrot,\n            freehold,\n            neltharionsLair,\n            templeOfTheJadeSerpent,\n            courtOfStars,\n            shadowmoonBurialGrounds,\n            hallsOfValor,\n            murozondsRise,\n            galakrondsFall,\n            amidrassil,\n            aberrus,\n            vault,\n        }\n        \n        for i = 1, #zones do\n            local zone = zones[i]\n            \n            for k = 1, #zone do\n                local id = zone[k]\n                modTable.reflectableSpells[id] = true\n            end\n        end\n    end\nend",
["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if unitFrame.castBar.tick then\n        unitFrame.castBar.tick:Hide()\n    end\nend",
},
["Time"] = 1727078625,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 429383,
["Enabled"] = true,
["Revision"] = 1797,
["semver"] = "",
["Author"] = "Nimeshady-Zul'jin",
["Desc"] = "Shows who a cast is targeting in the cast bar as well as other configurable options.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["LastHookEdited"] = "Initialization",
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Feature - Custom cast bar coloring:",
["Name"] = "CUSTOM CAST BAR COLORS",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showInterruptColor",
["Value"] = true,
["Name"] = "Enable custom colored enemy cast bars.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is casting the cast bar will change to the colors below based on the status of you being able to interrupt the cast.",
},
{
["Type"] = 4,
["Key"] = "showSecondaryInterrupts",
["Value"] = true,
["Name"] = "Enable support for secondary interrupts: Avenger's Shield (Paladin), Spell Reflection (Warrior).",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Colors casts that can be reflected with Spell Reflection (Warrior) and interrupted with Avenger's Shield (Paladin).",
},
{
["Type"] = 1,
["Key"] = "colorInterruptAvailable",
["Value"] = {
1,
0.96078437566757,
0.070588238537312,
1,
},
["Name"] = "Color when my primary interrupt is available.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you have an interrupt available to interrupt the current cast.",
},
{
["Type"] = 1,
["Key"] = "colorInterruptSoon",
["Value"] = {
1,
0.96078437566757,
0.070588238537312,
1,
},
["Name"] = "Color when my primary interrupt is down but will be available before cast finishes.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you have an interrupt on cooldown but it will be available to interrupt the current cast.",
},
{
["Type"] = 1,
["Key"] = "colorNoInterrupt",
["Value"] = {
1,
0.49411767721176,
0.13725490868092,
1,
},
["Name"] = "Color when my primary interrupt is unavailable.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you do not have an interrupt available to interrupt the current cast",
},
{
["Type"] = 1,
["Key"] = "colorSecondaryInterrupt",
["Value"] = {
1,
0.0078431377187371,
0.78431379795074,
1,
},
["Name"] = "Color for secondary interrupts. (Avenger's Shield and Spell Reflection)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when the current cast targeting you can be reflected with Spell Reflection or interrupted with Avenger's Shield. Only active when playing the appropriate class with the skill off cooldown.",
},
{
["Type"] = 1,
["Key"] = "colorProtected",
["Value"] = {
0.80784320831299,
0.29411765933037,
0.28627452254295,
1,
},
["Name"] = "Color for casts that are protected/un-interruptable.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when the current cast can not be interrupted by a standard interrupt.",
},
{
["Type"] = 1,
["Key"] = "colorTick",
["Value"] = {
0,
1,
0.0078431377187371,
1,
},
["Name"] = "Color of interrupt available tick. (Hover for more info)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "When your interrupt is currently down but will become available before the current cast completes a tick will appear in the cast bar showing you the exact position in the cast you will be able to interrupt the cast. You can customize the color of the tick using this setting.  YOU MUST /RELOAD YOUR UI AFTER CHANGING THIS COLOR.",
},
{
["Type"] = 5,
["Key"] = "option4",
["Value"] = "Feature - Show name of target in the cast bar:",
["Name"] = "Settings Target Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showTargetName",
["Value"] = true,
["Name"] = "Show the name of cast targets in the cast bar.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is casting a spell at a target, the targets name will appear in the cast bar.",
},
{
["Type"] = 4,
["Key"] = "hideNameSolo",
["Value"] = false,
["Name"] = "Hide my name when not in a party.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When you are not in a party or raid group casts targetting you will not display your name in the cast bar.",
},
{
["Type"] = 4,
["Key"] = "replaceName",
["Value"] = false,
["Name"] = "Show \"Me\" instead of my character name.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When targetted by casts, instead of showing your character name it will show \"Me\".",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "The relative size (in percentage) that a spell name will take up of the cast bar, not including the target name. Adjust this so that target names fit into the cast bar correctly based on the width and text size of your cast bar. If you find even after adjusting this setting that there is not enough space try decreasing your cast bar text size or making the cast bar wider.",
["Min"] = 30,
["Key"] = "castNameSize",
["Value"] = 60,
["Name"] = "Maximum length of a cast name in %. Hover for more info.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 5,
["Key"] = "option8",
["Value"] = "Feature - Flash nameplates when a spell targets you:",
["Name"] = "Settings Border Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Namplate Flash",
},
{
["Type"] = 4,
["Key"] = "nameplateFlash",
["Value"] = false,
["Name"] = "Flash the nameplates of enemies that are casting a spell or ability targeting me.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is targetting you with a cast, this option will flash the nameplate of that enemy to indicate that cast is targeting you.",
},
{
["Type"] = 4,
["Key"] = "hideNameplateFlashSolo",
["Value"] = true,
["Name"] = "Hide flash effect when not in a party.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "The flash effect will be hidden when you are playing solo.",
},
{
["Type"] = 4,
["Key"] = "hideFlashAsTank",
["Value"] = true,
["Name"] = "Hide flash effect when I'm playing a tank specialization.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "The flash effect will be hidden when you are playing as a tank specialization.",
},
},
["Name"] = "Enhanced Castbar - Jundies",
},
},
["last_news_time"] = 1726162226,
["auras_per_row_auto"] = false,
["cast_statusbar_fadeout_time"] = 0.49999997019768,
["aura_stack_size"] = 8,
["auras_per_row_amount2"] = 2,
["disable_omnicc_on_auras"] = true,
["range_check_health_bar_alpha"] = 0.84999996423721,
["bossmod_support_enabled"] = false,
["ghost_auras"] = {
["auras"] = {
["WARLOCK"] = {
{
[980] = true,
[172] = true,
},
},
},
},
["aura_show_crowdcontrol"] = true,
["blizzard_nameplate_large_font_size"] = 9,
["cast_colors"] = {
[358320] = {
false,
"white",
"",
},
},
["extra_icon_timer_outline"] = "OUTLINE",
["aura_border_colors"] = {
["enrage"] = {
0.70196078431373,
0,
0.054901960784314,
},
["steal_or_purge"] = {
nil,
0.92549019607843,
1,
},
["offensive"] = {
nil,
0.65098039215686,
0.10196078431373,
0,
},
["is_show_all"] = {
0.70196080207825,
0.10196079313755,
0.10196079313755,
},
["crowdcontrol"] = {
1,
1,
1,
},
["is_buff"] = {
nil,
0,
0,
},
},
["castbar_target_anchor"] = {
["y"] = -1.5,
["x"] = -13,
},
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
},
["extra_icon_timer_size"] = 11,
["target_highlight_color"] = {
0.9921568627451,
1,
0.97254901960784,
},
["cast_statusbar_color_channeling"] = {
1,
nil,
0.035294119268656,
0.96000000089407,
},
["extra_icon_anchor"] = {
["x"] = -1,
},
["extra_icon_wide_icon"] = false,
["extra_icon_stack_outline"] = "OUTLINE",
["range_check_alpha"] = 0.89999997615814,
["click_space"] = {
141,
21,
},
["extra_icon_auras"] = {
328501,
328986,
204490,
"Rescind",
409463,
"Breath of Eons",
278431,
323059,
438706,
372824,
388523,
114404,
22703,
164275,
77505,
255941,
200672,
377014,
451026,
440179,
456235,
273721,
76151,
},
["castbar_target_font"] = "Expressway",
["semver"] = "5.1.0",
["bossmod_aura_glow_expiring"] = false,
["aura_frame2_anchor"] = {
["y"] = 1.5,
["x"] = -1.1999969482422,
["side"] = 1,
},
["use_name_translit"] = true,
["aura_alpha"] = 1,
["cast_statusbar_spark_texture"] = "Interface\\AddOns\\Plater\\images\\spark2",
["auto_toggle_friendly"] = {
["arena"] = true,
},
["indicator_faction"] = false,
["show_softinteract_icons"] = false,
["extra_icon_height"] = 21,
["aura_x_offset"] = 1.1999969482422,
["first_run3"] = true,
["transparency_behavior"] = 2,
["spell_animations"] = false,
["debuff_show_cc_border"] = {
1,
1,
1,
},
["aura_stack_color"] = {
nil,
0,
0.062745098039216,
},
["aura_consolidate"] = true,
["health_statusbar_bgtexture"] = "Details Flat",
["indicator_raidmark_anchor"] = {
["y"] = 7.8199996948242,
["x"] = 0,
["side"] = 12,
},
["extra_icon_width"] = 22,
["aura_show_enrage"] = true,
["health_statusbar_texture"] = "Details Flat",
["hook_auto_imported"] = {
["Color Automation"] = 1,
["Blockade Encounter"] = 1,
["Cast Bar Icon Config"] = 2,
["Hide Neutral Units"] = 1,
["Aura Reorder"] = 3,
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Bwonsamdi Reaping"] = 1,
["Jaina Encounter"] = 6,
["Execute Range"] = 1,
["Attacking Specific Unit"] = 2,
["Extra Border"] = 2,
["Targetting Alpha"] = 3,
["Target Color"] = 3,
["Combo Points"] = 6,
["Monk Statue"] = 2,
},
["auto_toggle_enemy"] = {
["raid"] = false,
["party"] = false,
["arena"] = false,
["world"] = false,
},
["extra_icon_border_color"] = {
1,
1,
1,
},
["update_throttle"] = 0.33000001311302,
["blizzard_nameplate_large_font"] = "Expressway",
["minor_width_scale"] = 0.99999994039536,
["indicator_elite"] = false,
["extra_icon_show_purge_border"] = {
nil,
0.92549019607843,
},
["show_health_prediction"] = false,
["patch_version"] = 37,
["indicator_pet"] = false,
["extra_icon_stack_size"] = 11,
["aura_frame1_anchor"] = {
["y"] = 1.5,
["x"] = 1.1999969482422,
["side"] = 7,
},
["indicator_rare"] = false,
["tocversion"] = 110002,
["castbar_icon_show"] = false,
["indicator_extra_raidmark"] = false,
["bossmod_castrename_enabled"] = false,
["resources"] = {
["scale"] = 0.75,
["y_offset"] = 51.589996337891,
["y_offset_target"] = 0,
},
["cast_statusbar_bgcolor"] = {
0.21176470588235,
0.21176470588235,
0.21176470588235,
0.90000000596046,
},
["aura_show_debuffs_personal"] = false,
["aura_timer_text_font"] = "Expressway",
["range_check_alpha_friendlies"] = 1,
["extra_icon_timer_font"] = "Expressway",
["aura2_grow_direction"] = 3,
["not_affecting_combat_alpha"] = 1,
["show_healthbars_on_softinteract"] = false,
["cast_statusbar_color_finished"] = {
0.27843137254902,
0.75294117647059,
0.23529411764706,
},
["extra_icon_stack_font"] = "Expressway",
["script_auto_imported"] = {
["Aura - Is Cast Bar [P]"] = 1,
["Relics 9.2 M Dungeons"] = 2,
["Cast - Effect After Cast [P]"] = 2,
["Cast - Circular Swipe"] = 4,
["Aura - Debuff Alert"] = 12,
["Unit - Show Energy"] = 11,
["Blink by Time Left"] = 1,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Ultra Important"] = 14,
["Cast - Shining Green [P]"] = 3,
["Add - Health Markers [P]"] = 3,
["Cast - Small Alert"] = 12,
["Cast - On Going Cast [P]"] = 2,
["Aura - Invalidate Unit"] = 1,
["Add - Important [P]"] = 4,
["Fixate"] = 11,
["Unit - Main Target"] = 11,
["Aura - Blink Time Left"] = 13,
["Cast - Voidzone [P]"] = 2,
["Add - Tag Number [P]"] = 2,
["Unit Power"] = 1,
["Cast - AoE With Range [P]"] = 2,
["Cast - Special Ability [P]"] = 3,
["Cast - Heroic Leap [P]"] = 3,
["Cast - Stop Casting"] = 4,
["Cast - Spark Color [P]"] = 2,
["Cast - Heal Stun [P]"] = 2,
["Cast - Important Target [P]"] = 2,
["Cast - Very Important"] = 15,
["Unit - Important"] = 11,
["Spiteful Affix"] = 3,
["Cast - Quick Flash"] = 2,
["Auto Set Skull"] = 11,
["Cast - Shield Interrupt"] = 2,
["Cast - Alert + Timer [P]"] = 4,
["Add - Warning [P]"] = 5,
["Cast - Watch Step [P]"] = 1,
["Aura is Shield [P]"] = 5,
["Cast - Debuff [P]"] = 2,
["Cast - Simple Interrupt [P]"] = 2,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - Ongoing Cast [P]"] = 4,
["Cast - Important by Color [P]"] = 2,
["Cast - Heal Cut [P]"] = 3,
["Aura - Buff Alert"] = 15,
["Color Change"] = 1,
["Cast - AoE Hit All [P]"] = 3,
["Add - Non Elite Trash [P]"] = 4,
["Unit - Health Markers"] = 12,
["Aura Border Color"] = 1,
["Countdown"] = 11,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Frontal Cone"] = 17,
["Add - Explode on Die [P]"] = 1,
["Cast - Tank Interrupt"] = 12,
["Cast - Glowing [P]"] = 10,
["Explosion Affix M+"] = 14,
["Fixate On You"] = 11,
},
["hover_highlight_alpha"] = 0.5,
["non_targeted_alpha_enabled"] = true,
["aura_timer_text_size"] = 9,
["cast_statusbar_bgtexture"] = "Details Flat",
["aura2_x_offset"] = -1.1999969482422,
["target_indicator"] = "Double Arrows",
["tank"] = {
["colors"] = {
["pulling_from_tank"] = {
0.54117647058824,
0.43137254901961,
},
["anothertank"] = {
0.50196078431373,
0.50196078431373,
},
["aggro"] = {
0.74509805440903,
0.18823531270027,
0.11372549831867,
},
["noaggro"] = {
0.8666667342186,
0.43529415130615,
},
["nocombat"] = {
0.74509803921569,
0.18823529411765,
0.11372549019608,
},
["pulling"] = {
nil,
0.91372549019608,
0.22745098039216,
},
},
},
["aura_tracker"] = {
["debuff"] = {
315341,
207756,
280322,
340075,
316220,
280321,
319504,
256495,
190533,
345569,
347037,
},
["buff_tracked"] = {
["227931"] = true,
["438706"] = true,
["365338"] = true,
["368364"] = true,
["389808"] = true,
["297133"] = true,
["343502"] = false,
["209859"] = true,
["385528"] = true,
["440177"] = false,
["343503"] = true,
["163689"] = true,
["233210"] = true,
["338510"] = false,
},
["buff"] = {
273607,
283928,
311975,
343208,
197862,
66235,
344548,
189949,
343196,
317929,
259895,
290494,
327993,
322540,
332672,
321708,
305395,
41450,
200327,
290583,
320407,
236801,
194223,
333920,
74001,
212753,
175395,
197874,
200816,
196718,
173898,
315948,
122783,
322108,
343150,
296497,
344363,
205202,
255016,
289626,
337851,
228048,
341857,
23333,
198144,
292152,
321702,
29166,
197061,
215776,
209194,
272682,
212640,
216451,
79542,
187827,
124974,
207812,
212295,
34976,
196555,
129035,
316849,
265314,
69369,
321745,
316828,
278454,
285272,
279043,
203048,
198817,
316834,
344878,
320379,
335255,
231627,
328767,
198111,
125174,
317138,
322110,
284508,
236439,
328682,
325208,
185422,
317138,
213602,
323048,
},
["buff_banned"] = {
["286145"] = true,
["318486"] = true,
["323961"] = true,
["333553"] = true,
["284471"] = true,
["327416"] = false,
["396113"] = true,
["396106"] = true,
["302564"] = true,
["422067"] = false,
["292664"] = true,
["61574"] = true,
["303380"] = true,
["268710"] = true,
["396109"] = true,
["209746"] = true,
["333575"] = true,
["284882"] = true,
["317602"] = true,
["417039"] = false,
["333579"] = true,
["236502"] = true,
["61573"] = true,
["206150"] = true,
["311571"] = true,
["216777"] = true,
["5760"] = true,
["343553"] = true,
["343613"] = false,
["266499"] = true,
["396098"] = true,
},
["debuff_banned"] = {
["353354"] = true,
["444736"] = true,
["461498"] = false,
["444834"] = false,
["374557"] = false,
["331016"] = false,
["392388"] = true,
["443404"] = false,
["458169"] = false,
["295367"] = true,
["204167"] = false,
["331653"] = true,
["424965"] = true,
["453599"] = false,
["370898"] = false,
["417490"] = true,
["394021"] = true,
["394453"] = false,
["394255"] = true,
["273836"] = true,
["452229"] = false,
["314113"] = true,
["294909"] = true,
["281242"] = true,
["206760"] = true,
["443934"] = true,
["279416"] = true,
["390271"] = false,
["321330"] = true,
["294934"] = true,
["388550"] = true,
["324260"] = true,
["204206"] = false,
["426339"] = true,
["391568"] = true,
["454025"] = false,
["356372"] = false,
["360277"] = true,
["403391"] = true,
["345466"] = true,
["382426"] = true,
["378983"] = true,
["211793"] = false,
["255909"] = true,
["389788"] = false,
["354052"] = true,
["461981"] = false,
["5760"] = true,
["356995"] = false,
["410790"] = false,
["397712"] = true,
["455366"] = true,
["429750"] = true,
["381628"] = true,
["420144"] = true,
["256148"] = true,
["397478"] = true,
["204242"] = true,
["457928"] = false,
["449217"] = true,
["205027"] = false,
["358379"] = true,
["394328"] = true,
["356329"] = true,
["169623"] = true,
["286581"] = true,
["463192"] = true,
["406770"] = true,
["244813"] = false,
["443541"] = true,
["373281"] = false,
["392490"] = false,
["6343"] = true,
["352534"] = true,
["269576"] = true,
["457133"] = false,
["377359"] = false,
},
["debuff_tracked"] = {
["409990"] = true,
["335372"] = false,
["323059"] = false,
},
},
["health_statusbar_bgcolor"] = {
0.21176472306252,
0.21176472306252,
0.21176472306252,
1,
},
["extra_icon_auras_mine"] = {
["Plague Bomb"] = false,
["209859"] = false,
["Serrated Bone Spike"] = true,
["Violent Detonation"] = false,
},
["range_check_cast_bar_alpha"] = 0.89999997615814,
["aura_width2"] = 19,
["script_banned_user"] = {
["Player-3674-08A5D7A3"] = true,
},
["target_shady_alpha"] = 0,
["version"] = 110,
["tap_denied_color"] = {
0.46666666666667,
0.46666666666667,
0.46666666666667,
},
["color_override_colors"] = {
[3] = {
0.74509803921569,
0.18823529411765,
0.11372549019608,
},
[4] = {
1,
0.79607850313187,
0.20784315466881,
},
},
["castbar_target_text_size"] = 9,
["target_highlight_height"] = 10,
["saved_cvars"] = {
["nameplateShowOnlyNames"] = "0",
["nameplateOverlapV"] = "1.5",
["nameplateLargeTopInset"] = "0.03999999910593",
["nameplateShowEnemyMinus"] = "1",
["NamePlateClassificationScale"] = "1",
["nameplateShowFriendlyTotems"] = "0",
["nameplatePersonalHideDelaySeconds"] = "0.2",
["nameplateShowFriendlyPets"] = "0",
["nameplatePersonalShowInCombat"] = "0",
["nameplatePersonalShowWithTarget"] = "0",
["nameplateMinAlpha"] = "0.90135484",
["nameplateResourceOnTarget"] = "0",
["nameplateNotSelectedAlpha"] = "1",
["nameplateLargerScale"] = "1",
["nameplateMaxDistance"] = "60",
["nameplateShowFriendlyMinions"] = "0",
["nameplateSelfScale"] = "0.99779832363129",
["nameplateTargetBehindMaxDistance"] = "15",
["SoftTargetInteract"] = "0",
["nameplateShowEnemies"] = "1",
["NamePlateVerticalScale"] = "1",
["nameplateSelectedAlpha"] = "1",
["nameplateShowSelf"] = "0",
["nameplatePersonalShowAlways"] = "1",
["nameplateMotionSpeed"] = "0.048449993133545",
["nameplateGlobalScale"] = "1",
["nameplateShowEnemyMinions"] = "1",
["nameplateShowEnemyPets"] = "0",
["nameplateShowFriendlyNPCs"] = "0",
["nameplateSelectedScale"] = "0.99656772613525",
["nameplateOverlapH"] = "0.75",
["nameplateSelfTopInset"] = "0.57",
["nameplateShowAll"] = "1",
["nameplateOccludedAlphaMult"] = "0.5",
["nameplateMinAlphaDistance"] = "-158489.31924611",
["nameplateMotion"] = "1",
["NamePlateHorizontalScale"] = "1",
["nameplateMinScale"] = "1",
["nameplateShowEnemyTotems"] = "0",
["nameplateOtherTopInset"] = "0.03999999910593",
["nameplateOtherAtBase"] = "0",
["nameplateSelfBottomInset"] = "0.37",
["SoftTargetNameplateInteract"] = "0",
["nameplateShowFriendlyGuardians"] = "0",
["nameplateSelfAlpha"] = "0.89999997615814",
["nameplateShowFriends"] = "0",
["SoftTargetIconGameObject"] = "0",
["ShowNamePlateLoseAggroFlash"] = "1",
["ShowClassColorInNameplate"] = "1",
},
["aura_sort"] = true,
["extra_icon_use_blizzard_border_color"] = false,
["login_counter"] = 52922,
["extra_icon_caster_name"] = false,
["click_space_friendly"] = {
80,
1,
},
["extra_icon_show_offensive_border"] = {
nil,
0.65098039215686,
0.10196078431373,
},
["news_frame"] = {
["PlaterNewsFrame"] = {
["scale"] = 1,
},
},
["target_highlight_alpha"] = 1,
["target_shady_combat_only"] = false,
["cast_statusbar_color"] = {
nil,
1,
nil,
1,
},
["bossmod_aura_height"] = 32.105155944824,
["extra_icon_cooldown_edge_texture"] = "Interface\\AddOns\\Plater\\images\\cooldown_edge_1",
["aura_stack_font"] = "Expressway",
["cast_statusbar_color_interrupted"] = {
0.8,
0.30196078431373,
0.30196078431373,
},
["blizzard_nameplate_font"] = "Expressway",
["range_check_in_range_or_target_alpha"] = 1,
["range_check_buffs_alpha"] = 0.89999997615814,
["aura_grow_direction"] = 1,
["pet_height_scale"] = 0.99999994039536,
["number_region_first_run"] = true,
["target_shady_enabled"] = false,
["cast_statusbar_use_fade_effects"] = false,
["focus_as_target_alpha"] = true,
["extra_icon_caster_font"] = "Expressway",
["range_check_in_range_or_target_alpha_friendlies"] = 1,
["hide_friendly_castbars"] = true,
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1.1000000238419,
},
},
["bossmod_cooldown_text_enabled"] = false,
["range_check_power_bar_alpha"] = 0.89999997615814,
["range_check_enabled"] = false,
["dps"] = {
["colors"] = {
["notontank"] = {
0.50196078431373,
0.50196078431373,
},
["noaggro"] = {
0.74509805440903,
0.18823531270027,
0.11372549831867,
},
["aggro"] = {
0.86666666666667,
0.43529411764706,
},
},
},
["auto_toggle_stacking"] = {
["raid"] = false,
["party"] = false,
["arena"] = false,
["world"] = false,
},
["pet_width_scale"] = 0.99999994039536,
["aura_width"] = 19,
["npc_colors"] = {
[99358] = {
true,
false,
"fuchsia",
},
[198716] = {
true,
false,
"blue",
},
[196798] = {
true,
false,
"deepskyblue",
},
[186696] = {
true,
false,
"fuchsia",
},
[194241] = {
true,
false,
"blue",
},
[205622] = {
true,
false,
"mediumpurple",
},
[207796] = {
true,
false,
"fuchsia",
},
[196671] = {
true,
false,
"mediumpurple",
},
[180431] = {
true,
false,
"deepskyblue",
},
[115407] = {
true,
false,
"blue",
},
[150253] = {
true,
false,
"mediumpurple",
},
[184140] = {
true,
false,
"fuchsia",
},
[99359] = {
true,
false,
"mediumpurple",
},
[180432] = {
true,
false,
"blue",
},
[216621] = {
true,
false,
"fuchsia",
},
[173016] = {
true,
false,
"deepskyblue",
},
[129602] = {
true,
false,
"mediumpurple",
},
[180433] = {
true,
false,
"fuchsia",
},
[200126] = {
true,
false,
"blue",
},
[120651] = {
true,
false,
"gold",
},
[212786] = {
true,
false,
"fuchsia",
},
[197697] = {
true,
false,
"fuchsia",
},
[176598] = {
true,
false,
"blue",
},
[164578] = {
true,
false,
"mediumpurple",
},
[214066] = {
true,
false,
"blue",
},
[131587] = {
true,
false,
"mediumpurple",
},
[199233] = {
true,
false,
"mediumpurple",
},
[126918] = {
true,
false,
"blue",
},
[196548] = {
true,
false,
"deepskyblue",
},
[135552] = {
true,
false,
"blue",
},
[218671] = {
true,
false,
"deepskyblue",
},
[84400] = {
true,
false,
"mediumpurple",
},
[186191] = {
true,
false,
"blue",
},
[135169] = {
true,
false,
"fuchsia",
},
[206140] = {
true,
false,
"fuchsia",
},
[83761] = {
true,
false,
"mediumpurple",
},
[178008] = {
true,
false,
"yellow",
},
[221102] = {
true,
false,
"deepskyblue",
},
[178392] = {
true,
false,
"fuchsia",
},
[168418] = {
true,
false,
"deepskyblue",
},
[200387] = {
true,
false,
"mediumpurple",
},
[221103] = {
true,
false,
"mediumpurple",
},
[199748] = {
true,
false,
"deepskyblue",
},
[165222] = {
true,
false,
"blue",
},
[198214] = {
true,
false,
"fuchsia",
},
[184020] = {
true,
false,
"mediumpurple",
},
[220976] = {
true,
false,
"fuchsia",
},
[223150] = {
true,
false,
"deepskyblue",
},
[199749] = {
true,
false,
"mediumpurple",
},
[168420] = {
true,
false,
"blue",
},
[165479] = {
true,
false,
"mediumpurple",
},
[192333] = {
true,
false,
"mediumpurple",
},
[178139] = {
true,
false,
"mediumpurple",
},
[83763] = {
true,
false,
"deepskyblue",
},
[184022] = {
true,
false,
"deepskyblue",
},
[189265] = {
true,
false,
"blue",
},
[75899] = {
true,
false,
"fuchsia",
},
[210109] = {
true,
false,
"mediumpurple",
},
[212411] = {
true,
false,
"mediumpurple",
},
[184023] = {
true,
false,
"blue",
},
[168934] = {
true,
false,
"fuchsia",
},
[211261] = {
true,
false,
"fuchsia",
},
[196044] = {
true,
false,
"fuchsia",
},
[190034] = {
true,
false,
"mediumpurple",
},
[160495] = {
true,
false,
"deepskyblue",
},
[188244] = {
true,
false,
"mediumpurple",
},
[178142] = {
true,
false,
"deepskyblue",
},
[157810] = {
true,
false,
"deepskyblue",
},
[194894] = {
true,
false,
"blue",
},
[196045] = {
true,
false,
"deepskyblue",
},
[201288] = {
true,
false,
"fuchsia",
},
[194895] = {
true,
false,
"deepskyblue",
},
[168425] = {
true,
false,
"fuchsia",
},
[208450] = {
true,
false,
"mediumpurple",
},
[83893] = {
true,
false,
"blue",
},
[128969] = {
true,
false,
"fuchsia",
},
[99366] = {
true,
false,
"blue",
},
[227632] = {
true,
false,
"fuchsia",
},
[220599] = {
true,
false,
"deepskyblue",
},
[217658] = {
true,
false,
"mediumpurple",
},
[177889] = {
true,
false,
"fuchsia",
},
[187224] = {
true,
false,
"blue",
},
[211904] = {
true,
false,
"fuchsia",
},
[154744] = {
true,
false,
"fuchsia",
},
[194897] = {
true,
false,
"fuchsia",
},
[217531] = {
true,
false,
"fuchsia",
},
[164463] = {
true,
false,
"deepskyblue",
},
[83894] = {
true,
false,
"mediumpurple",
},
[98280] = {
true,
false,
"deepskyblue",
},
[150142] = {
true,
false,
"deepskyblue",
},
[212673] = {
true,
false,
"fuchsia",
},
[172265] = {
true,
false,
"deepskyblue",
},
[227635] = {
true,
false,
"deepskyblue",
},
[217533] = {
true,
false,
"fuchsia",
},
[150143] = {
true,
false,
"blue",
},
[177892] = {
true,
false,
"blue",
},
[220986] = {
true,
false,
"fuchsia",
},
[165872] = {
true,
false,
"fuchsia",
},
[214209] = {
true,
false,
"deepskyblue",
},
[131858] = {
true,
false,
"mediumpurple",
},
[168942] = {
true,
false,
"blue",
},
[45912] = {
true,
false,
"deepskyblue",
},
[207177] = {
true,
false,
"mediumpurple",
},
[127757] = {
true,
false,
"mediumpurple",
},
[208456] = {
true,
false,
"blue",
},
[220988] = {
true,
false,
"fuchsia",
},
[190426] = {
true,
false,
"fuchsia",
},
[189531] = {
true,
false,
"blue",
},
[162038] = {
true,
false,
"mediumpurple",
},
[98538] = {
true,
false,
"fuchsia",
},
[150146] = {
true,
false,
"fuchsia",
},
[137103] = {
true,
false,
"fuchsia",
},
[101991] = {
true,
false,
"blue",
},
[162039] = {
true,
false,
"deepskyblue",
},
[97068] = {
true,
false,
"mediumpurple",
},
[75713] = {
true,
false,
"deepskyblue",
},
[180070] = {
true,
false,
"fuchsia",
},
[198868] = {
true,
false,
"deepskyblue",
},
[195927] = {
true,
false,
"mediumpurple",
},
[170480] = {
true,
false,
"mediumpurple",
},
[208459] = {
true,
false,
"deepskyblue",
},
[52019] = {
true,
false,
"fuchsia",
},
[83578] = {
true,
false,
"mediumpurple",
},
[198869] = {
true,
false,
"deepskyblue",
},
[171376] = {
true,
false,
"blue",
},
[190174] = {
true,
false,
"fuchsia",
},
[203857] = {
true,
false,
"deepskyblue",
},
[227514] = {
true,
false,
"fuchsia",
},
[195929] = {
true,
false,
"mediumpurple",
},
[221760] = {
true,
false,
"blue",
},
[223423] = {
true,
false,
"mediumpurple",
},
[118489] = {
true,
false,
"fuchsia",
},
[170483] = {
true,
false,
"fuchsia",
},
[39392] = {
true,
false,
"mediumpurple",
},
[193373] = {
true,
false,
"fuchsia",
},
[228539] = {
true,
false,
"deepskyblue",
},
[168310] = {
true,
false,
"fuchsia",
},
[133912] = {
true,
false,
"blue",
},
[114334] = {
true,
false,
"mediumpurple",
},
[208208] = {
true,
false,
"mediumpurple",
},
[75652] = {
true,
false,
"fuchsia",
},
[197595] = {
true,
false,
"mediumpurple",
},
[203861] = {
true,
false,
"mediumpurple",
},
[155908] = {
true,
false,
"fuchsia",
},
[179821] = {
true,
false,
"fuchsia",
},
[83389] = {
true,
false,
"mediumpurple",
},
[157571] = {
true,
false,
"deepskyblue",
},
[173044] = {
true,
false,
"deepskyblue",
},
[154758] = {
true,
false,
"fuchsia",
},
[193760] = {
true,
false,
"mediumpurple",
},
[118491] = {
true,
false,
"deepskyblue",
},
[115486] = {
true,
false,
"mediumpurple",
},
[220742] = {
true,
false,
"fuchsia",
},
[224962] = {
true,
false,
"deepskyblue",
},
[157572] = {
true,
false,
"deepskyblue",
},
[164861] = {
true,
false,
"blue",
},
[114783] = {
true,
false,
"deepskyblue",
},
[105704] = {
true,
false,
"blue",
},
[166396] = {
true,
false,
"blue",
},
[215756] = {
true,
false,
"fuchsia",
},
[187240] = {
true,
false,
"mediumpurple",
},
[129553] = {
true,
false,
"fuchsia",
},
[174197] = {
true,
false,
"deepskyblue",
},
[202969] = {
true,
false,
"fuchsia",
},
[214350] = {
true,
false,
"deepskyblue",
},
[168443] = {
true,
false,
"blue",
},
[77700] = {
true,
false,
"deepskyblue",
},
[84989] = {
true,
false,
"deepskyblue",
},
[184300] = {
true,
false,
"mediumpurple",
},
[180336] = {
true,
false,
"deepskyblue",
},
[170490] = {
true,
false,
"deepskyblue",
},
[168572] = {
true,
false,
"blue",
},
[175861] = {
true,
false,
"fuchsia",
},
[184301] = {
true,
false,
"deepskyblue",
},
[202971] = {
true,
false,
"deepskyblue",
},
[225605] = {
true,
false,
"deepskyblue",
},
[115488] = {
true,
false,
"blue",
},
[163458] = {
true,
false,
"deepskyblue",
},
[164737] = {
true,
false,
"fuchsia",
},
[81985] = {
true,
false,
"deepskyblue",
},
[122969] = {
true,
false,
"deepskyblue",
},
[40577] = {
true,
false,
"mediumpurple",
},
[168318] = {
true,
false,
"mediumpurple",
},
[150160] = {
true,
false,
"mediumpurple",
},
[178165] = {
true,
false,
"fuchsia",
},
[225479] = {
true,
false,
"blue",
},
[104300] = {
true,
false,
"deepskyblue",
},
[175992] = {
true,
false,
"fuchsia",
},
[122970] = {
true,
false,
"fuchsia",
},
[131492] = {
true,
false,
"blue",
},
[203230] = {
true,
false,
"blue",
},
[86526] = {
true,
false,
"blue",
},
[135329] = {
true,
false,
"fuchsia",
},
[81603] = {
true,
false,
"mediumpurple",
},
[166275] = {
true,
false,
"deepskyblue",
},
[196198] = {
true,
false,
"blue",
},
[174843] = {
true,
false,
"mediumpurple",
},
[198500] = {
true,
false,
"deepskyblue",
},
[122971] = {
true,
false,
"mediumpurple",
},
[166276] = {
true,
false,
"mediumpurple",
},
[168578] = {
true,
false,
"deepskyblue",
},
[150292] = {
true,
false,
"blue",
},
[218961] = {
true,
false,
"fuchsia",
},
[45917] = {
true,
false,
"mediumpurple",
},
[220368] = {
true,
false,
"fuchsia",
},
[211289] = {
true,
false,
"fuchsia",
},
[150165] = {
true,
false,
"deepskyblue",
},
[186226] = {
true,
false,
"fuchsia",
},
[122972] = {
true,
false,
"deepskyblue",
},
[207198] = {
true,
false,
"deepskyblue",
},
[92538] = {
true,
false,
"fuchsia",
},
[170882] = {
true,
false,
"blue",
},
[178171] = {
true,
false,
"fuchsia",
},
[180473] = {
true,
false,
"blue",
},
[211291] = {
true,
false,
"mediumpurple",
},
[196202] = {
true,
false,
"blue",
},
[212826] = {
true,
false,
"mediumpurple",
},
[164873] = {
true,
false,
"fuchsia",
},
[122973] = {
true,
false,
"blue",
},
[75979] = {
true,
false,
"fuchsia",
},
[183671] = {
true,
false,
"fuchsia",
},
[150168] = {
true,
false,
"fuchsia",
},
[212827] = {
true,
false,
"fuchsia",
},
[129559] = {
true,
false,
"fuchsia",
},
[186741] = {
true,
false,
"deepskyblue",
},
[150169] = {
true,
false,
"mediumpurple",
},
[183033] = {
true,
false,
"mediumpurple",
},
[180348] = {
true,
false,
"blue",
},
[100532] = {
true,
false,
"fuchsia",
},
[207202] = {
true,
false,
"deepskyblue",
},
[182778] = {
true,
false,
"fuchsia",
},
[163086] = {
true,
false,
"blue",
},
[91006] = {
true,
false,
"deepskyblue",
},
[173189] = {
true,
false,
"deepskyblue",
},
[205158] = {
true,
false,
"fuchsia",
},
[129369] = {
true,
false,
"fuchsia",
},
[97720] = {
true,
false,
"fuchsia",
},
[212831] = {
true,
false,
"mediumpurple",
},
[195696] = {
true,
false,
"fuchsia",
},
[213343] = {
true,
false,
"mediumpurple",
},
[222167] = {
true,
false,
"deepskyblue",
},
[153882] = {
true,
false,
"deepskyblue",
},
[187897] = {
true,
false,
"fuchsia",
},
[179841] = {
true,
false,
"deepskyblue",
},
[151325] = {
true,
false,
"fuchsia",
},
[189816] = {
true,
false,
"deepskyblue",
},
[188026] = {
true,
false,
"fuchsia",
},
[168717] = {
true,
false,
"deepskyblue",
},
[144293] = {
true,
false,
"mediumpurple",
},
[183423] = {
true,
false,
"deepskyblue",
},
[165137] = {
true,
false,
"mediumpurple",
},
[187771] = {
true,
false,
"blue",
},
[168718] = {
true,
false,
"blue",
},
[206697] = {
true,
false,
"deepskyblue",
},
[184319] = {
true,
false,
"blue",
},
[165010] = {
true,
false,
"mediumpurple",
},
[200943] = {
true,
false,
"mediumpurple",
},
[191225] = {
true,
false,
"mediumpurple",
},
[206698] = {
true,
false,
"blue",
},
[183425] = {
true,
false,
"blue",
},
[154014] = {
true,
false,
"deepskyblue",
},
[212453] = {
true,
false,
"deepskyblue",
},
[40166] = {
true,
false,
"mediumpurple",
},
[144296] = {
true,
false,
"mediumpurple",
},
[205804] = {
true,
false,
"mediumpurple",
},
[179334] = {
true,
false,
"fuchsia",
},
[176521] = {
true,
false,
"blue",
},
[163862] = {
true,
false,
"blue",
},
[190588] = {
true,
false,
"mediumpurple",
},
[191739] = {
true,
false,
"mediumpurple",
},
[168594] = {
true,
false,
"mediumpurple",
},
[144298] = {
true,
false,
"blue",
},
[176523] = {
true,
false,
"mediumpurple",
},
[224732] = {
true,
false,
"deepskyblue",
},
[190206] = {
true,
false,
"blue",
},
[180104] = {
true,
false,
"deepskyblue",
},
[224221] = {
true,
false,
"mediumpurple",
},
[114796] = {
true,
false,
"blue",
},
[196856] = {
true,
false,
"mediumpurple",
},
[96574] = {
true,
false,
"mediumpurple",
},
[210539] = {
true,
false,
"mediumpurple",
},
[191230] = {
true,
false,
"fuchsia",
},
[188673] = {
true,
false,
"mediumpurple",
},
[104247] = {
true,
false,
"deepskyblue",
},
[130909] = {
true,
false,
"fuchsia",
},
[85194] = {
true,
false,
"fuchsia",
},
[154020] = {
true,
false,
"deepskyblue",
},
[165529] = {
true,
false,
"blue",
},
[191232] = {
true,
false,
"blue",
},
[98813] = {
true,
false,
"deepskyblue",
},
[165913] = {
true,
false,
"fuchsia",
},
[45922] = {
true,
false,
"deepskyblue",
},
[192767] = {
true,
false,
"mediumpurple",
},
[216364] = {
true,
false,
"fuchsia",
},
[221667] = {
true,
false,
"deepskyblue",
},
[179852] = {
true,
false,
"blue",
},
[214762] = {
true,
false,
"fuchsia",
},
[186246] = {
true,
false,
"deepskyblue",
},
[115757] = {
true,
false,
"mediumpurple",
},
[155812] = {
true,
false,
"blue",
},
[80816] = {
true,
false,
"deepskyblue",
},
[224609] = {
true,
false,
"fuchsia",
},
[211121] = {
true,
false,
"mediumpurple",
},
[220730] = {
true,
false,
"mediumpurple",
},
[186208] = {
true,
false,
"mediumpurple",
},
[168153] = {
true,
false,
"fuchsia",
},
[217039] = {
true,
false,
"mediumpurple",
},
[190403] = {
true,
false,
"mediumpurple",
},
[205623] = {
true,
false,
"mediumpurple",
},
[166299] = {
true,
false,
"blue",
},
[150250] = {
true,
false,
"deepskyblue",
},
[56792] = {
true,
false,
"fuchsia",
},
[97197] = {
true,
false,
"deepskyblue",
},
[190340] = {
true,
false,
"blue",
},
[198870] = {
true,
false,
"blue",
},
[204918] = {
true,
false,
"blue",
},
[220974] = {
true,
false,
"fuchsia",
},
[183497] = {
true,
false,
"blue",
},
[213954] = {
true,
false,
"mediumpurple",
},
[223844] = {
true,
false,
"deepskyblue",
},
[171799] = {
true,
false,
"fuchsia",
},
[95842] = {
true,
false,
"deepskyblue",
},
[167963] = {
true,
false,
"blue",
},
[214608] = {
true,
false,
"deepskyblue",
},
[180495] = {
true,
false,
"fuchsia",
},
[166301] = {
true,
false,
"fuchsia",
},
[84990] = {
true,
false,
"blue",
},
[114544] = {
true,
false,
"fuchsia",
},
[205363] = {
true,
false,
"deepskyblue",
},
[190342] = {
true,
false,
"fuchsia",
},
[167964] = {
true,
false,
"fuchsia",
},
[122984] = {
true,
false,
"fuchsia",
},
[41096] = {
true,
false,
"blue",
},
[166302] = {
true,
false,
"deepskyblue",
},
[163459] = {
true,
false,
"blue",
},
[221863] = {
true,
false,
"deepskyblue",
},
[191206] = {
true,
false,
"deepskyblue",
},
[168156] = {
true,
false,
"fuchsia",
},
[165919] = {
true,
false,
"mediumpurple",
},
[164506] = {
true,
false,
"blue",
},
[195842] = {
true,
false,
"blue",
},
[205618] = {
true,
false,
"mediumpurple",
},
[104251] = {
true,
false,
"fuchsia",
},
[169861] = {
true,
false,
"blue",
},
[163618] = {
true,
false,
"blue",
},
[200137] = {
true,
false,
"deepskyblue",
},
[227300] = {
true,
false,
"mediumpurple",
},
[40634] = {
true,
false,
"deepskyblue",
},
[208438] = {
true,
false,
"mediumpurple",
},
[218324] = {
true,
false,
"fuchsia",
},
[208440] = {
true,
false,
"mediumpurple",
},
[198503] = {
true,
false,
"deepskyblue",
},
[186125] = {
true,
false,
"deepskyblue",
},
[213338] = {
true,
false,
"deepskyblue",
},
[184335] = {
true,
false,
"deepskyblue",
},
[191847] = {
true,
false,
"deepskyblue",
},
[206074] = {
true,
false,
"deepskyblue",
},
[114584] = {
true,
false,
"mediumpurple",
},
[165410] = {
true,
false,
"mediumpurple",
},
[205435] = {
true,
false,
"mediumpurple",
},
[163620] = {
true,
false,
"mediumpurple",
},
[205691] = {
true,
false,
"blue",
},
[220141] = {
true,
false,
"deepskyblue",
},
[229537] = {
true,
false,
"yellow",
},
[165471] = {
true,
false,
"blue",
},
[196576] = {
true,
false,
"blue",
},
[179733] = {
true,
false,
"fuchsia",
},
[195265] = {
true,
false,
"mediumpurple",
},
[171805] = {
true,
false,
"blue",
},
[115020] = {
true,
false,
"mediumpurple",
},
[168992] = {
true,
false,
"deepskyblue",
},
[150297] = {
true,
false,
"deepskyblue",
},
[212403] = {
true,
false,
"blue",
},
[223774] = {
true,
false,
"blue",
},
[196102] = {
true,
false,
"deepskyblue",
},
[177816] = {
true,
false,
"deepskyblue",
},
[98243] = {
true,
false,
"mediumpurple",
},
[188302] = {
true,
false,
"yellow",
},
[83026] = {
true,
false,
"mediumpurple",
},
[114803] = {
true,
false,
"deepskyblue",
},
[197985] = {
true,
false,
"deepskyblue",
},
[186220] = {
true,
false,
"deepskyblue",
},
[81236] = {
true,
false,
"deepskyblue",
},
[177817] = {
true,
false,
"blue",
},
[187768] = {
true,
false,
"deepskyblue",
},
[144294] = {
true,
false,
"deepskyblue",
},
[131586] = {
true,
false,
"mediumpurple",
},
[82579] = {
true,
false,
"deepskyblue",
},
[187154] = {
true,
false,
"fuchsia",
},
[164567] = {
true,
false,
"deepskyblue",
},
[165414] = {
true,
false,
"deepskyblue",
},
[223773] = {
true,
false,
"blue",
},
[193291] = {
true,
false,
"fuchsia",
},
[151476] = {
true,
false,
"mediumpurple",
},
[44404] = {
true,
false,
"deepskyblue",
},
[155824] = {
true,
false,
"blue",
},
[220401] = {
true,
false,
"fuchsia",
},
[175517] = {
true,
false,
"blue",
},
[228540] = {
true,
false,
"deepskyblue",
},
[162057] = {
true,
false,
"mediumpurple",
},
[194315] = {
true,
false,
"mediumpurple",
},
[213806] = {
true,
false,
"deepskyblue",
},
[180429] = {
true,
false,
"mediumpurple",
},
[135365] = {
true,
false,
"fuchsia",
},
[212775] = {
true,
false,
"deepskyblue",
},
[168658] = {
true,
false,
"fuchsia",
},
[115019] = {
true,
false,
"deepskyblue",
},
[129372] = {
true,
false,
"blue",
},
[187155] = {
true,
false,
"blue",
},
[210812] = {
true,
false,
"deepskyblue",
},
[163882] = {
true,
false,
"mediumpurple",
},
[180474] = {
true,
false,
"fuchsia",
},
[212412] = {
true,
false,
"fuchsia",
},
[224219] = {
true,
false,
"deepskyblue",
},
[201222] = {
true,
false,
"mediumpurple",
},
[173729] = {
true,
false,
"fuchsia",
},
[194317] = {
true,
false,
"mediumpurple",
},
[84499] = {
true,
false,
"fuchsia",
},
[100531] = {
true,
false,
"mediumpurple",
},
[196203] = {
true,
false,
"deepskyblue",
},
[98275] = {
true,
false,
"blue",
},
[207199] = {
true,
false,
"blue",
},
[201223] = {
true,
false,
"blue",
},
[204206] = {
true,
false,
"blue",
},
[95779] = {
true,
false,
"mediumpurple",
},
[214761] = {
true,
false,
"mediumpurple",
},
[115765] = {
true,
false,
"fuchsia",
},
[200840] = {
true,
false,
"mediumpurple",
},
[59555] = {
true,
false,
"fuchsia",
},
[194487] = {
true,
false,
"blue",
},
[156212] = {
true,
false,
"deepskyblue",
},
[171384] = {
true,
false,
"blue",
},
[174210] = {
true,
false,
"deepskyblue",
},
[40936] = {
true,
false,
"mediumpurple",
},
[135241] = {
true,
false,
"deepskyblue",
},
[214140] = {
true,
false,
"mediumpurple",
},
[212389] = {
true,
false,
"blue",
},
[208698] = {
true,
false,
"fuchsia",
},
[177891] = {
true,
false,
"mediumpurple",
},
[133835] = {
true,
false,
"blue",
},
[222964] = {
true,
false,
"blue",
},
[213885] = {
true,
false,
"fuchsia",
},
[168109] = {
true,
false,
"deepskyblue",
},
[100485] = {
true,
false,
"mediumpurple",
},
[197698] = {
true,
false,
"fuchsia",
},
[183707] = {
true,
false,
"deepskyblue",
},
[105715] = {
true,
false,
"blue",
},
[221945] = {
true,
false,
"fuchsia",
},
[182045] = {
true,
false,
"fuchsia",
},
[81432] = {
true,
false,
"deepskyblue",
},
[206066] = {
true,
false,
"deepskyblue",
},
[155831] = {
true,
false,
"fuchsia",
},
[199124] = {
true,
false,
"deepskyblue",
},
[206214] = {
true,
false,
"mediumpurple",
},
[96587] = {
true,
false,
"deepskyblue",
},
[187033] = {
true,
false,
"mediumpurple",
},
[168747] = {
true,
false,
"fuchsia",
},
[102404] = {
true,
false,
"mediumpurple",
},
[208193] = {
true,
false,
"blue",
},
[100486] = {
true,
false,
"deepskyblue",
},
[192788] = {
true,
false,
"fuchsia",
},
[101637] = {
true,
false,
"mediumpurple",
},
[177808] = {
true,
false,
"mediumpurple",
},
[102788] = {
true,
false,
"blue",
},
[227573] = {
true,
false,
"mediumpurple",
},
[198502] = {
true,
false,
"deepskyblue",
},
[135245] = {
true,
false,
"mediumpurple",
},
[76446] = {
true,
false,
"blue",
},
[162099] = {
true,
false,
"fuchsia",
},
[211262] = {
true,
false,
"fuchsia",
},
[87252] = {
true,
false,
"mediumpurple",
},
[164510] = {
true,
false,
"fuchsia",
},
[115640] = {
true,
false,
"fuchsia",
},
[138187] = {
true,
false,
"fuchsia",
},
[157017] = {
true,
false,
"blue",
},
[156157] = {
true,
false,
"blue",
},
[197905] = {
true,
false,
"blue",
},
[152898] = {
true,
false,
"fuchsia",
},
[131666] = {
true,
false,
"blue",
},
[209801] = {
true,
false,
"mediumpurple",
},
[212739] = {
true,
false,
"mediumpurple",
},
[165805] = {
true,
false,
"mediumpurple",
},
[189466] = {
true,
false,
"mediumpurple",
},
[45928] = {
true,
false,
"mediumpurple",
},
[192791] = {
true,
false,
"fuchsia",
},
[176551] = {
true,
false,
"deepskyblue",
},
[129367] = {
true,
false,
"blue",
},
[144071] = {
true,
false,
"deepskyblue",
},
[198263] = {
true,
false,
"mediumpurple",
},
[190362] = {
true,
false,
"blue",
},
[224249] = {
true,
false,
"fuchsia",
},
[114804] = {
true,
false,
"blue",
},
[190207] = {
true,
false,
"deepskyblue",
},
[59547] = {
true,
false,
"mediumpurple",
},
[196117] = {
true,
false,
"mediumpurple",
},
[163128] = {
true,
false,
"deepskyblue",
},
[223994] = {
true,
false,
"deepskyblue",
},
[213892] = {
true,
false,
"deepskyblue",
},
[98370] = {
true,
false,
"deepskyblue",
},
[98810] = {
true,
false,
"mediumpurple",
},
[227575] = {
true,
false,
"blue",
},
[193944] = {
true,
false,
"blue",
},
[168627] = {
true,
false,
"deepskyblue",
},
[81819] = {
true,
false,
"blue",
},
[115642] = {
true,
false,
"blue",
},
[213893] = {
true,
false,
"deepskyblue",
},
[163894] = {
true,
false,
"blue",
},
[59546] = {
true,
false,
"blue",
},
[196115] = {
true,
false,
"fuchsia",
},
[186658] = {
true,
false,
"deepskyblue",
},
[135474] = {
true,
false,
"blue",
},
[197406] = {
true,
false,
"fuchsia",
},
[199037] = {
true,
false,
"deepskyblue",
},
[169905] = {
true,
false,
"blue",
},
[189470] = {
true,
false,
"deepskyblue",
},
[171184] = {
true,
false,
"mediumpurple",
},
[188703] = {
true,
false,
"yellow",
},
[134284] = {
true,
false,
"deepskyblue",
},
[167612] = {
true,
false,
"blue",
},
[81820] = {
true,
false,
"deepskyblue",
},
[204560] = {
true,
false,
"yellow",
},
[94224] = {
true,
false,
"fuchsia",
},
[90998] = {
true,
false,
"blue",
},
[115388] = {
true,
false,
"fuchsia",
},
[227578] = {
true,
false,
"deepskyblue",
},
[199703] = {
true,
false,
"fuchsia",
},
[206351] = {
true,
false,
"deepskyblue",
},
[211263] = {
true,
false,
"fuchsia",
},
[205384] = {
true,
false,
"deepskyblue",
},
[223253] = {
true,
false,
"deepskyblue",
},
[114542] = {
true,
false,
"blue",
},
[92610] = {
true,
false,
"fuchsia",
},
[216326] = {
true,
false,
"deepskyblue",
},
[188067] = {
true,
false,
"deepskyblue",
},
[197145] = {
true,
false,
"mediumpurple",
},
[165763] = {
true,
false,
"deepskyblue",
},
[198424] = {
true,
false,
"blue",
},
[190368] = {
true,
false,
"fuchsia",
},
[164921] = {
true,
false,
"deepskyblue",
},
[215755] = {
true,
false,
"fuchsia",
},
[194316] = {
true,
false,
"mediumpurple",
},
[184107] = {
true,
false,
"mediumpurple",
},
[197146] = {
true,
false,
"mediumpurple",
},
[153285] = {
false,
false,
"yellow",
},
[200836] = {
true,
false,
"mediumpurple",
},
[168886] = {
true,
false,
"deepskyblue",
},
[80936] = {
true,
false,
"blue",
},
[45930] = {
true,
false,
"fuchsia",
},
[227581] = {
true,
false,
"deepskyblue",
},
[211341] = {
true,
false,
"mediumpurple",
},
[156226] = {
true,
false,
"deepskyblue",
},
[40943] = {
true,
false,
"deepskyblue",
},
[59873] = {
true,
false,
"mediumpurple",
},
[190370] = {
true,
false,
"mediumpurple",
},
[166969] = {
true,
false,
"deepskyblue",
},
[116549] = {
true,
false,
"deepskyblue",
},
[192800] = {
true,
false,
"deepskyblue",
},
[131821] = {
true,
false,
"blue",
},
[192796] = {
true,
false,
"blue",
},
[167965] = {
true,
false,
"blue",
},
[165556] = {
true,
false,
"fuchsia",
},
[169927] = {
true,
false,
"fuchsia",
},
[166970] = {
true,
false,
"blue",
},
[82590] = {
true,
false,
"blue",
},
[40925] = {
true,
false,
"mediumpurple",
},
[163621] = {
true,
false,
"mediumpurple",
},
[197149] = {
true,
false,
"deepskyblue",
},
[156244] = {
true,
false,
"mediumpurple",
},
[59553] = {
true,
false,
"mediumpurple",
},
[172981] = {
true,
false,
"mediumpurple",
},
[166971] = {
true,
false,
"fuchsia",
},
[163520] = {
true,
false,
"mediumpurple",
},
[152905] = {
true,
false,
"fuchsia",
},
[167113] = {
true,
false,
"blue",
},
[164414] = {
true,
false,
"deepskyblue",
},
[199325] = {
true,
false,
"deepskyblue",
},
[180015] = {
true,
false,
"blue",
},
[190373] = {
true,
false,
"deepskyblue",
},
[164926] = {
true,
false,
"fuchsia",
},
[76104] = {
true,
false,
"blue",
},
[189235] = {
true,
false,
"mediumpurple",
},
[206230] = {
true,
false,
"fuchsia",
},
[162040] = {
true,
false,
"fuchsia",
},
[166589] = {
true,
false,
"fuchsia",
},
[84957] = {
true,
false,
"fuchsia",
},
[197535] = {
true,
false,
"fuchsia",
},
[179842] = {
true,
false,
"fuchsia",
},
[195928] = {
true,
false,
"mediumpurple",
},
[214287] = {
true,
false,
"yellow",
},
[198047] = {
true,
false,
"blue",
},
[177716] = {
true,
false,
"deepskyblue",
},
[82597] = {
true,
false,
"fuchsia",
},
[203812] = {
true,
false,
"fuchsia",
},
[205152] = {
true,
false,
"mediumpurple",
},
[164929] = {
true,
false,
"blue",
},
[86684] = {
true,
false,
"deepskyblue",
},
[76518] = {
true,
false,
"fuchsia",
},
[176565] = {
true,
false,
"deepskyblue",
},
[205337] = {
true,
false,
"fuchsia",
},
[180864] = {
true,
false,
"fuchsia",
},
[101326] = {
true,
false,
"fuchsia",
},
[165824] = {
true,
false,
"fuchsia",
},
[167998] = {
true,
false,
"mediumpurple",
},
[155830] = {
true,
false,
"deepskyblue",
},
[168384] = {
true,
false,
"blue",
},
[192934] = {
true,
false,
"blue",
},
[81984] = {
true,
false,
"mediumpurple",
},
[214673] = {
true,
false,
"blue",
},
[205212] = {
true,
false,
"fuchsia",
},
[190377] = {
true,
false,
"blue",
},
[224271] = {
true,
false,
"deepskyblue",
},
[213913] = {
true,
false,
"deepskyblue",
},
[195876] = {
true,
false,
"deepskyblue",
},
[84767] = {
true,
false,
"fuchsia",
},
[114629] = {
true,
false,
"blue",
},
[163524] = {
true,
false,
"fuchsia",
},
[114626] = {
true,
false,
"fuchsia",
},
[98706] = {
true,
false,
"mediumpurple",
},
[210966] = {
true,
false,
"blue",
},
[197219] = {
true,
false,
"mediumpurple",
},
[195877] = {
true,
false,
"fuchsia",
},
[214419] = {
true,
false,
"mediumpurple",
},
[176573] = {
true,
false,
"fuchsia",
},
[131812] = {
true,
false,
"fuchsia",
},
[187160] = {
true,
false,
"blue",
},
[75459] = {
true,
false,
"deepskyblue",
},
[216338] = {
true,
false,
"mediumpurple",
},
[101008] = {
true,
false,
"fuchsia",
},
[102095] = {
true,
false,
"blue",
},
[190688] = {
true,
false,
"mediumpurple",
},
[131685] = {
true,
false,
"deepskyblue",
},
[102287] = {
true,
false,
"mediumpurple",
},
[114627] = {
true,
false,
"blue",
},
[126919] = {
true,
false,
"deepskyblue",
},
[170690] = {
true,
false,
"blue",
},
[186229] = {
true,
false,
"mediumpurple",
},
[216339] = {
true,
false,
"blue",
},
[214421] = {
true,
false,
"blue",
},
[196263] = {
true,
false,
"deepskyblue",
},
[220815] = {
true,
false,
"blue",
},
[180091] = {
true,
false,
"mediumpurple",
},
[190381] = {
true,
false,
"fuchsia",
},
[115395] = {
true,
false,
"mediumpurple",
},
[197671] = {
true,
false,
"blue",
},
[216340] = {
true,
false,
"fuchsia",
},
[167876] = {
true,
false,
"fuchsia",
},
[104270] = {
true,
false,
"mediumpurple",
},
[80805] = {
true,
false,
"mediumpurple",
},
[130400] = {
true,
false,
"mediumpurple",
},
[205727] = {
true,
false,
"blue",
},
[199717] = {
true,
false,
"mediumpurple",
},
[197799] = {
true,
false,
"deepskyblue",
},
[157634] = {
true,
false,
"blue",
},
[59552] = {
true,
false,
"blue",
},
[45704] = {
true,
false,
"dimgray",
},
[198311] = {
true,
false,
"mediumpurple",
},
[129552] = {
true,
false,
"mediumpurple",
},
[162047] = {
true,
false,
"mediumpurple",
},
[198308] = {
true,
false,
"mediumpurple",
},
[165762] = {
true,
false,
"fuchsia",
},
[132126] = {
true,
false,
"blue",
},
[155090] = {
true,
false,
"deepskyblue",
},
[180335] = {
true,
false,
"deepskyblue",
},
[175550] = {
true,
false,
"fuchsia",
},
[220946] = {
true,
false,
"mediumpurple",
},
[169924] = {
true,
false,
"mediumpurple",
},
[186420] = {
true,
false,
"deepskyblue",
},
[167111] = {
true,
false,
"deepskyblue",
},
[211228] = {
true,
false,
"blue",
},
[189227] = {
true,
false,
"fuchsia",
},
[151127] = {
true,
false,
"fuchsia",
},
[99891] = {
true,
false,
"mediumpurple",
},
[189234] = {
true,
false,
"fuchsia",
},
[129527] = {
true,
false,
"blue",
},
[168007] = {
true,
false,
"blue",
},
[179388] = {
true,
false,
"deepskyblue",
},
[101075] = {
true,
false,
"fuchsia",
},
[176575] = {
true,
false,
"deepskyblue",
},
[91000] = {
true,
false,
"mediumpurple",
},
[131819] = {
true,
false,
"deepskyblue",
},
[176959] = {
true,
false,
"deepskyblue",
},
[80935] = {
true,
false,
"deepskyblue",
},
[114624] = {
true,
false,
"mediumpurple",
},
[169159] = {
true,
false,
"gold",
},
[131436] = {
true,
false,
"mediumpurple",
},
[194990] = {
true,
false,
"deepskyblue",
},
[137830] = {
true,
false,
"blue",
},
[96664] = {
true,
false,
"blue",
},
[212765] = {
true,
false,
"mediumpurple",
},
[95769] = {
true,
false,
"deepskyblue",
},
[128434] = {
true,
false,
"blue",
},
[185528] = {
true,
false,
"deepskyblue",
},
[185656] = {
true,
false,
"deepskyblue",
},
[41139] = {
true,
false,
"blue",
},
[156245] = {
true,
false,
"mediumpurple",
},
[164557] = {
true,
false,
"mediumpurple",
},
[155221] = {
true,
false,
"deepskyblue",
},
[199595] = {
true,
false,
"mediumpurple",
},
[131677] = {
true,
false,
"fuchsia",
},
[185529] = {
true,
false,
"fuchsia",
},
[165197] = {
true,
false,
"fuchsia",
},
[167607] = {
true,
false,
"mediumpurple",
},
[40167] = {
true,
false,
"blue",
},
[114266] = {
true,
false,
"deepskyblue",
},
[216328] = {
true,
false,
"fuchsia",
},
[129529] = {
true,
false,
"fuchsia",
},
[95834] = {
true,
false,
"fuchsia",
},
[45935] = {
true,
false,
"deepskyblue",
},
[83025] = {
true,
false,
"blue",
},
[189878] = {
true,
false,
"yellow",
},
[218884] = {
true,
false,
"fuchsia",
},
[101438] = {
true,
false,
"blue",
},
[114632] = {
true,
false,
"deepskyblue",
},
[205735] = {
true,
false,
"blue",
},
[198702] = {
true,
false,
"mediumpurple",
},
[173190] = {
true,
false,
"deepskyblue",
},
[208165] = {
true,
false,
"deepskyblue",
},
[168396] = {
true,
false,
"mediumpurple",
},
[86372] = {
true,
false,
"mediumpurple",
},
[133870] = {
true,
false,
"deepskyblue",
},
[179010] = {
true,
false,
"deepskyblue",
},
[95771] = {
true,
false,
"blue",
},
[179847] = {
true,
false,
"fuchsia",
},
[151773] = {
true,
false,
"blue",
},
[168882] = {
true,
false,
"fuchsia",
},
[189706] = {
true,
false,
"yellow",
},
[167967] = {
true,
false,
"blue",
},
[83892] = {
true,
false,
"deepskyblue",
},
[114633] = {
true,
false,
"mediumpurple",
},
[80938] = {
true,
false,
"mediumpurple",
},
[88163] = {
true,
false,
"fuchsia",
},
[163126] = {
true,
false,
"deepskyblue",
},
[98521] = {
true,
false,
"fuchsia",
},
[178141] = {
true,
false,
"blue",
},
[170572] = {
true,
false,
"blue",
},
[164562] = {
true,
false,
"fuchsia",
},
[211290] = {
true,
false,
"mediumpurple",
},
[198577] = {
true,
false,
"blue",
},
[199549] = {
true,
false,
"fuchsia",
},
[208244] = {
true,
false,
"deepskyblue",
},
[162133] = {
true,
false,
"fuchsia",
},
[184331] = {
true,
false,
"mediumpurple",
},
[198501] = {
true,
false,
"deepskyblue",
},
[164563] = {
true,
false,
"blue",
},
[221979] = {
true,
false,
"fuchsia",
},
[216293] = {
true,
false,
"blue",
},
[179269] = {
true,
false,
"fuchsia",
},
[189464] = {
true,
false,
"blue",
},
[171341] = {
true,
false,
"deepskyblue",
},
[178630] = {
true,
false,
"deepskyblue",
},
[223770] = {
true,
false,
"blue",
},
[163121] = {
true,
false,
"blue",
},
[100527] = {
true,
false,
"deepskyblue",
},
[84520] = {
true,
false,
"mediumpurple",
},
[180323] = {
true,
false,
"fuchsia",
},
[165076] = {
true,
false,
"blue",
},
[211816] = {
true,
false,
"fuchsia",
},
[129788] = {
true,
false,
"deepskyblue",
},
[212793] = {
true,
false,
"blue",
},
[214012] = {
true,
false,
"mediumpurple",
},
[133685] = {
true,
false,
"fuchsia",
},
[83390] = {
true,
false,
"deepskyblue",
},
[113537] = {
true,
false,
"mediumpurple",
},
[185537] = {
true,
false,
"blue",
},
[171343] = {
true,
false,
"fuchsia",
},
[199547] = {
true,
false,
"fuchsia",
},
[223772] = {
true,
false,
"blue",
},
[191164] = {
true,
false,
"fuchsia",
},
[184131] = {
true,
false,
"fuchsia",
},
[190690] = {
true,
false,
"mediumpurple",
},
[198709] = {
true,
false,
"mediumpurple",
},
[114316] = {
true,
false,
"deepskyblue",
},
[75506] = {
true,
false,
"deepskyblue",
},
[102232] = {
true,
false,
"blue",
},
[104278] = {
true,
false,
"fuchsia",
},
[198326] = {
true,
false,
"mediumpurple",
},
[184132] = {
true,
false,
"blue",
},
[45919] = {
true,
false,
"mediumpurple",
},
[190686] = {
true,
false,
"blue",
},
[195930] = {
true,
false,
"mediumpurple",
},
[227513] = {
true,
false,
"deepskyblue",
},
[130404] = {
true,
false,
"mediumpurple",
},
[187969] = {
true,
false,
"blue",
},
[65317] = {
true,
false,
"mediumpurple",
},
[45915] = {
true,
false,
"mediumpurple",
},
[206064] = {
true,
false,
"blue",
},
[129374] = {
true,
false,
"mediumpurple",
},
[114317] = {
true,
false,
"deepskyblue",
},
[189555] = {
true,
false,
"deepskyblue",
},
[184580] = {
true,
false,
"deepskyblue",
},
[223775] = {
true,
false,
"blue",
},
[164702] = {
true,
false,
"fuchsia",
},
[98368] = {
true,
false,
"mediumpurple",
},
[199368] = {
true,
false,
"fuchsia",
},
[220195] = {
true,
false,
"deepskyblue",
},
[183495] = {
true,
false,
"mediumpurple",
},
[127111] = {
true,
false,
"blue",
},
[214441] = {
true,
false,
"fuchsia",
},
[223776] = {
true,
false,
"blue",
},
[214697] = {
true,
false,
"fuchsia",
},
[176974] = {
true,
false,
"fuchsia",
},
[81212] = {
true,
false,
"mediumpurple",
},
[220196] = {
true,
false,
"fuchsia",
},
[220978] = {
true,
false,
"fuchsia",
},
[175576] = {
true,
false,
"fuchsia",
},
[40357] = {
true,
false,
"fuchsia",
},
[223777] = {
true,
false,
"blue",
},
[129370] = {
true,
false,
"deepskyblue",
},
[205619] = {
true,
false,
"mediumpurple",
},
[219046] = {
true,
false,
"deepskyblue",
},
[220197] = {
true,
false,
"mediumpurple",
},
[127106] = {
true,
false,
"fuchsia",
},
[98081] = {
true,
false,
"fuchsia",
},
[165483] = {
true,
false,
"fuchsia",
},
[210269] = {
true,
false,
"mediumpurple",
},
[185032] = {
true,
false,
"mediumpurple",
},
[205620] = {
true,
false,
"mediumpurple",
},
[213932] = {
true,
false,
"mediumpurple",
},
[129600] = {
true,
false,
"deepskyblue",
},
[114319] = {
true,
false,
"blue",
},
[115406] = {
true,
false,
"deepskyblue",
},
[164707] = {
true,
false,
"mediumpurple",
},
[195135] = {
true,
false,
"fuchsia",
},
[150251] = {
true,
false,
"blue",
},
[164461] = {
true,
false,
"blue",
},
},
["castbar_icon_size"] = "same as castbar plus healthbar",
["bossmod_aura_width"] = 33,
["auras_per_row_amount"] = 4,
["auto_toggle_friendly_enabled"] = true,
["cast_statusbar_spark_width"] = 8,
["target_highlight_texture"] = "Interface\\AddOns\\Plater\\images\\selection_indicator2",
},
["Default"] = {
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 632,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Add the buff name in the trigger box.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Aura - Buff Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1671066705,
["url"] = "",
["Icon"] = 134229,
["Enabled"] = false,
["Revision"] = 37,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
["NpcNames"] = {
},
["SpellIds"] = {
191284,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Effect After Cast [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1670201853,
["url"] = "",
["Icon"] = 2175503,
["Enabled"] = false,
["Revision"] = 533,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Explosion Affix M+ [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Name"] = "Arrow Width",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 4,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 368,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Desc"] = "Add the debuff name in the trigger box.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Aura - Debuff Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203758,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1213,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Alert + Timer [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Cast start animation settings",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 7,
["Key"] = "timerList",
["Value"] = {
},
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670790652,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
["Enabled"] = false,
["Revision"] = 694,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Ultra Important [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation showing the explosion time.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Name"] = "Health Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.431372,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 0.5,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Width",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"200682",
"darkslateblue",
},
{
"192307",
"goldenrod",
},
{
"196838",
"maroon",
},
{
"193827",
"darkgreen",
},
{
"194043",
"darkgreen",
},
{
"156718",
"DRUID",
},
{
"395859",
"ROGUE",
},
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Time"] = 1669325410,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
["Enabled"] = true,
["Revision"] = 662,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Small Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a small animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670423785,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["Enabled"] = true,
["Revision"] = 572,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Important [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.5254901960784314,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Name"] = "Nameplate Size Offset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "nameplateSizeOffset",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.7137255072593689,
0,
0.5631310641765594,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dot Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option10",
["Value"] = "Extra Texture",
["Name"] = "Extra Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Extra Texture",
},
{
["Type"] = 4,
["Name"] = "Show Extra Texture",
["Value"] = false,
["Key"] = "showExtraTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Extra Texture",
},
{
["Type"] = 1,
["Key"] = "skullColor",
["Value"] = {
1,
0.4627450980392157,
0,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "skullAlpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Scale",
["Min"] = 0.4,
["Name"] = "Scale",
["Value"] = 0.6,
["Key"] = "skullScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 7,
["Name"] = "Npc Color By NpcID",
["Value"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the npcID, value is the color name",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1626382829,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
["Enabled"] = true,
["Revision"] = 375,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Aura - Blink by Time Left [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "blinkEnabled",
["Value"] = true,
["Name"] = "Blink Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable blink",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = true,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable glows",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = false,
["Name"] = "Change NamePlate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'true' to enable nameplate color change",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the blink effect only",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 3,
["Key"] = "timeleftToBlink",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Timeleft to Blink",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "time to complete a blink loop",
["Min"] = 0.5,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "blinkSpeed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.6,
["Key"] = "blinkMaxAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color of the blink",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.2862745098039216,
0.00392156862745098,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "nameplate color if ChangeNameplateColor is true",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "timerColorEnabled",
["Value"] = true,
["Name"] = "Timer Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable changes in the color of the time left text",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Warning",
["Value"] = 8,
["Key"] = "timeLeftWarning",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Critical",
["Value"] = 3,
["Key"] = "timeLeftCritical",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "warningColor",
["Value"] = {
1,
0.8705882352941177,
0,
1,
},
["Name"] = "Warning Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left entered in a warning zone",
},
{
["Type"] = 1,
["Key"] = "criticalColor",
["Value"] = {
1,
0.07450980392156863,
0,
1,
},
["Name"] = "Critical Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left is critical",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1669340442,
["url"] = "",
["Icon"] = "interface/addons/plater/images/add_id_icon",
["Enabled"] = false,
["Revision"] = 161,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Tag Number [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514190,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
["Enabled"] = false,
["Revision"] = 547,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Glowing [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Key"] = "segmentsAmount",
["Value"] = 7,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"385536",
"maroon",
},
{
"198750",
"midnightblue",
},
{
"360850",
"lime",
},
{
"212784",
"deepskyblue",
},
{
"207980",
"midnightblue",
},
{
"199033",
"gold",
},
{
"199034",
"gold",
},
{
"200969",
"orange",
},
{
"394512",
"indigo",
},
{
"397881",
"deepskyblue",
},
{
"396020",
"khaki",
},
},
["Name"] = "Cast Color by SpellID",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
["Time"] = 1669339628,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
["Enabled"] = true,
["Revision"] = 878,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight the target name",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Important Target [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shows the target name in a separate box",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Name"] = "Shake Amplitude",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
{
["Type"] = 6,
["Name"] = "Option 27",
["Value"] = 0,
["Key"] = "option27",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 28",
["Value"] = "Target Options",
["Key"] = "option28",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 14,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "targetNameSize",
},
{
["Type"] = 4,
["Name"] = "Use Class Color",
["Value"] = true,
["Key"] = "colorByClass",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Text Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Background Color",
["Value"] = {
0,
0,
0,
0.9846720322966576,
},
["Key"] = "targetBgColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Border Color",
["Value"] = {
0,
0,
0,
1,
},
["Key"] = "targetBgBorderColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 160,
["Desc"] = "",
["Min"] = 30,
["Name"] = "Frame Width",
["Value"] = 90,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "targetFrameWidth",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Key"] = "targetFrameHeight",
["Value"] = 20,
["Name"] = "Frame Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1673994690,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Enabled"] = false,
["Revision"] = 828,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Very Important [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 5,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["Time"] = 1670427654,
["url"] = "",
["Icon"] = "interface/addons/plater/media/exclamation_64",
["Enabled"] = true,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color of  add",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Warning [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0.4392157196998596,
0.458823561668396,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Flash Nameplate",
["Value"] = true,
["Key"] = "useFlash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Flash Nameplate",
},
{
["Type"] = 7,
["Name"] = "NpcID to Color",
["Value"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Time"] = 1673726734,
["url"] = "",
["Icon"] = 236209,
["Enabled"] = true,
["Revision"] = 18,
["semver"] = "",
["Author"] = "Tiranaa-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Aura While Casting [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203603,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = false,
["Revision"] = 1194,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Big Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Name"] = "Flash Duration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1670428019,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = false,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Butazzul-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Circle AoE [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.15,
["Name"] = "Rotation Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "rotationDuration",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Name"] = "Animation Start Duration",
["Value"] = 0.3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "animStartDuration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Key"] = "textureStartAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Start Alpha",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Texture Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureScale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureAlpha",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Time"] = 1611844883,
["url"] = "",
["Icon"] = 135945,
["Enabled"] = true,
["Revision"] = 186,
["semver"] = "",
["Author"] = "Symantec-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Time to die Spiteful affix",
["NpcNames"] = {
"174773",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "M+ Spiteful",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Time to Die",
["Name"] = "Time to Die",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 10,
["Key"] = "bgWidth",
["Value"] = 27,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Width",
},
{
["Type"] = 1,
["Key"] = "bgColor",
["Value"] = {
0.5058823529411764,
0.07058823529411765,
1,
1,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 24,
["Desc"] = "",
["Min"] = 7,
["Key"] = "textSize",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Text Size",
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option11",
["Value"] = "Targeting",
["Name"] = "Targeting",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Target instead of Name",
["Value"] = true,
["Key"] = "switchTargetName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Color if targeting You",
["Value"] = true,
["Key"] = "useTargetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Color if targeting You",
["Value"] = {
0.07058823529411765,
0.6196078431372549,
0,
1,
},
["Key"] = "targetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option11",
["Value"] = 0,
["Name"] = "Option 11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1669324381,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = false,
["Revision"] = 887,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Quick Flash [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["Time"] = 1670427838,
["url"] = "",
["Icon"] = "interface/addons/plater/media/duck_64",
["Enabled"] = true,
["Revision"] = 111,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Non Elite Trash [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0.062745101749897,
0.062745101749897,
0.0941176563501358,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Scale",
["Value"] = true,
["Key"] = "useNameplateScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Nameplate Scale",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Nameplate Scale",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669325411,
["url"] = "",
["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
["Enabled"] = true,
["Revision"] = 101,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Shield Interrupt [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1676905232,
["url"] = "",
["Icon"] = 4038101,
["Enabled"] = false,
["Revision"] = 73,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - On Going Cast [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Dots Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Name"] = "Blink Speed",
["Value"] = 0.4,
["Key"] = "speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Name"] = "Blink Min Alpha",
["Value"] = 0,
["Key"] = "minAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "maxAlpha",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.01960784383118153,
0,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604354364,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["Enabled"] = true,
["Revision"] = 206,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Countdown",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1668886509,
["url"] = "",
["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
["Enabled"] = true,
["Revision"] = 33,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Fixate by Unit Buff [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0,
0.5568627450980392,
0.03529411764705882,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Time"] = 1604696441,
["url"] = "",
["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
["Enabled"] = false,
["Revision"] = 63,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Auto set skull marker",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Auto Set Skull",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Auto set a raid target Skull on the unit.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "onlyInCombat",
["Value"] = false,
["Name"] = "Only in Combat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Set the mark only if the unit is in combat.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669340350,
["url"] = "",
["Icon"] = "interface/addons/plater/media/radio_64",
["Enabled"] = true,
["Revision"] = 106,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Explode on Die [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useReverse",
["Value"] = false,
["Name"] = "Reverse Health Bar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useShake",
["Value"] = false,
["Name"] = "Enable Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "How strong is the shake.",
["Min"] = 0.05,
["Key"] = "shakeAmplitude",
["Value"] = 0.2,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 70,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useBackground",
["Value"] = true,
["Name"] = "Show Red Background",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Red Background",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1604357453,
["url"] = "",
["Icon"] = 136048,
["Enabled"] = true,
["Revision"] = 233,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show the energy amount above the nameplate.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Unit - Show Energy [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "add trigger",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Name"] = "Option 2",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 16,
["Key"] = "fontSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.803921568627451,
0.803921568627451,
0.803921568627451,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514185,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 506,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Just stop casting",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Stop Casting [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "segmentsAmount",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1604239880,
["url"] = "",
["Icon"] = 1029718,
["Enabled"] = true,
["Revision"] = 269,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["Desc"] = "Show above the nameplate who is the player fixated",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Fixate [Plater]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604087921,
["url"] = "",
["Icon"] = 841383,
["Enabled"] = true,
["Revision"] = 266,
["semver"] = "",
["Author"] = "Tecno-Azralon",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["NpcNames"] = {
},
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["PlaterCore"] = 1,
["Name"] = "Fixate On You [Plater]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage(unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    self.BigSparkle = self.BigSparkle or Plater:CreateImage(self.FrameOverlay)\n    self.BigSparkle.texture = [[Interface\\AddOns\\Plater\\images\\cast_bar_vertical_spark.png]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    self.BigSparkle:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    self.BigSparkle:ClearAllPoints()\n    self.BigSparkle:SetPoint (\"topleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 0)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\nend\n\n\n\n\n",
["Time"] = 1719711112,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_important_bycolor.png",
["Enabled"] = true,
["Revision"] = 831,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode, summon or transform if the cast passes.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    self.BigSparkle:Show()\n    self.BigSparkle:SetWidth(8)\n    self.BigSparkle:SetHeight(self:GetHeight() + unitFrame.healthBar:GetHeight())\n    self.BigSparkle:SetScale(1)\n    self.BigSparkle:SetVertexColor(1,1, 1, 1)\n    envTable.overlaySpark:Hide()\n    \n    self.Spark:Hide()\n    \n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.dotAnimation:SetPoint(\"bottomright\", self, \"bottomright\", scriptTable.config.xOffset, -scriptTable.config.yOffset)\n    \n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
["SpellIds"] = {
432967,
446717,
451379,
451067,
448013,
448057,
322486,
341709,
321226,
429428,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation changing the cast bar color.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "To get a list of color names, use: /plater colors",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Health Bar Height Mod",
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.431372,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 6,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["version"] = -1,
["Name"] = "Cast - Important by Color [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711125,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_shining_green.png",
["Enabled"] = true,
["Revision"] = 873,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\n    \nend",
["SpellIds"] = {
434802,
448248,
453840,
337249,
324293,
49184,
449455,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a big animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Flash",
["Value"] = "Flash:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.8,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Key"] = "shakeAmplitude",
["Value"] = 5,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation",
["Value"] = "Dot Animation:",
["Key"] = "option14",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 19",
["Value"] = "Cast Bar",
["Key"] = "option19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["version"] = -1,
["Name"] = "Cast - Shining Green [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [214840] = {25}, --engorged crawler\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1719452142,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 156,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Name"] = "Vertical Line Alpha",
["Value"] = 0.79,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "indicatorAlpha",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Fill Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "fillColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "fillAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Fill Alpha",
},
},
["version"] = -1,
["Name"] = "Add - Health Markers [P]",
["NpcNames"] = {
"214840",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    --envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1719788204,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_special_ability.png",
["Enabled"] = true,
["Revision"] = 613,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "For unique abilities that are an important part of the fight against a bosses or mini bosse.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
451026,
452127,
446615,
433766,
432117,
448560,
440218,
441289,
447146,
438860,
448847,
449687,
456751,
449939,
336499,
322550,
320208,
321894,
276068,
423200,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["version"] = -1,
["Name"] = "Cast - Special Ability [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not self.FrameOverlay.LeapArrow1) then\n        \n        self.FrameOverlay.LeapArrow1 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow2 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow3 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        \n        local onPlayFunc = function()\n            --self.FrameOverlay.LeapArrow1:Show()\n            --self.FrameOverlay.LeapArrow2:Show()\n            --self.FrameOverlay.LeapArrow3:Show()            \n        end\n        local onStopFunc = function()\n            self.FrameOverlay.LeapArrow1:Hide()\n            self.FrameOverlay.LeapArrow2:Hide()\n            self.FrameOverlay.LeapArrow3:Hide()\n        end\n        \n        --first arrow animation\n        local animHub1 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow1, onPlayFunc, onStopFunc)\n        animHub1.alpha1 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub1.trans1 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub1.alpha2 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub1.trans2 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 2, 0.3, 8, 8)        \n        \n        self.FrameOverlay.LeapArrow1.animation = animHub1\n        \n        --second arrow animation\n        local animHub2 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow2, onPlayFunc, onStopFunc)\n        animHub2.alpha1 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub2.trans1 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub2.alpha2 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub2.trans2 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow2.animation = animHub2\n        \n        --third arrow animation\n        local animHub3 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow3, onPlayFunc, onStopFunc)\n        animHub3.alpha1 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub3.trans1 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub3.alpha2 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub3.trans2 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow3.animation = animHub3\n        \n        self.FrameOverlay.LeapArrowTextures = {\n            self.FrameOverlay.LeapArrow1,\n            self.FrameOverlay.LeapArrow2,\n            self.FrameOverlay.LeapArrow3\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations = {\n            alpha1Anim = {},\n            alpha2Anim = {},\n            trans1Anim = {},\n            trans2Anim = {},\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations.alpha1Anim = {animHub1.alpha1, animHub2.alpha1, animHub3.alpha1}\n        self.FrameOverlay.LeapArrowAnimations.alpha2Anim = {animHub1.alpha2, animHub2.alpha2, animHub3.alpha2}\n        self.FrameOverlay.LeapArrowAnimations.trans1Anim = {animHub1.trans1, animHub2.trans1, animHub3.trans1}\n        self.FrameOverlay.LeapArrowAnimations.trans2Anim = {animHub1.trans2, animHub2.trans2, animHub3.trans2}        \n        \n    end\n    \nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Hide()\n        local animation = texture.animation\n        animation:Stop()\n    end    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1724073562,
["url"] = "",
["Icon"] = 236171,
["Enabled"] = true,
["Revision"] = 139,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Modify a cast bar when the unit casts a spell with the same effect of the Warrior's Heroic Leap spell.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.bUseCastbarColor) then\n        Plater.SetCastBarColor (unitFrame, DetailsFramework:ParseColors(scriptTable.config.castbarColor))\n    end\n    \n    \n    if (scriptTable.config.bRenameSpell) then\n        self.Text:SetText(scriptTable.config.spellName) \n    end\n    \n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    for i, texture in ipairs(leapTextures) do\n        texture:SetTexture([[Interface\\AddOns\\Plater\\media\\arrow_right_64.tga]])\n        texture:ClearAllPoints()\n        texture:SetSize(self:GetHeight()*1.5, self:GetHeight()*1.5)\n        texture:SetRotation(math.pi - math.pi*0.75)        \n    end\n    \n    local startX = -10\n    leapTextures[1]:SetPoint(\"left\", self, \"left\", startX, -8)\n    leapTextures[2]:SetPoint(\"center\", self, \"center\", startX, -8)\n    leapTextures[3]:SetPoint(\"right\", self, \"right\", startX, -8)\n    \n    local animations = self.FrameOverlay.LeapArrowAnimations\n    local alpha1Animations = animations.alpha1Anim\n    local alpha2Animations = animations.alpha2Anim    \n    local trans1Animations = animations.trans1Anim\n    local trans2Animations = animations.trans2Anim    \n    \n    local castTime = envTable._Duration\n    \n    --on fade in\n    local fadeInDuration =  castTime/6\n    \n    C_Timer.After(fadeInDuration, function()\n            for i, texture in ipairs(leapTextures) do\n                texture:SetRotation(-math.pi*0.25)\n                --texture:Show()\n            end            \n    end)\n    \n    for i, alphaAnim in ipairs(alpha1Animations) do\n        alphaAnim:SetDuration(fadeInDuration)\n        alphaAnim:SetFromAlpha(0.3)\n        alphaAnim:SetToAlpha(1)\n    end\n    \n    for i, transAnim in ipairs(trans1Animations) do\n        transAnim:SetDuration(fadeInDuration)\n        transAnim:SetOffset(8, 20)\n    end\n    \n    --on fade out\n    local fadeOutDuration = castTime/2\n    \n    for i, alphaAnim in ipairs(alpha2Animations) do\n        alphaAnim:SetDuration(fadeOutDuration)\n        alphaAnim:SetFromAlpha(1)\n        alphaAnim:SetToAlpha(0.3)\n    end\n    \n    for i, transAnim in ipairs(trans2Animations) do\n        transAnim:SetDuration(fadeOutDuration)\n        transAnim:SetOffset(8, -16)\n    end    \n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Show()\n        local animation = texture.animation\n        animation:Play()\n    end\n    \n    \n    --DetailsFramework:DebugVisibility(self.FrameOverlay.LeapArrow1)\nend",
["SpellIds"] = {
447141,
432967,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Play an animation when the cast is a Heroic Leap",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bRenameSpell",
["Value"] = true,
["Name"] = "Rename Spell",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Rename the name of the spell.",
},
{
["Type"] = 3,
["Key"] = "spellName",
["Value"] = "Heroic Leap",
["Name"] = "Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Name to show in the spell cast bar.",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bUseCastbarColor",
["Value"] = false,
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the cast bar color to the color selected below.",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
0.364705890417099,
0.1058823615312576,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
},
["version"] = -1,
["Name"] = "Cast - Heroic Leap [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.Spark:SetVertexColor( unpack(Plater.db.profile.cast_statusbar_spark_color) )\n    PixelUtil.SetSize( self.Spark, Plater.db.profile.cast_statusbar_spark_width, self:GetHeight() )\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1719711134,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_spark.png",
["Enabled"] = true,
["Revision"] = 75,
["semver"] = "",
["Author"] = "Tennah-These Go To Eleven",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Change the spark color to differentiate a cast from another.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the spark color\n    local sparkColor = scriptTable.config.sparkColor[tostring(envTable._SpellID)]\n    \n    self.Spark:SetVertexColor(DetailsFramework:ParseColors(sparkColor))\n    \n    self.Spark:SetWidth( self.Spark:GetWidth() * scriptTable.config.sparkWithScale )\n    self.Spark:SetHeight( self.Spark:GetHeight() * scriptTable.config.sparkHeightScale )\n    \nend\n\n\n",
["SpellIds"] = {
453140,
456713,
450088,
322614,
323730,
257348,
272422,
429427,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "In the box at right, add the spell id and the color.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "To get a list of colors, use: /plater colors",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Spark Width Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "sparkWithScale",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Name"] = "Spark Height Scale",
["Value"] = 1,
["Key"] = "sparkHeightScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 7,
["Key"] = "sparkColor",
["Value"] = {
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Spark Color [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719679972,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 551,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Healing effect that cannot be interrupted.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion + 5, castBar:GetHeight() + math.random(1, 5))\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        \n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2 + math.random(-2, 2))\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(1)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration + 0.5) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(1)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
432520,
320822,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Heal Stun [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local DF = DetailsFramework\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture2:Show()\n        unitFrame.CastSwipeAnimation2:Play()\n        unitFrame.StartSwipeAnimation2:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation2:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation2:Stop()\n                unitFrame.CastSwipeTexture2:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture2) then\n            return\n        end\n        \n        local circularTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n        circularTexture:SetPoint(\"center\", 0, 0)\n        circularTexture:SetSize(64, 64)\n        circularTexture:Hide()\n        \n        unitFrame.CastSwipeTexture2 = circularTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation2 = DF:CreateAnimationHub(circularTexture)\n        unitFrame.CastSwipeAnimation2:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation2.Rotation = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"rotation\", 1, 1, 360)\n        unitFrame.CastSwipeAnimation2.Trans = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"TRANSLATION\", 1, 1, 2, 2)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, function()circularTexture:Show() end)\n        \n        unitFrame.StartSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, nil, function()circularTexture:Hide() end)\n        \n        unitFrame.EndSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"alpha\", 1, 0.2, 1, 0)\n        \n        unitFrame.EndSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n        \n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719757483,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2_icon.png",
["Enabled"] = true,
["Revision"] = 318,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = options.textureScale\n    \n    local circularTexture = unitFrame.CastSwipeTexture2\n    \n    --texture settings\n    circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n    circularTexture:SetPoint(\"center\", 0, 0)\n    circularTexture:SetSize(64, 64)    \n    circularTexture:SetBlendMode(\"ADD\")\n    circularTexture:SetVertexColor(DetailsFramework:ParseColors(options.textureColor))\n    circularTexture:SetScale(targetScale)\n    circularTexture:SetAlpha(options.textureAlpha)\n    \n    --animations    \n    unitFrame.CastSwipeAnimation2.Rotation:SetDuration(options.rotationDuration)\n    unitFrame.CastSwipeAnimation2.Trans:SetDuration(options.rotationDuration)\n    \n    local randomOffset = 5\n    unitFrame.CastSwipeAnimation2.Trans:SetOffset(math.random(-randomOffset, randomOffset), math.random(-randomOffset, randomOffset))\n    \n    \n    unitFrame.StartSwipeAnimation2.Alpha:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Alpha:SetFromAlpha(options.textureStartAlpha)\n    unitFrame.StartSwipeAnimation2.Alpha:SetToAlpha(options.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation2.Scale:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation2.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation2.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)     \n    \nend\n\n\n\n\n",
["SpellIds"] = {
451102,
426787,
448888,
439811,
434796,
434793,
438879,
438473,
434252,
434829,
440468,
436205,
436246,
441395,
437533,
451965,
456902,
456900,
451996,
451939,
450077,
450079,
324909,
324922,
460092,
272711,
269266,
425974,
424879,
426771,
426786,
423324,
428879,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "How much time takes for one revolution.",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.2,
["Name"] = "Rotation Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.05,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Start Duration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureStartAlpha",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.9,
["Name"] = "Texture Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.6392157077789307,
0.6392157077789307,
0.6392157077789307,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["version"] = -1,
["Name"] = "Cast - AoE Hit All [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    for i = 1, 40 do\n        local auraInfo = C_UnitAuras.GetBuffDataByIndex(envTable._UnitID, i)\n        if (auraInfo) then\n            local spellId = auraInfo.spellId\n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        else\n            break\n        end\n    end\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1725033998,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 83,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
343470,
423228,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Aura is Shield [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.1, 0.5)\n    \n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    if (envTable._CanInterrupt) then\n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    else        \n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    end    \n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719694337,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_debuff.png",
["Enabled"] = true,
["Revision"] = 741,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (IsInRaid()) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    --textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:SetTexture([[Interface\\AddOns\\Plater\\images\\tail_rounded_white.png]])\n    textureStretched:SetHeight(castBar:GetHeight() + 2)\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    \n    --trail\n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    --local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    --Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
432448,
431309,
451107,
451119,
438618,
436322,
443507,
443436,
439341,
447261,
449444,
451224,
451241,
450095,
451612,
451395,
324987,
327393,
256709,
268230,
275836,
426308,
449153,
427461,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 7,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Name"] = "Spark Color",
["Value"] = {
0.9686275124549866,
0.9764706492424011,
1,
1,
},
["Key"] = "sparkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Trail Color",
["Value"] = {
0.4901961088180542,
0,
0.5490196347236633,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Debuff [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    self.simpleInterruptFlash = self.simpleInterruptFlash or  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    \n    self.simpleInterruptFlash:SetBlendMode (\"ADD\")\n    self.simpleInterruptFlash:SetDrawLayer(\"OVERLAY\", 7)\n    self.simpleInterruptFlash:SetPoint (\"center\", self, \"center\")\n    self.simpleInterruptFlash:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    self.simpleInterruptFlashAnimHub = self.simpleInterruptFlashAnimHub or Plater:CreateAnimationHub (self.simpleInterruptFlash, \n        function()\n            self.simpleInterruptFlash:Show()\n        end,\n        function()\n            self.simpleInterruptFlash:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    self.simpleInterruptFlashAnimHub.fadeIn = self.simpleInterruptFlashAnimHub.fadeIn or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    self.simpleInterruptFlashAnimHub.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    self.simpleInterruptFlashAnimHub.fadeOut = self.simpleInterruptFlashAnimHub.fadeOut or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    self.simpleInterruptFlashAnimHub.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    self.simpleInterruptFlashAnimHub:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711128,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = true,
["Revision"] = 958,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    self.simpleInterruptFlash:SetHeight(self:GetHeight() * 2.5 )\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    self.simpleInterruptFlashAnimHub:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
431333,
442210,
443430,
443433,
451871,
76711,
334748,
334749,
328667,
338353,
445207,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["version"] = -1,
["Name"] = "Cast - Simple Interrupt [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    --self.Text:Hide() \nend\n\n\n",
["Time"] = 1723155144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_ongoing.png",
["Enabled"] = true,
["Revision"] = 158,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.9\n    \n    envTable.dotAnimation1.dotTexture:SetVertexColor(unpack(scriptTable.config.dotColor))\n    \n    \n    envTable.dotAnimation1.dotTexture:Show()\n    \n    --envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    --envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \n    \n    \nend",
["SpellIds"] = {
431364,
423327,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Name"] = "Dots Y Offset",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Key"] = "speed",
["Value"] = 0.4,
["Name"] = "Blink Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "minAlpha",
["Value"] = 0,
["Name"] = "Blink Min Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.5,
["Key"] = "maxAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.5254902243614197,
0.5137255191802979,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["version"] = -1,
["Name"] = "Cast - Ongoing Cast [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1722866303,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_healalert.png",
["Enabled"] = true,
["Revision"] = 1254,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
450756,
452162,
322938,
322939,
324776,
324914,
326046,
340544,
335143,
327130,
256957,
275826,
429109,
451097,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["version"] = -1,
["Name"] = "Cast - Heal Cut [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.TextureWatchStep) then\n        \n        unitFrame.TextureWatchStep = true\n        \n        local animationFrame = CreateFrame(\"frame\", nil, unitFrame)\n        \n        \n        --> single animation group\n        local bearTrapAnimation = animationFrame:CreateAnimationGroup(\"beartrapAnimationGroup\")\n        bearTrapAnimation:SetLooping(\"NONE\")\n        \n        --> widgets:\n        \n        ----------------------------------------------\n        \n        local leftTrap  = animationFrame:CreateTexture(\"$parentleftTrapTexture\", \"ARTWORK\")\n        leftTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        leftTrap:SetDrawLayer(\"ARTWORK\", 0)\n        leftTrap:SetPoint(\"center\", animationFrame, \"center\", -48, 0)\n        leftTrap:SetSize(100, 100)\n        leftTrap:SetTexCoord(1, 0.0010000000149012, 0.0010000000149012, 1)\n        \n        --> animations for leftTrap\n        \n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(1)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetStartDelay(0.39999997615814)\n        leftTrap.rotation:SetDegrees(-90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(6)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetDegrees(90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        leftTrap.alpha:SetTarget(leftTrap)\n        leftTrap.alpha:SetOrder(6)\n        leftTrap.alpha:SetDuration(0.195999994874)\n        leftTrap.alpha:SetFromAlpha(1)\n        leftTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local rightTrap  = animationFrame:CreateTexture(\"$parentrightTrapTexture\", \"ARTWORK\")\n        rightTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        rightTrap:SetDrawLayer(\"ARTWORK\", 0)\n        rightTrap:SetPoint(\"center\", animationFrame, \"center\", 0, 0)\n        rightTrap:SetSize(100, 100)\n        \n        --> animations for rightTrap\n        \n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(1)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetStartDelay(0.39999997615814)\n        rightTrap.rotation:SetDegrees(90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(6)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetDegrees(-90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        rightTrap.alpha:SetTarget(rightTrap)\n        rightTrap.alpha:SetOrder(6)\n        rightTrap.alpha:SetDuration(0.195999994874)\n        rightTrap.alpha:SetFromAlpha(1)\n        rightTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local boots  = animationFrame:CreateTexture(\"$parentbootsTexture\", \"BORDER\")\n        boots:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_shoes.png]])\n        boots:SetDrawLayer(\"BORDER\", 0)\n        boots:SetPoint(\"center\", animationFrame, \"center\", -88, 35)\n        boots:SetSize(50, 50)\n        \n        --> animations for boots\n        \n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(1)\n        boots.alpha:SetDuration(0.31599998474121)\n        boots.alpha:SetFromAlpha(0)\n        boots.alpha:SetToAlpha(1)\n        boots.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        boots.rotation:SetTarget(boots)\n        boots.rotation:SetOrder(1)\n        boots.rotation:SetDuration(0.2960000038147)\n        boots.rotation:SetStartDelay(0.19999998807907)\n        boots.rotation:SetDegrees(40)\n        boots.rotation:SetOrigin(\"center\", 0, 0)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(1)\n        boots.translation:SetDuration(0.59599995613098)\n        boots.translation:SetOffset(63, -33)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(2)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(3)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(4)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(5)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(6)\n        boots.alpha:SetDuration(0.39599999785423)\n        boots.alpha:SetFromAlpha(1)\n        boots.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        unitFrame.BearTrapTextures = {leftTrap, rightTrap, boots}\n        unitFrame.BearTrapAnimationFrame = animationFrame\n        unitFrame.BearTrapAnimation = bearTrapAnimation\n        \n        \n        bearTrapAnimation:SetScript(\"OnPlay\", function()\n                boots:SetAlpha(0)\n                boots:Show()\n                leftTrap:Show()\n                rightTrap:Show()            \n        end)\n        \n        bearTrapAnimation:SetScript(\"OnFinished\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)       \n        \n        bearTrapAnimation:SetScript(\"OnStop\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)           \n        \n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimation:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1720031975,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_voidzone.png",
["Enabled"] = true,
["Revision"] = 220,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play an animation when the cast creates small zones in the ground that will damage if the player doesn't move.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimationFrame:SetSize(1, 1)\n    unitFrame.BearTrapAnimationFrame:ClearAllPoints()\n    unitFrame.BearTrapAnimationFrame:SetPoint(\"center\", unitFrame, \"center\", 30, 63)\n    unitFrame.BearTrapAnimationFrame:SetScale(0.5)\n    \n    unitFrame.BearTrapAnimation:Play()\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
450784,
451423,
445813,
445838,
438658,
433845,
456696,
451391,
324923,
323138,
340189,
326021,
320571,
321780,
345623,
333479,
334476,
320772,
257882,
424903,
426345,
422233,
445541,
428703,
439559,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Settings for the animation played when the cast creates small void zones in the ground.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Voidzone [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\n    unitFrame.CastSwipeTexture:Hide()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719758013,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = true,
["Revision"] = 281,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    unitFrame.CastSwipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetScaleFrom(1.05, 1.05)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(1, 1)    \n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
["SpellIds"] = {
453212,
451098,
427001,
438622,
446086,
447271,
437700,
439646,
448877,
451387,
331743,
320637,
327240,
257170,
257326,
257169,
423538,
428508,
428520,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.15,
["Name"] = "Rotation Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Start Duration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 0.3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureStartAlpha",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.8,
["Name"] = "Texture Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 0.8,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.7411764860153198,
0.7411764860153198,
0.7411764860153198,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["version"] = -1,
["Name"] = "Cast - AoE With Range [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the reference of the arrow texture\n    local movingArrowTexture = unitFrame._movingArrowTexture\n    \n    --if it doesn't exists yet, create now\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    local mAT = movingArrowTexture\n    \n    if (not mAT.movingAnimation) then\n        local onPlay = function()\n            mAT:Show() \n        end\n        \n        local onStop =  function()\n            mAT:Hide() \n        end\n        \n        mAT.movingAnimation = Plater:CreateAnimationHub( mAT, onPlay, onStop )\n        mAT.movingAnimation:SetLooping( \"REPEAT\" )\n    end\n    \n    if (not mAT.arrowAnimation) then\n        local arrowAnimation = Plater:CreateAnimation (mAT.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n        mAT.arrowAnimation = arrowAnimation\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    mAT.movingAnimation:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    local maxAlpha = scriptTable.config.arrowAlpha\n    \n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = mAT.movingAnimation:GetProgress()\n    \n    if (percent < 0.20) then\n        local value = DetailsFramework.Math.MapRangeClamped(0, 0.20, 0, maxAlpha, percent)\n        mAT:SetAlpha(value)\n        \n    elseif (percent > 0.8) then\n        local value = DetailsFramework.Math.MapRangeClamped(0.8, 1, maxAlpha, 0, percent)\n        mAT:SetAlpha(value)\n    end\n    \n    self.ThrottleUpdate = 0\n    \n    --mAT:SetAlpha(1)\nend",
["Time"] = 1719788095,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 754,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    \n    mAT:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    mAT:SetSize(16, self:GetHeight())\n    mAT:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    mAT:SetParent(self.FrameOverlay)\n    mAT:SetDrawLayer(\"overlay\",  7)\n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    mAT:SetDesaturated(scriptTable.config.desaturateArrow)        \n    \n    mAT:ClearAllPoints()\n    mAT:SetPoint(\"left\", self, \"left\", -16, 0)\n    \n    local arrowAnimation = mAT.arrowAnimation\n    arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    arrowAnimation:SetOffset(self:GetWidth(), 0)\n    \n    mAT.movingAnimation:Play()\n    \n    if (scriptTable.config.bChangeSpellName) then\n        self.Text:SetText(scriptTable.config.spellNameText)\n    end\n    \n    --DetailsFramework:DebugVisibility(mAT)\n\nend\n\n\n\n\n",
["SpellIds"] = {
431494,
426860,
448213,
434407,
439789,
434824,
453161,
435012,
439506,
443500,
434779,
451543,
439621,
441384,
441381,
447395,
456711,
448105,
323137,
321968,
331718,
331721,
325223,
340160,
321834,
320596,
324323,
333488,
323496,
333477,
256627,
257292,
454438,
269029,
257862,
425027,
449130,
428202,
448640,
427869,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.73,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "animSpeed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Speed",
},
{
["Type"] = 4,
["Name"] = "Use White Arrow",
["Value"] = false,
["Key"] = "desaturateArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
{
["Type"] = 6,
["Key"] = "option8",
["Value"] = 0,
["Name"] = "Option 8",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bChangeSpellName",
["Value"] = true,
["Name"] = "Change Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the spell name to the text entered below",
},
{
["Type"] = 3,
["Key"] = "spellNameText",
["Value"] = "Frontal",
["Name"] = "New Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "The customized spell name",
},
},
["version"] = -1,
["Name"] = "Cast - Frontal Cone [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719788550,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\aura_castbar.png",
["Enabled"] = true,
["Revision"] = 27,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show a castbar for the aura duration.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local auraDuration = envTable._Duration\n    local altCastId = 1\n    \n    ---@class plater_altcastbarconfig : table\n    ---@field iconTexture string\n    ---@field iconTexcoord table\n    ---@field iconAlpha number\n    ---@field text string\n    ---@field texture any\n    ---@field color any\n    ---@field isChanneling boolean\n    ---@field canInterrupt boolean\n    ---@field height number\n    ---@field iconSize number\n    ---@field textSize number\n    ---@field spellNameAnchor df_anchor\n    ---@field timerAnchor df_anchor\n    ---@field iconAnchor df_anchor\n    \n    local configTable = {\n        iconTexture = envTable._Texture,\n        text = envTable._SpellName,\n        color = \"gray\",\n        isChanneling = true,\n        canInterrupt = false,\n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        \n    }\n    \n    Plater.SetAltCastBar(unitFrame.PlateFrame, configTable, auraDuration, envTable._StartTime, altCastId)\n    \nend\n\n\n",
["SpellIds"] = {
438494,
335141,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Aura - Is Cast Bar [P]",
["NpcNames"] = {
},
},
},
["saved_cvars_last_change"] = {
["nameplateShowSelf"] = "Interface/AddOns/Blizzard_SharedXMLBase/CvarUtil.lua:72",
["NamePlateClassificationScale"] = "Interface/AddOns/Blizzard_SettingsDefinitions_Frame/Mainline/InterfaceOverrides.lua:20",
["NamePlateVerticalScale"] = "Interface/AddOns/Blizzard_SettingsDefinitions_Frame/Mainline/InterfaceOverrides.lua:19",
["NamePlateHorizontalScale"] = "Interface/AddOns/Blizzard_SettingsDefinitions_Frame/Mainline/InterfaceOverrides.lua:18",
},
["indicator_raidmark_scale"] = 0.9999999403953552,
["aura2_y_offset"] = 5,
["expansion_triggerwipe"] = {
[9] = true,
[10] = true,
},
["npc_cache"] = {
[212786] = {
"驭虚者",
"驭雷栖巢",
"zhCN",
},
[207198] = {
"被诅咒的雷霆使",
"UNKNOWN",
"zhCN",
},
[207197] = {
"被诅咒的雷鸫守卫",
"UNKNOWN",
"zhCN",
},
[209801] = {
"军需官科拉泰特",
"UNKNOWN",
"zhCN",
},
},
["health_selection_overlay_alpha"] = 0.09999999403953552,
["script_data_trash"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1625793282,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1154,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["NpcNames"] = {
},
["SpellIds"] = {
350421,
355787,
348513,
},
["Name"] = "Cast - Alert + Timer [P]",
["PlaterCore"] = 1,
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Cast start animation settings",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 7,
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Value"] = {
{
"350421",
"5",
},
{
"355787",
"15",
},
{
"348513",
"14",
},
{
"348513",
"14",
},
},
["Key"] = "timerList",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["__TrashAt"] = 1724498568,
},
},
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
},
["script_auto_imported"] = {
["Cast - Important by Color [P]"] = 2,
["Aura - Buff Alert"] = 15,
["Cast - Effect After Cast [P]"] = 2,
["Explosion Affix M+"] = 14,
["Aura - Debuff Alert"] = 12,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Ultra Important"] = 14,
["Add - Health Markers [P]"] = 3,
["Cast - Small Alert"] = 12,
["Add - Important [P]"] = 4,
["Aura - Blink Time Left"] = 13,
["Add - Tag Number [P]"] = 2,
["Cast - Special Ability [P]"] = 3,
["Cast - Glowing [P]"] = 10,
["Cast - Spark Color [P]"] = 2,
["Cast - Heal Stun [P]"] = 2,
["Aura - Is Cast Bar [P]"] = 1,
["Add - Explode on Die [P]"] = 1,
["Cast - Important Target [P]"] = 2,
["Cast - AoE With Range [P]"] = 2,
["Cast - Voidzone [P]"] = 2,
["Cast - Shining Green [P]"] = 3,
["Cast - Quick Flash"] = 2,
["Cast - Alert + Timer [P]"] = 4,
["Cast - AoE Hit All [P]"] = 3,
["Cast - Debuff [P]"] = 2,
["Aura is Shield [P]"] = 5,
["Add - Warning [P]"] = 5,
["Cast - Simple Interrupt [P]"] = 2,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - Ongoing Cast [P]"] = 4,
["Cast - Heroic Leap [P]"] = 3,
["Cast - Heal Cut [P]"] = 3,
["Unit - Show Energy"] = 11,
["Auto Set Skull"] = 11,
["Cast - Very Important"] = 15,
["Add - Non Elite Trash [P]"] = 4,
["Cast - Circular Swipe"] = 4,
["Cast - Shield Interrupt"] = 2,
["Cast - Stop Casting"] = 4,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Frontal Cone"] = 17,
["Fixate"] = 11,
["Spiteful Affix"] = 3,
["Countdown"] = 11,
["Cast - On Going Cast [P]"] = 2,
["Fixate On You"] = 11,
},
["range_check_alpha"] = 0.6499999761581421,
["aura_alpha"] = 0.8499999642372131,
["hook_auto_imported"] = {
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Color Automation"] = 1,
["Hide Neutral Units"] = 1,
["Cast Bar Icon Config"] = 2,
["Execute Range"] = 1,
["Combo Points"] = 6,
["Attacking Specific Unit"] = 2,
["Target Color"] = 3,
["Aura Reorder"] = 3,
["Extra Border"] = 2,
},
["aura2_x_offset"] = 0,
["saved_cvars"] = {
["nameplateShowSelf"] = "1",
["NamePlateClassificationScale"] = "1",
["NamePlateVerticalScale"] = "1",
["NamePlateHorizontalScale"] = "1",
},
["login_counter"] = 5,
["hover_highlight_alpha"] = 0.2999999821186066,
["plate_config"] = {
["global_health_height"] = 12,
["friendlyplayer"] = {
["actorname_text_spacing"] = 9,
["level_text_alpha"] = 0.699999988079071,
},
["global_health_width"] = 112,
["player"] = {
["power_percent_text_enabled"] = false,
["percent_text_enabled"] = false,
["health_incombat"] = {
nil,
30,
},
["health"] = {
nil,
30,
},
},
["friendlynpc"] = {
["level_text_alpha"] = 0.699999988079071,
},
["enemyplayer"] = {
["actorname_text_spacing"] = 11,
["level_text_alpha"] = 0.699999988079071,
},
["enemynpc"] = {
["cast"] = {
150,
20,
},
["actorname_text_spacing"] = 18,
["cast_incombat"] = {
150,
20,
},
["level_text_alpha"] = 0.699999988079071,
["percent_text_size"] = 17,
["health_incombat"] = {
150,
30,
},
["health"] = {
150,
30,
},
["actorname_text_size"] = 19,
},
},
["aura_y_offset"] = 5,
["resources_settings"] = {
["chr"] = {
["Player-959-0562ADB2"] = "Essence",
["Player-959-0505BE64"] = "Chi",
},
},
["number_region"] = "eastasia",
["hook_data"] = {
{
["Enabled"] = false,
["Revision"] = 50,
["semver"] = "",
["LastHookEdited"] = "",
["Time"] = 1547392935,
["Author"] = "Kastfall-Azralon",
["Name"] = "Color Automation [Plater]",
["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
},
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 73,
["semver"] = "",
["LastHookEdited"] = "",
["Time"] = 1541606242,
["Author"] = "Izimode-Azralon",
["Name"] = "Hide Neutral Units [Plater]",
["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
},
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["url"] = "",
["Icon"] = 1990989,
["HooksTemp"] = {
},
},
{
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
},
["Time"] = 1596791840,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 574574,
["Enabled"] = false,
["Revision"] = 93,
["Options"] = {
},
["Author"] = "Kastfall-Azralon",
["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
["Name"] = "Reorder Nameplate [Plater]",
["PlaterCore"] = 1,
["semver"] = "",
["LastHookEdited"] = "",
["version"] = -1,
},
{
["Enabled"] = false,
["Revision"] = 59,
["semver"] = "",
["LastHookEdited"] = "",
["Time"] = 1554138845,
["Author"] = "Izimode-Azralon",
["Name"] = "Don't Have Aura [Plater]",
["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
},
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 136207,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 176,
["semver"] = "",
["LastHookEdited"] = "",
["Time"] = 1547409079,
["Author"] = "Tecno-Azralon",
["Name"] = "Extra Border [Plater]",
["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
},
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 133689,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 93,
["semver"] = "",
["LastHookEdited"] = "",
["Time"] = 1552354619,
["Author"] = "Izimode-Azralon",
["Name"] = "Current Target Color [Plater]",
["Desc"] = "Changes the target color to the color set in the constructor script.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
},
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 878211,
["HooksTemp"] = {
},
},
{
["HooksTemp"] = {
},
["Hooks"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
},
["Time"] = 1597097268,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
["Enabled"] = false,
["Revision"] = 348,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Icon Settings",
["Value"] = "Icon Settings:",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Icon",
["Value"] = true,
["Key"] = "showIcon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show the castbar icon when enabled",
},
{
["Type"] = 4,
["Name"] = "Icon on Left Side",
["Value"] = true,
["Key"] = "iconOnLeftSide",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
},
{
["Type"] = 4,
["Key"] = "useFullSize",
["Value"] = false,
["Name"] = "Use Big Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Fine tune the icon size",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0,
["Name"] = "Icon Size Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "iconSizeOffset",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Space between the icon and the cast bar",
["Min"] = -5,
["Name"] = "Icon Padding",
["Value"] = 0,
["Key"] = "iconPadding",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Interrupt Texture",
["Value"] = "Can't Interrupt Texture:",
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Texture",
["Value"] = true,
["Key"] = "showTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
},
{
["Type"] = 3,
["Name"] = "Texture Path",
["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
["Key"] = "iconTexturePath",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Insert the path for the texture",
},
{
["Type"] = 4,
["Name"] = "Texture Desaturated",
["Value"] = true,
["Key"] = "desaturatedTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enbaled, texture is shown in black & white",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
0.3056715726852417,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Select the color of the texture",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture width",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 10,
["Name"] = "Texture Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureWidth",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
["Min"] = -16,
["Name"] = "Texture Height Mod",
["Value"] = 0,
["Key"] = "textureHeightMod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture position",
["Min"] = -32,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Texture Position",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "texturePosition",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust the texture transparency",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
},
["Author"] = "Ditador-Azralon",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
["Name"] = "Cast Bar Icon Settings [P]",
["PlaterCore"] = 1,
["semver"] = "",
["LastHookEdited"] = "",
["version"] = -1,
},
{
["Enabled"] = false,
["Revision"] = 84,
["semver"] = "",
["LastHookEdited"] = "",
["Time"] = 1547406548,
["Author"] = "Ahwa-Azralon",
["Name"] = "Execute Range [Plater]",
["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 135358,
["HooksTemp"] = {
},
},
{
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
},
["Time"] = 1620377377,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
["Enabled"] = false,
["Revision"] = 363,
["Options"] = {
{
["Type"] = 1,
["Key"] = "color",
["Value"] = {
0.5019607843137255,
0.5019607843137255,
0,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBarColor",
["Value"] = true,
["Name"] = "Change Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBorderColor",
["Value"] = false,
["Name"] = "Change Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "resetColors",
["Value"] = true,
["Name"] = "Reset Colors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["Author"] = "Kastfall-Azralon",
["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
["Name"] = "Attacking Specific Unit [Plater]",
["PlaterCore"] = 1,
["semver"] = "",
["LastHookEdited"] = "",
["version"] = -1,
},
{
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
},
["Time"] = 1621935143,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["DRUID"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
["103"] = true,
["Enabled"] = true,
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 135426,
["Enabled"] = false,
["Revision"] = 284,
["Options"] = {
},
["Author"] = "Izimode-Azralon",
["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
["Name"] = "Combo Points [Plater]",
["PlaterCore"] = 1,
["semver"] = "",
["LastHookEdited"] = "",
["version"] = -1,
},
{
["Enabled"] = false,
["Revision"] = 182,
["semver"] = "",
["LastHookEdited"] = "",
["Time"] = 1548278227,
["Author"] = "Izimode-Azralon",
["Name"] = "Players Targeting a Target [Plater]",
["Desc"] = "Show how many raid members are targeting the unit",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
},
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = 1966587,
["HooksTemp"] = {
},
},
{
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1608663128,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["Enabled"] = false,
["Revision"] = 356,
["Options"] = {
},
["Author"] = "Ditador-Azralon",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Name"] = "Aura Reorder [Plater]",
["PlaterCore"] = 1,
["semver"] = "",
["LastHookEdited"] = "",
["version"] = -1,
},
},
["ghost_auras"] = {
["auras"] = {
["PRIEST"] = {
[3] = {
[589] = true,
[34914] = true,
},
},
["WARLOCK"] = {
{
[172] = true,
[980] = true,
},
},
},
},
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1,
},
},
["resources"] = {
["scale"] = 0.800000011920929,
},
["range_check_in_range_or_target_alpha_friendlies"] = 0.8999999761581421,
["aura_x_offset"] = 0,
["range_check_alpha_friendlies"] = 0.6499999761581421,
["ui_parent_scale_tune"] = 1,
["aura_tracker"] = {
["buff_tracked"] = {
[209859] = true,
},
},
["not_affecting_combat_alpha"] = 0.5999999642372131,
["target_shady_alpha"] = 0.5999999642372131,
["patch_version"] = 37,
["range_check_in_range_or_target_alpha"] = 0.8999999761581421,
["use_ui_parent"] = true,
["number_region_first_run"] = true,
["first_run3"] = true,
},
["Whiiskeyz || Plater"] = {
["target_highlight"] = false,
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
["Time"] = 1724197566,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_invalid",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Revision"] = 114,
["Options"] = {
},
["Author"] = "Izimode-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["NpcNames"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
["Name"] = "Aura - Invalidate Unit [Plater]",
["PlaterCore"] = 1,
["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
["SpellIds"] = {
261265,
261266,
271590,
},
["Prio"] = 99,
["Enabled"] = true,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1724197564,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = false,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.40392156862745,
0.003921568627451,
0,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "dotsEnabled",
["Value"] = true,
["Name"] = "Dots Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.32156862745098,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["Revision"] = 643,
["semver"] = "",
["Desc"] = "Add the buff name in the trigger box.",
["version"] = -1,
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["Name"] = "Aura - Buff Alert [Plater]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["SpellIds"] = {
398151,
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1724197564,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["Revision"] = 374,
["semver"] = "",
["NpcNames"] = {
},
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = false,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.40392156862745,
0.003921568627451,
0,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "dotsEnabled",
["Value"] = true,
["Name"] = "Dots Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.32156862745098,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["Author"] = "Tercioo-Sylvanas",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["Desc"] = "Add the debuff name in the trigger box.",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Name"] = "Aura - Debuff Alert [Plater]",
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Prio"] = 99,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["Enabled"] = true,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
["OptionsValues"] = {
["animSpeed"] = 0.40156242251396,
["arrowAlpha"] = 1,
["desaturateArrow"] = true,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1724197166,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 0.73,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Key"] = "animSpeed",
["Value"] = 0.2,
["Name"] = "Animation Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 4,
["Key"] = "desaturateArrow",
["Value"] = false,
["Name"] = "Use White Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
["Revision"] = 670,
["semver"] = "",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["version"] = -1,
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
["Name"] = "Cast - Frontal Cone || Whiiskeyz",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
["SpellIds"] = {
375943,
384699,
153501,
153686,
219488,
391723,
377383,
388976,
370764,
387067,
391118,
391136,
382233,
209027,
212031,
198888,
199805,
191508,
152792,
153395,
317898,
199050,
257426,
209495,
257870,
265540,
260894,
272457,
272609,
188169,
183088,
411012,
382712,
377559,
376170,
393432,
384524,
374563,
375348,
375327,
375351,
369563,
369061,
375727,
382708,
375251,
372311,
373762,
373742,
372201,
377204,
170411,
169179,
200768,
198379,
204667,
200261,
271174,
265372,
413529,
407159,
418435,
401482,
419351,
404917,
416139,
164357,
323137,
443500,
434779,
439621,
434824,
448640,
447395,
448105,
320596,
333477,
434407,
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1671718672,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = 1029718,
["Options"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["Revision"] = 273,
["semver"] = "",
["Desc"] = "Show above the nameplate who is the player fixated",
["version"] = -1,
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Name"] = "Fixate [Plater]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
["Time"] = 1671113869,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
["Icon"] = 136048,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["Revision"] = 140,
["Options"] = {
},
["Author"] = "Celian-Sylvanas",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["NpcNames"] = {
"Guardian of Yogg-Saron",
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
["Name"] = "UnitPower [Plater]",
["PlaterCore"] = 1,
["Desc"] = "Show the energy amount above the nameplate",
["SpellIds"] = {
},
["Prio"] = 99,
["Enabled"] = true,
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1671718679,
["url"] = "",
["Icon"] = 841383,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["Revision"] = 272,
["semver"] = "",
["NpcNames"] = {
},
["Options"] = {
},
["Author"] = "Tecno-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "Fixate On You [Plater]",
["PlaterCore"] = 1,
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["Prio"] = 99,
["Temp_ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["Enabled"] = true,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1671718669,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = 2175503,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.5843137254902,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showArrow",
["Value"] = true,
["Name"] = "Show Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 1,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Key"] = "arrowWidth",
["Value"] = 8,
["Name"] = "Arrow Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.6156862745098,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["Revision"] = 537,
["semver"] = "",
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["version"] = -1,
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["Name"] = "Explosion Affix M+ [Plater]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["SpellIds"] = {
240446,
389446,
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
["Time"] = 1671113852,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
["Icon"] = 135024,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
["Revision"] = 79,
["Options"] = {
},
["Author"] = "Izimode-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
["NpcNames"] = {
"141851",
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
["Name"] = "Color Change [Plater]",
["PlaterCore"] = 1,
["Desc"] = "Add a unitID or unit name in 'Add Trigger' entry. See the constructor script for options.",
["SpellIds"] = {
},
["Prio"] = 99,
["Enabled"] = true,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1724197563,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "blinkEnabled",
["Value"] = true,
["Name"] = "Blink Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable blink",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = true,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable glows",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = false,
["Name"] = "Change NamePlate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'true' to enable nameplate color change",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the blink effect only",
["Min"] = 1,
["Key"] = "timeleftToBlink",
["Value"] = 3,
["Name"] = "Timeleft to Blink",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "time to complete a blink loop",
["Min"] = 0.5,
["Key"] = "blinkSpeed",
["Value"] = 1,
["Name"] = "Blink Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
["Min"] = 0.1,
["Key"] = "blinkMaxAlpha",
["Value"] = 0.6,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color of the blink",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.28627450980392,
0.003921568627451,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "nameplate color if ChangeNameplateColor is true",
},
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "timerColorEnabled",
["Value"] = true,
["Name"] = "Timer Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable changes in the color of the time left text",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Key"] = "timeLeftWarning",
["Value"] = 8,
["Name"] = "Time Left Warning",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Key"] = "timeLeftCritical",
["Value"] = 3,
["Name"] = "Time Left Critical",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "warningColor",
["Value"] = {
1,
0.87058823529412,
0,
1,
},
["Name"] = "Warning Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left entered in a warning zone",
},
{
["Type"] = 1,
["Key"] = "criticalColor",
["Value"] = {
1,
0.074509803921569,
0,
1,
},
["Name"] = "Critical Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left is critical",
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["Revision"] = 384,
["semver"] = "",
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["version"] = -1,
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["Name"] = "Aura - Blink by Time Left [Plater]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --custom frames\n    unitFrame.JadeFireGlowEffect = unitFrame.JadeFireGlowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    unitFrame.JadeFireGlowEffect:SetOffset (-27, 25, 6, -8)\n    unitFrame.JadeFireGlowEffect:Hide()\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.JadeFireGlowEffect:Hide() \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.JadeFireGlowEffect:Show() \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.JadeFireGlowEffect:SetAlpha (.5)\nend\n\n\n",
["Time"] = 1671113863,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --custom frames\n    unitFrame.JadeFireGlowEffect = unitFrame.JadeFireGlowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    unitFrame.JadeFireGlowEffect:SetOffset (-27, 25, 6, -8)\n    unitFrame.JadeFireGlowEffect:Hide()\n    \nend\n\n\n",
["Icon"] = 132221,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.JadeFireGlowEffect:Hide() \nend\n\n\n",
["Revision"] = 37,
["Options"] = {
},
["Author"] = "Kastfall-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.JadeFireGlowEffect:Show() \nend\n\n\n",
["NpcNames"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.JadeFireGlowEffect:SetAlpha (.5)\nend\n\n\n",
["Name"] = "Jadefire [BOD] - Fire Shield",
["PlaterCore"] = 1,
["Desc"] = "Alert when the unit has the Fire Shield to be broken.",
["SpellIds"] = {
286425,
},
["Prio"] = 99,
["Enabled"] = true,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
["useCastbarColor"] = true,
["timerList"] = {
{
"350421",
"5",
},
{
"355787",
"15",
},
{
"348513",
"14",
},
{
"348513",
"14",
},
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1724195908,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Cast start animation settings",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.43137254901961,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 7,
["Key"] = "timerList",
["Value"] = {
},
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["Revision"] = 1222,
["semver"] = "",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["version"] = -1,
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "Cast - Alert + Timer [P]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1671113852,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["Options"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["Revision"] = 212,
["semver"] = "",
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["version"] = -1,
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "Countdown",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Time"] = 1671113863,
["NpcNames"] = {
"174773",
},
["url"] = "",
["Icon"] = 135945,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Time to Die",
["Name"] = "Time to Die",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 10,
["Key"] = "bgWidth",
["Value"] = 27,
["Name"] = "Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "bgColor",
["Value"] = {
0.50588235294118,
0.070588235294118,
1,
1,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 24,
["Desc"] = "",
["Min"] = 7,
["Key"] = "textSize",
["Value"] = 8,
["Name"] = "Text Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
0.5843137254902,
0,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option11",
["Value"] = "Targeting",
["Name"] = "Targeting",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "switchTargetName",
["Value"] = true,
["Name"] = "Show Target instead of Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useTargetingColor",
["Value"] = true,
["Name"] = "Change Color if targeting You",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "targetingColor",
["Value"] = {
0.070588235294118,
0.61960784313725,
0,
1,
},
["Name"] = "Color if targeting You",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option11",
["Value"] = 0,
["Name"] = "Option 11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["Revision"] = 191,
["semver"] = "",
["Desc"] = "Time to die Spiteful affix",
["version"] = -1,
["Author"] = "Symantec-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Name"] = "M+ Spiteful",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1671113866,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = 136048,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Name"] = "add trigger",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Key"] = "fontSize",
["Value"] = 16,
["Name"] = "Text Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.80392156862745,
0.80392156862745,
0.80392156862745,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["Revision"] = 239,
["semver"] = "",
["Desc"] = "Show the energy amount above the nameplate.",
["version"] = -1,
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["Name"] = "Unit - Show Energy [Plater]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    for i = 1, 40 do\n        local auraInfo = C_UnitAuras.GetBuffDataByIndex(envTable._UnitID, i)\n        if (auraInfo) then\n            local spellId = auraInfo.spellId\n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        else\n            break\n        end\n    end\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1725033998,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 83,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["NpcNames"] = {
},
["SpellIds"] = {
343470,
423228,
},
["PlaterCore"] = 1,
["Name"] = "Aura is Shield [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1671113862,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
["Options"] = {
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0,
0.55686274509804,
0.035294117647059,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
},
},
["Temp_OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Revision"] = 35,
["semver"] = "",
["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
["version"] = -1,
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Name"] = "Fixate by Unit Buff [P]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
426662,
426663,
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.GlowOptions = {\n        glowType = \"ants\",\n        N = 7, -- number of lines. Defaul value is 8;\n        frequency = 0.25, -- frequency, set to negative to inverse direction of rotation. Default value is 0.125;\n        scale = 0.85, -- scale of particles\n        xOffset = 0,\n        yOffset = 0, -- offset of glow relative to region border;\n        key = \"\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+30, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\",0, 0)\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    if (scriptTable.config.ChangeTextSize) then\n        if (envTable.OriginalText) then\n            Plater:SetFontSize (self.Text, envTable.OriginalText)\n            envTable.OriginalText = nil\n        end\n    end\n    \n    Plater.StopGlow(self, envTable.GlowOptions.glowType)\n    envTable.BackgroundFlash:Stop()\n    unitFrame:StopFrameShake (envTable.FrameShake)    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
["CastBarHeightAdd"] = 1.2999999523163,
["ChangeColor"] = false,
["ChangeTextSize"] = false,
["CastbarColor"] = {
1,
0,
0.90196084976196,
1,
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    if (scriptTable.config.ChangeColor) then\n        if (envTable._CanInterrupt) then\n            self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.CastbarColor))\n        else\n            self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.CastbarNoInterruptColor))\n        end\n    end\n    \n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    self:SetHeight (math.ceil(height * scriptTable.config.CastBarHeightAdd))\n    \n    if (scriptTable.config.ChangeTextSize) then\n        if (envTable.OriginalText) then\n            Plater:SetFontSize (self.Text, envTable.OriginalText)\n        end\n        \n        local text = Plater:GetFontSize(self.Text)\n        envTable.OriginalText = text\n        Plater:SetFontSize (self.Text, math.ceil(text * scriptTable.config.CastBarHeightAdd))    \n    end\n    \n    Plater.StartGlow(self, \"white\", envTable.GlowOptions)\n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1724197290,
["NpcNames"] = {
},
["url"] = "https://wago.io/8s7Mcrve2/93",
["Icon"] = 1724000,
["Options"] = {
{
["Type"] = 4,
["Key"] = "ChangeColor",
["Value"] = false,
["Name"] = "Change Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "ChangeTextSize",
["Value"] = false,
["Name"] = "Change Text Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "CastbarColor",
["Value"] = {
1,
0.26274509803922,
0,
1,
},
["Name"] = "Castbar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "CastbarNoInterruptColor",
["Value"] = {
0.69803921568627,
0.69803921568627,
0.69803921568627,
1,
},
["Name"] = "Castbar No Interrupt Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "",
["Min"] = 1,
["Key"] = "CastBarHeightAdd",
["Value"] = 1.3,
["Name"] = "Castbar Height Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    if (scriptTable.config.ChangeTextSize) then\n        if (envTable.OriginalText) then\n            Plater:SetFontSize (self.Text, envTable.OriginalText)\n            envTable.OriginalText = nil\n        end\n    end\n    \n    Plater.StopGlow(self, envTable.GlowOptions.glowType)\n    envTable.BackgroundFlash:Stop()\n    unitFrame:StopFrameShake (envTable.FrameShake)    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Revision"] = 4018,
["semver"] = "1.0.91",
["Desc"] = "Flash, Bounce when an important cast is happening. Add spell in the Add Trigger field.",
["version"] = 93,
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    if (scriptTable.config.ChangeColor) then\n        if (envTable._CanInterrupt) then\n            self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.CastbarColor))\n        else\n            self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.CastbarNoInterruptColor))\n        end\n    end\n    \n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    self:SetHeight (math.ceil(height * scriptTable.config.CastBarHeightAdd))\n    \n    if (scriptTable.config.ChangeTextSize) then\n        if (envTable.OriginalText) then\n            Plater:SetFontSize (self.Text, envTable.OriginalText)\n        end\n        \n        local text = Plater:GetFontSize(self.Text)\n        envTable.OriginalText = text\n        Plater:SetFontSize (self.Text, math.ceil(text * scriptTable.config.CastBarHeightAdd))    \n    end\n    \n    Plater.StartGlow(self, \"white\", envTable.GlowOptions)\n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\nend",
["Name"] = "Cast - Important || Whiiskeyz",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
372634,
228625,
241799,
228280,
227545,
228985,
227529,
229622,
229714,
298669,
297254,
296331,
298718,
301667,
294890,
356031,
355934,
356011,
355974,
345990,
356404,
357509,
349934,
355640,
355642,
347721,
347775,
357029,
357197,
357229,
353835,
350919,
347094,
347958,
347015,
356133,
347149,
357284,
357228,
347091,
308030,
330458,
330822,
353573,
353763,
329908,
320135,
338639,
295932,
295942,
315802,
296372,
353328,
355230,
354490,
294526,
278176,
292942,
326050,
354256,
263344,
354493,
351206,
351649,
351090,
330573,
278182,
277040,
336556,
353621,
302543,
297292,
354240,
351307,
361016,
360856,
343005,
329518,
329181,
355352,
352141,
349805,
352381,
348145,
359134,
351075,
351589,
360451,
365682,
365577,
361513,
365126,
364652,
363130,
365036,
360977,
365295,
363021,
360562,
365033,
360378,
373395,
387411,
397394,
215433,
198934,
192563,
373932,
152818,
76446,
59544,
69552,
373017,
386181,
192288,
199726,
198750,
398150,
398206,
396640,
377389,
396812,
388392,
386546,
153524,
225100,
209410,
209485,
211401,
211470,
208165,
156718,
384194,
387955,
375596,
384365,
386024,
386025,
376725,
396073,
396018,
397801,
382410,
256060,
258777,
257732,
257784,
281420,
257899,
257736,
265091,
265089,
278755,
260879,
265668,
266106,
278961,
272183,
266201,
272180,
265433,
265487,
202181,
186269,
193585,
88080,
367500,
382474,
377950,
373698,
372711,
374544,
385029,
381770,
374339,
374020,
374045,
389486,
384351,
395694,
374706,
385141,
375384,
377384,
377341,
377402,
387619,
369675,
369603,
369823,
369400,
369365,
369411,
377500,
87779,
88186,
410760,
378282,
378281,
395427,
372223,
384161,
383231,
383651,
408805,
165213,
427459,
169376,
169375,
169839,
169841,
225568,
204896,
252923,
253562,
264390,
265346,
266035,
260700,
260701,
260698,
268278,
415435,
415773,
76820,
428103,
412285,
400180,
412378,
411300,
412233,
407121,
204243,
321968,
322938,
323057,
324914,
321828,
326046,
443430,
443427,
443433,
448560,
452162,
453840,
446086,
434122,
440160,
434802,
436322,
448248,
433841,
449455,
429545,
445207,
429109,
430097,
451871,
76711,
451224,
447966,
334748,
320462,
327393,
328667,
324293,
320170,
256957,
257069,
272571,
451113,
428086,
431333,
432520,
446615,
449734,
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = false,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.GlowOptions = {\n        glowType = \"ants\",\n        N = 7, -- number of lines. Defaul value is 8;\n        frequency = 0.25, -- frequency, set to negative to inverse direction of rotation. Default value is 0.125;\n        scale = 0.85, -- scale of particles\n        xOffset = 0,\n        yOffset = 0, -- offset of glow relative to region border;\n        key = \"\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+30, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\",0, 0)\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_BORDER_GLOW_ALPHA = 0.3 --0.3\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (self)\n    envTable.glowEffect:SetOffset (-32, 30, 7, -9)\n    envTable.glowEffect:SetAlpha (CONFIG_BORDER_GLOW_ALPHA)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1724196813,
["NpcNames"] = {
},
["semver"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_BORDER_GLOW_ALPHA = 0.3 --0.3\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (self)\n    envTable.glowEffect:SetOffset (-32, 30, 7, -9)\n    envTable.glowEffect:SetAlpha (CONFIG_BORDER_GLOW_ALPHA)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
["Icon"] = 237553,
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["Revision"] = 1163,
["Options"] = {
},
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \nend\n\n\n",
["Name"] = "Boss Cast, Important || Whiiskeyz",
["ignoreWagoUpdate"] = true,
["SpellIds"] = {
192307,
202494,
192158,
196497,
196838,
200901,
192018,
193660,
198263,
198077,
207278,
207261,
207806,
211464,
207979,
397903,
397897,
373570,
373607,
373364,
214692,
209628,
209676,
209741,
224327,
209667,
209602,
152964,
153094,
153164,
153153,
164974,
207881,
152979,
153067,
153623,
152800,
153804,
165579,
165578,
154175,
154442,
372047,
372794,
372087,
385063,
392642,
392641,
391727,
391726,
395303,
395292,
391724,
392394,
392569,
392570,
392488,
392486,
381525,
381602,
385558,
381605,
385958,
388537,
377004,
377034,
376997,
388796,
388623,
374361,
374343,
388822,
386660,
374582,
374567,
374720,
374731,
374364,
385578,
386781,
387151,
388008,
385331,
384696,
385075,
383823,
38881,
388817,
385916,
388283,
384620,
384316,
376683,
37668,
382670,
392151,
386547,
385339,
386063,
397783,
106856,
106864,
117665,
376644,
376865,
376892,
258773,
255952,
274400,
257739,
274383,
257756,
272402,
258381,
258181,
258199,
257904,
256405,
257402,
257315,
257458,
265081,
265568,
264757,
264603,
260793,
260292,
260333,
266209,
259732,
272592,
269843,
226287,
188114,
183528,
183633,
202108,
202075,
198428,
193376,
193803,
210150,
199629,
199176,
205549,
201983,
200700,
200637,
200732,
200551,
200154,
88056,
410760,
86340,
88194,
87622,
87618,
86911,
382555,
384150,
367503,
382435,
381834,
381694,
381419,
373897,
373024,
383062,
373943,
375065,
385046,
384899,
367521,
384961,
384827,
384529,
385359,
376934,
384353,
373939,
373942,
373915,
384014,
389179,
374823,
385551,
385531,
385181,
391610,
376171,
391634,
386757,
386559,
390290,
388882,
388424,
389875,
387559,
387571,
369811,
369677,
369792,
369853,
369703,
369754,
369465,
372623,
372701,
372719,
369328,
369110,
376049,
376208,
87762,
378818,
378827,
375436,
374365,
372561,
376186,
374471,
373733,
375057,
374704,
379406,
372224,
372296,
373089,
384623,
374586,
374812,
374533,
375957,
381663,
382795,
377473,
377017,
376780,
169494,
427498,
427509,
427510,
169249,
427223,
426974,
427899,
427858,
428082,
428139,
428823,
169613,
218755,
200580,
201129,
204666,
204574,
204644,
200289,
200238,
200084,
196916,
225732,
194956,
195254,
196078,
194966,
225998,
200256,
200343,
200345,
197418,
197696,
201139,
201176,
198073,
214003,
214002,
198641,
202019,
201733,
199143,
273185,
253721,
250258,
259531,
255567,
256846,
260666,
255579,
253548,
254959,
257407,
250050,
249919,
263943,
264931,
264734,
264694,
264038,
265760,
265759,
260551,
264027,
260773,
260852,
265880,
261439,
266266,
401421,
413105,
413013,
413544,
415769,
405431,
413621,
413622,
412806,
406886,
415097,
407978,
428542,
426741,
426645,
426684,
428374,
429263,
427771,
428293,
427670,
427672,
427451,
427668,
427456,
76590,
426905,
429051,
76516,
428530,
428401,
428868,
408141,
408084,
409261,
414652,
414535,
409456,
409635,
412136,
413024,
413023,
412215,
400681,
400649,
417339,
400642,
400641,
419327,
411952,
411407,
403891,
404364,
406481,
405279,
407205,
407535,
419511,
411763,
416152,
416264,
414844,
415047,
423626,
415262,
438622,
322486,
324909,
323177,
323138,
331743,
325223,
324776,
340289,
340279,
321471,
321669,
341709,
321834,
325418,
460092,
326021,
322450,
322614,
322550,
443507,
443436,
434722,
434829,
450784,
451222,
451496,
439697,
441381,
440218,
440468,
434137,
436205,
445813,
438658,
441289,
446717,
439401,
439341,
438860,
434793,
438877,
438826,
438471,
438476,
438473,
433002,
434252,
453161,
447271,
432967,
439506,
433766,
433845,
432130,
432227,
432117,
447145,
424903,
424888,
426771,
426345,
422233,
423538,
423324,
423200,
449130,
449154,
428711,
445541,
449167,
428202,
428894,
428879,
429427,
429428,
427869,
427329,
427852,
456696,
451612,
451939,
451379,
448847,
448877,
448566,
447261,
451996,
451965,
456902,
449444,
456900,
456711,
456713,
451387,
451241,
448013,
456751,
451391,
451395,
450077,
449939,
450100,
448057,
334747,
320655,
320637,
320822,
324372,
321226,
321247,
327240,
323489,
338357,
338456,
338606,
322681,
320200,
320358,
320788,
320771,
320772,
321894,
257170,
257459,
257292,
275826,
454438,
272422,
269029,
280389,
257169,
272711,
272542,
276068,
257862,
269266,
269456,
431364,
432448,
431491,
451107,
42673,
451026,
426734,
453212,
451117,
431637,
451119,
450854,
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Enabled"] = true,
["url"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.options = {\n        color = \"yellow\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 6, -- number of lines. Defaul value is 8;\n        frequency = 0.5, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 4, -- length of lines. Default value depends on region size and number of lines;\n        th = 2, -- thickness of lines. Default value is 2;\n        xOffset = 1,\n        yOffset = 1, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n    self.glowStarted = false\n    \n    envTable.pandemicTime[self.spellId..unitId] = nil\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    envTable.pandemicTime = envTable.pandemicTime or {}\n    envTable.pandemicTime[self.spellId..unitId] = envTable._RemainingTime * 0.3\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    if (timeLeft < (envTable.pandemicTime[self.spellId..unitId] or (envTable._Duration*0.3))) then\n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self.Cooldown, nil, envTable.options, envTable.options.key)\n        end\n    else\n        if self.glowStarted then\n            self.glowStarted = false\n            Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1673124015,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = 413591,
["Options"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n    self.glowStarted = false\n    \n    envTable.pandemicTime[self.spellId..unitId] = nil\n    \nend\n\n\n",
["Revision"] = 253,
["semver"] = "",
["Desc"] = "Adds a configurable pixel border glow to the buff/debuff if the remaining duration is less than 30% of its total duration.",
["version"] = -1,
["Author"] = "Viash-Thrall",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    envTable.pandemicTime = envTable.pandemicTime or {}\n    envTable.pandemicTime[self.spellId..unitId] = envTable._RemainingTime * 0.3\nend\n\n\n",
["Name"] = "Pandemic Glow (Pixel)",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    if (timeLeft < (envTable.pandemicTime[self.spellId..unitId] or (envTable._Duration*0.3))) then\n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self.Cooldown, nil, envTable.options, envTable.options.key)\n        end\n    else\n        if self.glowStarted then\n            self.glowStarted = false\n            Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
292711,
278946,
212463,
284402,
284401,
2818,
703,
1943,
295425,
283668,
316220,
258179,
207690,
334342,
285135,
63106,
342938,
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.options = {\n        color = \"yellow\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 6, -- number of lines. Defaul value is 8;\n        frequency = 0.5, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 4, -- length of lines. Default value depends on region size and number of lines;\n        th = 2, -- thickness of lines. Default value is 2;\n        xOffset = 1,\n        yOffset = 1, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1724195908,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = 134229,
["Options"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["Revision"] = 38,
["semver"] = "",
["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
["version"] = -1,
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Name"] = "Cast - Effect After Cast [P]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
191284,
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [214840] = {25}, --engorged crawler\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1724195901,
["NpcNames"] = {
"214840",
"197697",
"59544",
"186227",
"184020",
"91005",
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Key"] = "indicatorAlpha",
["Value"] = 0.79,
["Name"] = "Vertical Line Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Key"] = "fillAlpha",
["Value"] = 0.2,
["Name"] = "Fill Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["Revision"] = 157,
["semver"] = "",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["version"] = -1,
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Name"] = "Add - Health Markers [P]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [214840] = {25}, --engorged crawler\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1671226624,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.43137254901961,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.2,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 0,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.1,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Key"] = "shakeAmplitude",
["Value"] = 25,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 30,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["Revision"] = 894,
["semver"] = "",
["Desc"] = "Play a very fast flash when the cast start",
["version"] = -1,
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "Cast - Quick Flash [P]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["SpellIds"] = {
392640,
209033,
255824,
252781,
250096,
200248,
197797,
264520,
418202,
201839,
412012,
411958,
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Enabled"] = false,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1724195717,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
["Options"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
["Revision"] = 107,
["semver"] = "",
["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
["version"] = -1,
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
["Name"] = "Cast - Shield Interrupt [P]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
373688,
391050,
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
["castColor"] = {
{
"385536",
"maroon",
},
{
"198750",
"midnightblue",
},
{
"360850",
"lime",
},
{
"212784",
"deepskyblue",
},
{
"207980",
"midnightblue",
},
{
"199033",
"gold",
},
{
"199034",
"gold",
},
{
"200969",
"orange",
},
{
"394512",
"indigo",
},
{
"397881",
"deepskyblue",
},
{
"396020",
"khaki",
},
},
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514190,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
["Enabled"] = true,
["Revision"] = 547,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - Glowing [P]",
["SpellIds"] = {
384823,
372735,
385536,
392398,
387135,
360850,
212784,
207980,
199033,
199034,
200969,
394512,
397881,
396020,
374430,
169445,
},
["Desc"] = "Show a different animation for the cast bar.",
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Key"] = "segmentsAmount",
["Value"] = 7,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.95686274509804,
1,
0.98823529411765,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.85882352941176,
0.43137254901961,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"385536",
"maroon",
},
{
"198750",
"midnightblue",
},
{
"360850",
"lime",
},
{
"212784",
"deepskyblue",
},
{
"207980",
"midnightblue",
},
{
"199033",
"gold",
},
{
"199034",
"gold",
},
{
"200969",
"orange",
},
{
"394512",
"indigo",
},
{
"397881",
"deepskyblue",
},
{
"396020",
"khaki",
},
},
["Name"] = "Cast Color by SpellID",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Time"] = 1724197570,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = 236209,
["Options"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["Revision"] = 20,
["semver"] = "",
["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
["version"] = -1,
["Author"] = "Tiranaa-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Name"] = "Aura While Casting [P]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["SpellIds"] = {
372743,
372749,
384933,
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1676905232,
["url"] = "",
["Icon"] = 4038101,
["Enabled"] = false,
["Revision"] = 73,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - On Going Cast [P]",
["SpellIds"] = {
388886,
377912,
},
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["Options"] = {
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
1,
1,
0.41662168502808,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 0,
["Name"] = "Dots X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 0,
["Name"] = "Dots Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Key"] = "speed",
["Value"] = 0.4,
["Name"] = "Blink Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "minAlpha",
["Value"] = 0,
["Name"] = "Blink Min Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "maxAlpha",
["Value"] = 0.5,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.019607843831182,
0,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage(unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    self.BigSparkle = self.BigSparkle or Plater:CreateImage(self.FrameOverlay)\n    self.BigSparkle.texture = [[Interface\\AddOns\\Plater\\images\\cast_bar_vertical_spark.png]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    self.BigSparkle:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    self.BigSparkle:ClearAllPoints()\n    self.BigSparkle:SetPoint (\"topleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 0)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\nend\n\n\n\n\n",
["Time"] = 1719711112,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_important_bycolor.png",
["Enabled"] = false,
["Revision"] = 831,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    self.BigSparkle:Show()\n    self.BigSparkle:SetWidth(8)\n    self.BigSparkle:SetHeight(self:GetHeight() + unitFrame.healthBar:GetHeight())\n    self.BigSparkle:SetScale(1)\n    self.BigSparkle:SetVertexColor(1,1, 1, 1)\n    envTable.overlaySpark:Hide()\n    \n    self.Spark:Hide()\n    \n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.dotAnimation:SetPoint(\"bottomright\", self, \"bottomright\", scriptTable.config.xOffset, -scriptTable.config.yOffset)\n    \n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - Important by Color [P]",
["SpellIds"] = {
432967,
446717,
451379,
451067,
448013,
448057,
322486,
341709,
321226,
429428,
},
["Desc"] = "Used on casts that make the mob explode, summon or transform if the cast passes.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation changing the cast bar color.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "To get a list of color names, use: /plater colors",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Name"] = "Health Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254902,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.431372,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.6156862745098,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 6,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711125,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_shining_green.png",
["Enabled"] = false,
["Revision"] = 873,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\n    \nend",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - Shining Green [P]",
["SpellIds"] = {
434802,
448248,
453840,
337249,
324293,
49184,
449455,
},
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.8,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Key"] = "shakeAmplitude",
["Value"] = 5,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.56470588235294,
0.56470588235294,
0.56470588235294,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 8,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.41176470588235,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    --envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1719788204,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_special_ability.png",
["Enabled"] = false,
["Revision"] = 613,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - Special Ability [P]",
["SpellIds"] = {
451026,
452127,
446615,
433766,
432117,
448560,
440218,
441289,
447146,
438860,
448847,
449687,
456751,
449939,
336499,
322550,
320208,
321894,
276068,
423200,
},
["Desc"] = "For unique abilities that are an important part of the fight against a bosses or mini bosse.",
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.5843137254902,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showArrow",
["Value"] = true,
["Name"] = "Show Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 1,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Key"] = "arrowWidth",
["Value"] = 8,
["Name"] = "Arrow Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.6156862745098,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion + 5, castBar:GetHeight() + math.random(1, 5))\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        \n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2 + math.random(-2, 2))\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(1)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration + 0.5) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(1)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1724196679,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Key"] = "segmentsAmount",
["Value"] = 20,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.95686274509804,
1,
0.98823529411765,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.85882352941176,
0.43137254901961,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["Revision"] = 553,
["semver"] = "",
["Desc"] = "Healing effect that cannot be interrupted.",
["version"] = -1,
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion + 5, castBar:GetHeight() + math.random(1, 5))\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        \n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2 + math.random(-2, 2))\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(1)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration + 0.5) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(1)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
["Name"] = "Cast - Heal Stun [P]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["SpellIds"] = {
432520,
320822,
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = false,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\n    unitFrame.CastSwipeTexture:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    unitFrame.CastSwipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetScaleFrom(1.05, 1.05)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(1, 1)    \n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1724195417,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.15,
["Name"] = "Rotation Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.2,
["Name"] = "Animation Start Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Key"] = "textureStartAlpha",
["Value"] = 0.3,
["Name"] = "Texture Start Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.8,
["Name"] = "Texture Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 0.8,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.74117648601532,
0.74117648601532,
0.74117648601532,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\n    unitFrame.CastSwipeTexture:Hide()\nend\n\n\n",
["Revision"] = 282,
["semver"] = "",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["version"] = -1,
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    unitFrame.CastSwipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetScaleFrom(1.05, 1.05)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(1, 1)    \n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
["Name"] = "Cast - AoE With Range [P]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
453212,
451098,
427001,
438622,
446086,
447271,
437700,
439646,
448877,
451387,
331743,
320637,
327240,
257170,
257326,
257169,
423538,
428508,
428520,
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Enabled"] = false,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    self.simpleInterruptFlash = self.simpleInterruptFlash or  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    \n    self.simpleInterruptFlash:SetBlendMode (\"ADD\")\n    self.simpleInterruptFlash:SetDrawLayer(\"OVERLAY\", 7)\n    self.simpleInterruptFlash:SetPoint (\"center\", self, \"center\")\n    self.simpleInterruptFlash:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    self.simpleInterruptFlashAnimHub = self.simpleInterruptFlashAnimHub or Plater:CreateAnimationHub (self.simpleInterruptFlash, \n        function()\n            self.simpleInterruptFlash:Show()\n        end,\n        function()\n            self.simpleInterruptFlash:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    self.simpleInterruptFlashAnimHub.fadeIn = self.simpleInterruptFlashAnimHub.fadeIn or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    self.simpleInterruptFlashAnimHub.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    self.simpleInterruptFlashAnimHub.fadeOut = self.simpleInterruptFlashAnimHub.fadeOut or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    self.simpleInterruptFlashAnimHub.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    self.simpleInterruptFlashAnimHub:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711128,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = false,
["Revision"] = 958,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    self.simpleInterruptFlash:SetHeight(self:GetHeight() * 2.5 )\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    self.simpleInterruptFlashAnimHub:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - Simple Interrupt [P]",
["SpellIds"] = {
431333,
442210,
443430,
443433,
451871,
76711,
334748,
334749,
328667,
338353,
445207,
},
["Desc"] = "Play a very fast flash when the cast start.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.43137254901961,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.2,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 0,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.1,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Key"] = "shakeAmplitude",
["Value"] = 25,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 30,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    --self.Text:Hide() \nend\n\n\n",
["Time"] = 1723155144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_ongoing.png",
["Enabled"] = false,
["Revision"] = 158,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.9\n    \n    envTable.dotAnimation1.dotTexture:SetVertexColor(unpack(scriptTable.config.dotColor))\n    \n    \n    envTable.dotAnimation1.dotTexture:Show()\n    \n    --envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    --envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \n    \n    \nend",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - Ongoing Cast [P]",
["SpellIds"] = {
431364,
423327,
},
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["Options"] = {
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
1,
1,
0.41662168502808,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 0,
["Name"] = "Dots X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 0,
["Name"] = "Dots Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Key"] = "speed",
["Value"] = 0.4,
["Name"] = "Blink Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "minAlpha",
["Value"] = 0,
["Name"] = "Blink Min Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "maxAlpha",
["Value"] = 0.5,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.52549022436142,
0.5137255191803,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1724195538,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_healalert.png",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.43137254901961,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["Revision"] = 1255,
["semver"] = "",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["version"] = -1,
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "Cast - Heal Cut [P]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["SpellIds"] = {
450756,
452162,
322938,
322939,
324776,
324914,
326046,
340544,
335143,
327130,
256957,
275826,
429109,
451097,
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Enabled"] = false,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.1, 0.5)\n    \n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    if (envTable._CanInterrupt) then\n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    else        \n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    end    \n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719694337,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_debuff.png",
["Enabled"] = false,
["Revision"] = 741,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (IsInRaid()) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    --textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:SetTexture([[Interface\\AddOns\\Plater\\images\\tail_rounded_white.png]])\n    textureStretched:SetHeight(castBar:GetHeight() + 2)\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    \n    --trail\n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    --local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    --Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - Debuff [P]",
["SpellIds"] = {
432448,
431309,
451107,
451119,
438618,
436322,
443507,
443436,
439341,
447261,
449444,
451224,
451241,
450095,
451612,
451395,
324987,
327393,
256709,
268230,
275836,
426308,
449153,
427461,
},
["Desc"] = "Show a different animation for the cast bar.",
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Key"] = "segmentsAmount",
["Value"] = 7,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.96862751245499,
0.9764706492424,
1,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.49019610881805,
0,
0.54901963472366,
1,
},
["Name"] = "Trail Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not self.FrameOverlay.LeapArrow1) then\n        \n        self.FrameOverlay.LeapArrow1 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow2 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow3 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        \n        local onPlayFunc = function()\n            --self.FrameOverlay.LeapArrow1:Show()\n            --self.FrameOverlay.LeapArrow2:Show()\n            --self.FrameOverlay.LeapArrow3:Show()            \n        end\n        local onStopFunc = function()\n            self.FrameOverlay.LeapArrow1:Hide()\n            self.FrameOverlay.LeapArrow2:Hide()\n            self.FrameOverlay.LeapArrow3:Hide()\n        end\n        \n        --first arrow animation\n        local animHub1 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow1, onPlayFunc, onStopFunc)\n        animHub1.alpha1 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub1.trans1 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub1.alpha2 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub1.trans2 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 2, 0.3, 8, 8)        \n        \n        self.FrameOverlay.LeapArrow1.animation = animHub1\n        \n        --second arrow animation\n        local animHub2 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow2, onPlayFunc, onStopFunc)\n        animHub2.alpha1 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub2.trans1 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub2.alpha2 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub2.trans2 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow2.animation = animHub2\n        \n        --third arrow animation\n        local animHub3 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow3, onPlayFunc, onStopFunc)\n        animHub3.alpha1 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub3.trans1 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub3.alpha2 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub3.trans2 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow3.animation = animHub3\n        \n        self.FrameOverlay.LeapArrowTextures = {\n            self.FrameOverlay.LeapArrow1,\n            self.FrameOverlay.LeapArrow2,\n            self.FrameOverlay.LeapArrow3\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations = {\n            alpha1Anim = {},\n            alpha2Anim = {},\n            trans1Anim = {},\n            trans2Anim = {},\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations.alpha1Anim = {animHub1.alpha1, animHub2.alpha1, animHub3.alpha1}\n        self.FrameOverlay.LeapArrowAnimations.alpha2Anim = {animHub1.alpha2, animHub2.alpha2, animHub3.alpha2}\n        self.FrameOverlay.LeapArrowAnimations.trans1Anim = {animHub1.trans1, animHub2.trans1, animHub3.trans1}\n        self.FrameOverlay.LeapArrowAnimations.trans2Anim = {animHub1.trans2, animHub2.trans2, animHub3.trans2}        \n        \n    end\n    \nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Hide()\n        local animation = texture.animation\n        animation:Stop()\n    end    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1724073562,
["url"] = "",
["Icon"] = 236171,
["Enabled"] = false,
["Revision"] = 139,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.bUseCastbarColor) then\n        Plater.SetCastBarColor (unitFrame, DetailsFramework:ParseColors(scriptTable.config.castbarColor))\n    end\n    \n    \n    if (scriptTable.config.bRenameSpell) then\n        self.Text:SetText(scriptTable.config.spellName) \n    end\n    \n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    for i, texture in ipairs(leapTextures) do\n        texture:SetTexture([[Interface\\AddOns\\Plater\\media\\arrow_right_64.tga]])\n        texture:ClearAllPoints()\n        texture:SetSize(self:GetHeight()*1.5, self:GetHeight()*1.5)\n        texture:SetRotation(math.pi - math.pi*0.75)        \n    end\n    \n    local startX = -10\n    leapTextures[1]:SetPoint(\"left\", self, \"left\", startX, -8)\n    leapTextures[2]:SetPoint(\"center\", self, \"center\", startX, -8)\n    leapTextures[3]:SetPoint(\"right\", self, \"right\", startX, -8)\n    \n    local animations = self.FrameOverlay.LeapArrowAnimations\n    local alpha1Animations = animations.alpha1Anim\n    local alpha2Animations = animations.alpha2Anim    \n    local trans1Animations = animations.trans1Anim\n    local trans2Animations = animations.trans2Anim    \n    \n    local castTime = envTable._Duration\n    \n    --on fade in\n    local fadeInDuration =  castTime/6\n    \n    C_Timer.After(fadeInDuration, function()\n            for i, texture in ipairs(leapTextures) do\n                texture:SetRotation(-math.pi*0.25)\n                --texture:Show()\n            end            \n    end)\n    \n    for i, alphaAnim in ipairs(alpha1Animations) do\n        alphaAnim:SetDuration(fadeInDuration)\n        alphaAnim:SetFromAlpha(0.3)\n        alphaAnim:SetToAlpha(1)\n    end\n    \n    for i, transAnim in ipairs(trans1Animations) do\n        transAnim:SetDuration(fadeInDuration)\n        transAnim:SetOffset(8, 20)\n    end\n    \n    --on fade out\n    local fadeOutDuration = castTime/2\n    \n    for i, alphaAnim in ipairs(alpha2Animations) do\n        alphaAnim:SetDuration(fadeOutDuration)\n        alphaAnim:SetFromAlpha(1)\n        alphaAnim:SetToAlpha(0.3)\n    end\n    \n    for i, transAnim in ipairs(trans2Animations) do\n        transAnim:SetDuration(fadeOutDuration)\n        transAnim:SetOffset(8, -16)\n    end    \n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Show()\n        local animation = texture.animation\n        animation:Play()\n    end\n    \n    \n    --DetailsFramework:DebugVisibility(self.FrameOverlay.LeapArrow1)\nend",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - Heroic Leap [P]",
["SpellIds"] = {
447141,
432967,
},
["Desc"] = "Modify a cast bar when the unit casts a spell with the same effect of the Warrior's Heroic Leap spell.",
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Play an animation when the cast is a Heroic Leap",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bRenameSpell",
["Value"] = true,
["Name"] = "Rename Spell",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Rename the name of the spell.",
},
{
["Type"] = 3,
["Key"] = "spellName",
["Value"] = "Heroic Leap",
["Name"] = "Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Name to show in the spell cast bar.",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bUseCastbarColor",
["Value"] = false,
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the cast bar color to the color selected below.",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
0.3647058904171,
0.10588236153126,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
},
},
{
["ConstructorCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.Spark:SetVertexColor( unpack(Plater.db.profile.cast_statusbar_spark_color) )\n    PixelUtil.SetSize( self.Spark, Plater.db.profile.cast_statusbar_spark_width, self:GetHeight() )\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1719711134,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_spark.png",
["Enabled"] = false,
["Revision"] = 75,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "In the box at right, add the spell id and the color.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "To get a list of colors, use: /plater colors",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Key"] = "sparkWithScale",
["Value"] = 1,
["Name"] = "Spark Width Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Key"] = "sparkHeightScale",
["Value"] = 1,
["Name"] = "Spark Height Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 7,
["Key"] = "sparkColor",
["Value"] = {
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "",
},
},
["Author"] = "Tennah-These Go To Eleven",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the spark color\n    local sparkColor = scriptTable.config.sparkColor[tostring(envTable._SpellID)]\n    \n    self.Spark:SetVertexColor(DetailsFramework:ParseColors(sparkColor))\n    \n    self.Spark:SetWidth( self.Spark:GetWidth() * scriptTable.config.sparkWithScale )\n    self.Spark:SetHeight( self.Spark:GetHeight() * scriptTable.config.sparkHeightScale )\n    \nend\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - Spark Color [P]",
["Desc"] = "Change the spark color to differentiate a cast from another.",
["SpellIds"] = {
453140,
456713,
450088,
322614,
323730,
257348,
272422,
429427,
},
["semver"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local DF = DetailsFramework\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture2:Show()\n        unitFrame.CastSwipeAnimation2:Play()\n        unitFrame.StartSwipeAnimation2:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation2:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation2:Stop()\n                unitFrame.CastSwipeTexture2:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture2) then\n            return\n        end\n        \n        local circularTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n        circularTexture:SetPoint(\"center\", 0, 0)\n        circularTexture:SetSize(64, 64)\n        circularTexture:Hide()\n        \n        unitFrame.CastSwipeTexture2 = circularTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation2 = DF:CreateAnimationHub(circularTexture)\n        unitFrame.CastSwipeAnimation2:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation2.Rotation = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"rotation\", 1, 1, 360)\n        unitFrame.CastSwipeAnimation2.Trans = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"TRANSLATION\", 1, 1, 2, 2)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, function()circularTexture:Show() end)\n        \n        unitFrame.StartSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, nil, function()circularTexture:Hide() end)\n        \n        unitFrame.EndSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"alpha\", 1, 0.2, 1, 0)\n        \n        unitFrame.EndSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n        \n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = options.textureScale\n    \n    local circularTexture = unitFrame.CastSwipeTexture2\n    \n    --texture settings\n    circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n    circularTexture:SetPoint(\"center\", 0, 0)\n    circularTexture:SetSize(64, 64)    \n    circularTexture:SetBlendMode(\"ADD\")\n    circularTexture:SetVertexColor(DetailsFramework:ParseColors(options.textureColor))\n    circularTexture:SetScale(targetScale)\n    circularTexture:SetAlpha(options.textureAlpha)\n    \n    --animations    \n    unitFrame.CastSwipeAnimation2.Rotation:SetDuration(options.rotationDuration)\n    unitFrame.CastSwipeAnimation2.Trans:SetDuration(options.rotationDuration)\n    \n    local randomOffset = 5\n    unitFrame.CastSwipeAnimation2.Trans:SetOffset(math.random(-randomOffset, randomOffset), math.random(-randomOffset, randomOffset))\n    \n    \n    unitFrame.StartSwipeAnimation2.Alpha:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Alpha:SetFromAlpha(options.textureStartAlpha)\n    unitFrame.StartSwipeAnimation2.Alpha:SetToAlpha(options.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation2.Scale:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation2.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation2.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)     \n    \nend\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1724195509,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2_icon.png",
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "How much time takes for one revolution.",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.2,
["Name"] = "Rotation Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.05,
["Name"] = "Animation Start Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Key"] = "textureStartAlpha",
["Value"] = 1,
["Name"] = "Texture Start Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.9,
["Name"] = "Texture Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.63921570777893,
0.63921570777893,
0.63921570777893,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["Revision"] = 321,
["semver"] = "",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["version"] = -1,
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = options.textureScale\n    \n    local circularTexture = unitFrame.CastSwipeTexture2\n    \n    --texture settings\n    circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n    circularTexture:SetPoint(\"center\", 0, 0)\n    circularTexture:SetSize(64, 64)    \n    circularTexture:SetBlendMode(\"ADD\")\n    circularTexture:SetVertexColor(DetailsFramework:ParseColors(options.textureColor))\n    circularTexture:SetScale(targetScale)\n    circularTexture:SetAlpha(options.textureAlpha)\n    \n    --animations    \n    unitFrame.CastSwipeAnimation2.Rotation:SetDuration(options.rotationDuration)\n    unitFrame.CastSwipeAnimation2.Trans:SetDuration(options.rotationDuration)\n    \n    local randomOffset = 5\n    unitFrame.CastSwipeAnimation2.Trans:SetOffset(math.random(-randomOffset, randomOffset), math.random(-randomOffset, randomOffset))\n    \n    \n    unitFrame.StartSwipeAnimation2.Alpha:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Alpha:SetFromAlpha(options.textureStartAlpha)\n    unitFrame.StartSwipeAnimation2.Alpha:SetToAlpha(options.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation2.Scale:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation2.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation2.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)     \n    \nend\n\n\n\n\n",
["Name"] = "Cast - AoE Hit All [P]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
451102,
426787,
448888,
439811,
434796,
434793,
438879,
438473,
434252,
434829,
440468,
436205,
436246,
441395,
437533,
451965,
456902,
456900,
451996,
451939,
450077,
450079,
324909,
324922,
460092,
272711,
269266,
425974,
424879,
426771,
426786,
423324,
428879,
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = false,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local DF = DetailsFramework\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture2:Show()\n        unitFrame.CastSwipeAnimation2:Play()\n        unitFrame.StartSwipeAnimation2:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation2:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation2:Stop()\n                unitFrame.CastSwipeTexture2:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture2) then\n            return\n        end\n        \n        local circularTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n        circularTexture:SetPoint(\"center\", 0, 0)\n        circularTexture:SetSize(64, 64)\n        circularTexture:Hide()\n        \n        unitFrame.CastSwipeTexture2 = circularTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation2 = DF:CreateAnimationHub(circularTexture)\n        unitFrame.CastSwipeAnimation2:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation2.Rotation = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"rotation\", 1, 1, 360)\n        unitFrame.CastSwipeAnimation2.Trans = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"TRANSLATION\", 1, 1, 2, 2)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, function()circularTexture:Show() end)\n        \n        unitFrame.StartSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, nil, function()circularTexture:Hide() end)\n        \n        unitFrame.EndSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"alpha\", 1, 0.2, 1, 0)\n        \n        unitFrame.EndSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n        \n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.TextureWatchStep) then\n        \n        unitFrame.TextureWatchStep = true\n        \n        local animationFrame = CreateFrame(\"frame\", nil, unitFrame)\n        \n        \n        --> single animation group\n        local bearTrapAnimation = animationFrame:CreateAnimationGroup(\"beartrapAnimationGroup\")\n        bearTrapAnimation:SetLooping(\"NONE\")\n        \n        --> widgets:\n        \n        ----------------------------------------------\n        \n        local leftTrap  = animationFrame:CreateTexture(\"$parentleftTrapTexture\", \"ARTWORK\")\n        leftTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        leftTrap:SetDrawLayer(\"ARTWORK\", 0)\n        leftTrap:SetPoint(\"center\", animationFrame, \"center\", -48, 0)\n        leftTrap:SetSize(100, 100)\n        leftTrap:SetTexCoord(1, 0.0010000000149012, 0.0010000000149012, 1)\n        \n        --> animations for leftTrap\n        \n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(1)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetStartDelay(0.39999997615814)\n        leftTrap.rotation:SetDegrees(-90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(6)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetDegrees(90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        leftTrap.alpha:SetTarget(leftTrap)\n        leftTrap.alpha:SetOrder(6)\n        leftTrap.alpha:SetDuration(0.195999994874)\n        leftTrap.alpha:SetFromAlpha(1)\n        leftTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local rightTrap  = animationFrame:CreateTexture(\"$parentrightTrapTexture\", \"ARTWORK\")\n        rightTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        rightTrap:SetDrawLayer(\"ARTWORK\", 0)\n        rightTrap:SetPoint(\"center\", animationFrame, \"center\", 0, 0)\n        rightTrap:SetSize(100, 100)\n        \n        --> animations for rightTrap\n        \n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(1)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetStartDelay(0.39999997615814)\n        rightTrap.rotation:SetDegrees(90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(6)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetDegrees(-90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        rightTrap.alpha:SetTarget(rightTrap)\n        rightTrap.alpha:SetOrder(6)\n        rightTrap.alpha:SetDuration(0.195999994874)\n        rightTrap.alpha:SetFromAlpha(1)\n        rightTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local boots  = animationFrame:CreateTexture(\"$parentbootsTexture\", \"BORDER\")\n        boots:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_shoes.png]])\n        boots:SetDrawLayer(\"BORDER\", 0)\n        boots:SetPoint(\"center\", animationFrame, \"center\", -88, 35)\n        boots:SetSize(50, 50)\n        \n        --> animations for boots\n        \n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(1)\n        boots.alpha:SetDuration(0.31599998474121)\n        boots.alpha:SetFromAlpha(0)\n        boots.alpha:SetToAlpha(1)\n        boots.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        boots.rotation:SetTarget(boots)\n        boots.rotation:SetOrder(1)\n        boots.rotation:SetDuration(0.2960000038147)\n        boots.rotation:SetStartDelay(0.19999998807907)\n        boots.rotation:SetDegrees(40)\n        boots.rotation:SetOrigin(\"center\", 0, 0)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(1)\n        boots.translation:SetDuration(0.59599995613098)\n        boots.translation:SetOffset(63, -33)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(2)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(3)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(4)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(5)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(6)\n        boots.alpha:SetDuration(0.39599999785423)\n        boots.alpha:SetFromAlpha(1)\n        boots.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        unitFrame.BearTrapTextures = {leftTrap, rightTrap, boots}\n        unitFrame.BearTrapAnimationFrame = animationFrame\n        unitFrame.BearTrapAnimation = bearTrapAnimation\n        \n        \n        bearTrapAnimation:SetScript(\"OnPlay\", function()\n                boots:SetAlpha(0)\n                boots:Show()\n                leftTrap:Show()\n                rightTrap:Show()            \n        end)\n        \n        bearTrapAnimation:SetScript(\"OnFinished\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)       \n        \n        bearTrapAnimation:SetScript(\"OnStop\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)           \n        \n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimation:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1720031975,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_voidzone.png",
["Enabled"] = false,
["Revision"] = 220,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Settings for the animation played when the cast creates small void zones in the ground.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
},
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimationFrame:SetSize(1, 1)\n    unitFrame.BearTrapAnimationFrame:ClearAllPoints()\n    unitFrame.BearTrapAnimationFrame:SetPoint(\"center\", unitFrame, \"center\", 30, 63)\n    unitFrame.BearTrapAnimationFrame:SetScale(0.5)\n    \n    unitFrame.BearTrapAnimation:Play()\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - Voidzone [P]",
["Desc"] = "Play an animation when the cast creates small zones in the ground that will damage if the player doesn't move.",
["SpellIds"] = {
450784,
451423,
445813,
445838,
438658,
433845,
456696,
451391,
324923,
323138,
340189,
326021,
320571,
321780,
345623,
333479,
334476,
320772,
257882,
424903,
426345,
422233,
445541,
428703,
439559,
},
["semver"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the reference of the arrow texture\n    local movingArrowTexture = unitFrame._movingArrowTexture\n    \n    --if it doesn't exists yet, create now\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    local mAT = movingArrowTexture\n    \n    if (not mAT.movingAnimation) then\n        local onPlay = function()\n            mAT:Show() \n        end\n        \n        local onStop =  function()\n            mAT:Hide() \n        end\n        \n        mAT.movingAnimation = Plater:CreateAnimationHub( mAT, onPlay, onStop )\n        mAT.movingAnimation:SetLooping( \"REPEAT\" )\n    end\n    \n    if (not mAT.arrowAnimation) then\n        local arrowAnimation = Plater:CreateAnimation (mAT.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n        mAT.arrowAnimation = arrowAnimation\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    mAT.movingAnimation:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    local maxAlpha = scriptTable.config.arrowAlpha\n    \n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = mAT.movingAnimation:GetProgress()\n    \n    if (percent < 0.20) then\n        local value = DetailsFramework.Math.MapRangeClamped(0, 0.20, 0, maxAlpha, percent)\n        mAT:SetAlpha(value)\n        \n    elseif (percent > 0.8) then\n        local value = DetailsFramework.Math.MapRangeClamped(0.8, 1, maxAlpha, 0, percent)\n        mAT:SetAlpha(value)\n    end\n    \n    self.ThrottleUpdate = 0\n    \n    --mAT:SetAlpha(1)\nend",
["Time"] = 1719788095,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = false,
["Revision"] = 754,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 0.73,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Key"] = "animSpeed",
["Value"] = 0.2,
["Name"] = "Animation Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 4,
["Key"] = "desaturateArrow",
["Value"] = false,
["Name"] = "Use White Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
{
["Type"] = 6,
["Key"] = "option8",
["Value"] = 0,
["Name"] = "Option 8",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bChangeSpellName",
["Value"] = true,
["Name"] = "Change Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the spell name to the text entered below",
},
{
["Type"] = 3,
["Key"] = "spellNameText",
["Value"] = "Frontal",
["Name"] = "New Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "The customized spell name",
},
},
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    \n    mAT:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    mAT:SetSize(16, self:GetHeight())\n    mAT:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    mAT:SetParent(self.FrameOverlay)\n    mAT:SetDrawLayer(\"overlay\",  7)\n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    mAT:SetDesaturated(scriptTable.config.desaturateArrow)        \n    \n    mAT:ClearAllPoints()\n    mAT:SetPoint(\"left\", self, \"left\", -16, 0)\n    \n    local arrowAnimation = mAT.arrowAnimation\n    arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    arrowAnimation:SetOffset(self:GetWidth(), 0)\n    \n    mAT.movingAnimation:Play()\n    \n    if (scriptTable.config.bChangeSpellName) then\n        self.Text:SetText(scriptTable.config.spellNameText)\n    end\n    \n    --DetailsFramework:DebugVisibility(mAT)\n\nend\n\n\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - Frontal Cone [Plater]",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["SpellIds"] = {
431494,
426860,
448213,
434407,
439789,
434824,
453161,
435012,
439506,
443500,
434779,
451543,
439621,
441384,
441381,
447395,
456711,
448105,
323137,
321968,
331718,
331721,
325223,
340160,
321834,
320596,
324323,
333488,
323496,
333477,
256627,
257292,
454438,
269029,
257862,
425027,
449130,
428202,
448640,
427869,
},
["semver"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local auraDuration = envTable._Duration\n    local altCastId = 1\n    \n    ---@class plater_altcastbarconfig : table\n    ---@field iconTexture string\n    ---@field iconTexcoord table\n    ---@field iconAlpha number\n    ---@field text string\n    ---@field texture any\n    ---@field color any\n    ---@field isChanneling boolean\n    ---@field canInterrupt boolean\n    ---@field height number\n    ---@field iconSize number\n    ---@field textSize number\n    ---@field spellNameAnchor df_anchor\n    ---@field timerAnchor df_anchor\n    ---@field iconAnchor df_anchor\n    \n    local configTable = {\n        iconTexture = envTable._Texture,\n        text = envTable._SpellName,\n        color = \"gray\",\n        isChanneling = true,\n        canInterrupt = false,\n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        \n    }\n    \n    Plater.SetAltCastBar(unitFrame.PlateFrame, configTable, auraDuration, envTable._StartTime, altCastId)\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1724197566,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\aura_castbar.png",
["Options"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend\n\n\n",
["Revision"] = 30,
["semver"] = "",
["Desc"] = "Show a castbar for the aura duration.",
["version"] = -1,
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local auraDuration = envTable._Duration\n    local altCastId = 1\n    \n    ---@class plater_altcastbarconfig : table\n    ---@field iconTexture string\n    ---@field iconTexcoord table\n    ---@field iconAlpha number\n    ---@field text string\n    ---@field texture any\n    ---@field color any\n    ---@field isChanneling boolean\n    ---@field canInterrupt boolean\n    ---@field height number\n    ---@field iconSize number\n    ---@field textSize number\n    ---@field spellNameAnchor df_anchor\n    ---@field timerAnchor df_anchor\n    ---@field iconAnchor df_anchor\n    \n    local configTable = {\n        iconTexture = envTable._Texture,\n        text = envTable._SpellName,\n        color = \"gray\",\n        isChanneling = true,\n        canInterrupt = false,\n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        \n    }\n    \n    Plater.SetAltCastBar(unitFrame.PlateFrame, configTable, auraDuration, envTable._StartTime, altCastId)\n    \nend\n\n\n",
["Name"] = "Aura - Is Cast Bar [P]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
438494,
335141,
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
},
["saved_cvars_last_change"] = {
["nameplateShowOnlyNames"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateOverlapV"] = "Interface/AddOns/Plater/Plater.lua:1581",
["ShowNamePlateLoseAggroFlash"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowEnemyMinus"] = "Interface/AddOns/Plater/Plater.lua:1581",
["NamePlateClassificationScale"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowFriendlyTotems"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplatePersonalHideDelaySeconds"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowDebuffsOnFriendly"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplatePersonalShowInCombat"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplatePersonalShowWithTarget"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateMinAlpha"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateResourceOnTarget"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateLargerScale"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateMaxDistance"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowFriendlyMinions"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateSelfScale"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateTargetBehindMaxDistance"] = "Interface/AddOns/Plater/Plater.lua:1581",
["SoftTargetInteract"] = "Interface/AddOns/BetterFishing/BetterFishing.lua:213",
["nameplateShowEnemies"] = "Interface/AddOns/Plater/Plater.lua:1581",
["NamePlateVerticalScale"] = "Interface/AddOns/BetterBlizzPlates/BetterBlizzPlates.lua:1198",
["nameplateSelectedAlpha"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowSelf"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateSelfTopInset"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateMotionSpeed"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateGlobalScale"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowEnemyMinions"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowEnemyPets"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowFriendlyNPCs"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateSelectedScale"] = "Interface/AddOns/Plater/Plater.lua:1581",
["ShowClassColorInNameplate"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateMinAlphaDistance"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowFriends"] = "Interface/AddOns/Blizzard_SharedXMLBase/CvarUtil.lua:72",
["nameplateMotion"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowFriendlyPets"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateMinScale"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateSelfAlpha"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateOtherTopInset"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowEnemyGuardians"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateSelfBottomInset"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowEnemyTotems"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowFriendlyGuardians"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateOccludedAlphaMult"] = "Interface/AddOns/Plater/Plater.lua:1581",
["NamePlateHorizontalScale"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplatePersonalShowAlways"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowAll"] = "Interface/AddOns/Plater/Plater.lua:1581",
["SoftTargetIconGameObject"] = "Interface/AddOns/BetterFishing/BetterFishing.lua:213",
},
["aura_cache_by_name"] = {
},
["url"] = "https://wago.io/whiiskeyzplater/46",
["hover_highlight_alpha"] = 0.29999998211861,
["cast_statusbar_fadein_time"] = 0.019999999552965,
["indicator_raidmark_scale"] = 0.699999988079071,
["cast_statusbar_spark_alpha"] = 0.71999996900558,
["aura2_y_offset"] = 15.899993896484,
["aura_timer_text_anchor"] = {
["y"] = -7,
["x"] = -1,
["side"] = 1,
},
["castbar_framelevel"] = 0,
["buffs_on_aura2"] = true,
["plate_config"] = {
["player"] = {
["actorname_text_font"] = "Accidental Presidency",
["percent_text_font"] = "Accidental Presidency",
["spellpercent_text_font"] = "Accidental Presidency",
["power_percent_text_color"] = {
1,
1,
1,
},
["big_actortitle_text_font"] = "Accidental Presidency",
["click_through"] = true,
["power_percent_text_font"] = "Accidental Presidency",
["level_text_font"] = "Accidental Presidency",
["spellname_text_font"] = "Accidental Presidency",
["big_actorname_text_font"] = "Accidental Presidency",
["level_text_alpha"] = 0.3,
["module_enabled"] = false,
},
["friendlyplayer"] = {
["actorname_use_friends_color"] = false,
["spellpercent_text_font"] = "Accidental Presidency",
["actorname_friend_color"] = {
0.70980392156863,
},
["level_text_size"] = 8,
["actorname_use_class_color"] = true,
["big_actortitle_text_font"] = "Accidental Presidency",
["cast"] = {
120,
},
["percent_text_ooc"] = true,
["level_text_outline"] = "OUTLINE",
["big_actortitle_text_size"] = 8,
["spellpercent_text_anchor"] = {
["side"] = 5,
["x"] = 1,
},
["level_text_anchor"] = {
["y"] = -2,
["x"] = -2,
["side"] = 5,
},
["big_actortitle_text_shadow_color_offset"] = {
1,
-1,
},
["quest_color_enemy"] = {
1,
0.369,
0,
},
["cast_incombat"] = {
120,
},
["spellname_text_outline"] = "OUTLINE",
["only_thename"] = true,
["big_actorname_text_color"] = {
0.5,
1,
0.5,
},
["actorname_text_font"] = "Accidental Presidency",
["big_actorname_text_shadow_color"] = {
0,
0,
0,
1,
},
["spellname_text_anchor"] = {
["y"] = 1,
["side"] = 3,
},
["big_actortitle_text_shadow_color"] = {
0,
0,
0,
1,
},
["percent_text_anchor"] = {
["y"] = -2,
["x"] = -2,
["side"] = 3,
},
["level_text_font"] = "Accidental Presidency",
["big_actorname_text_outline"] = "OUTLINE",
["spellname_text_font"] = "Accidental Presidency",
["quest_color"] = {
0.5,
1,
0,
1,
},
["big_actorname_text_shadow_color_offset"] = {
1,
-1,
},
["spellname_text_color"] = {
0.95294117647059,
[3] = 0.9921568627451,
},
["quest_color_neutral"] = {
1,
0.65,
0,
},
["mana_incombat"] = {
nil,
4,
},
["relevance_state"] = 4,
["big_actorname_text_font"] = "Accidental Presidency",
["actorname_use_guild_color"] = false,
["all_names"] = true,
["power_percent_text_font"] = "Accidental Presidency",
["percent_text_enabled"] = true,
["show_guild_name"] = true,
["big_actortitle_text_color"] = {
1,
0.8,
0,
},
["percent_show_health"] = true,
["level_text_alpha"] = 1,
["big_actortitle_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 9,
["percent_text_font"] = "Accidental Presidency",
["buff_frame_y_offset"] = 0,
["percent_text_size"] = 8,
["quest_enabled"] = true,
["actorname_text_anchor"] = {
["y"] = 2,
},
["spellpercent_text_size"] = 9,
["quest_color_enabled"] = true,
["health_incombat"] = {
120,
12,
},
["health"] = {
100,
3,
},
["spellname_text_size"] = 9,
["mana"] = {
nil,
4,
},
["big_actorname_text_size"] = 10,
["only_names"] = true,
["level_text_enabled"] = true,
},
["friendlynpc"] = {
["big_actorname_text_size"] = 10,
["spellpercent_text_font"] = "Accidental Presidency",
["level_text_size"] = 8,
["big_actortitle_text_font"] = "Accidental Presidency",
["cast"] = {
120,
8,
},
["percent_text_ooc"] = true,
["level_text_outline"] = "OUTLINE",
["big_actortitle_text_size"] = 8,
["spellpercent_text_anchor"] = {
["side"] = 5,
["x"] = 1,
},
["level_text_anchor"] = {
["y"] = -2,
["x"] = -2,
["side"] = 5,
},
["spellname_text_outline"] = "OUTLINE",
["spellname_text_anchor"] = {
["y"] = 1,
["side"] = 3,
},
["percent_text_anchor"] = {
["y"] = -2,
["x"] = -2,
["side"] = 3,
},
["level_text_font"] = "Accidental Presidency",
["spellname_text_color"] = {
0.95294117647059,
[3] = 0.9921568627451,
},
["quest_color_neutral"] = {
1,
0.65,
0,
},
["power_percent_text_font"] = "Accidental Presidency",
["actorname_text_outline"] = "OUTLINE",
["percent_show_health"] = true,
["spellpercent_text_enabled"] = true,
["actorname_text_spacing"] = 9,
["percent_text_font"] = "Accidental Presidency",
["quest_color_enemy"] = {
1,
0.369,
0,
},
["spellname_text_font"] = "Accidental Presidency",
["spellpercent_text_size"] = 9,
["percent_text_size"] = 8,
["actorname_text_font"] = "Accidental Presidency",
["spellname_text_size"] = 9,
["health_incombat"] = {
nil,
12,
},
["health"] = {
100,
3,
},
["big_actorname_text_font"] = "Accidental Presidency",
["level_text_alpha"] = 1,
["actorname_text_anchor"] = {
["y"] = 2,
},
["percent_text_enabled"] = true,
["level_text_enabled"] = true,
},
["global_health_height"] = 14,
["global_health_width"] = 120,
["enemyplayer"] = {
["big_actorname_text_size"] = 10,
["spellpercent_text_font"] = "Accidental Presidency",
["actorname_friend_color"] = {
0.70980392156863,
1,
1,
1,
},
["level_text_size"] = 8,
["actorname_use_class_color"] = true,
["big_actortitle_text_font"] = "Accidental Presidency",
["cast"] = {
120,
8,
},
["spellpercent_text_size"] = 9,
["level_text_outline"] = "OUTLINE",
["big_actortitle_text_size"] = 8,
["fixed_class_color"] = {
0,
1,
0,
},
["spellpercent_text_anchor"] = {
["side"] = 5,
["x"] = 1,
},
["level_text_anchor"] = {
["y"] = -2,
["x"] = -2,
["side"] = 5,
},
["spellname_text_outline"] = "OUTLINE",
["click_through"] = true,
["spellname_text_anchor"] = {
["y"] = 1,
["side"] = 3,
},
["percent_text_anchor"] = {
["y"] = -2,
["x"] = -2,
["side"] = 3,
},
["level_text_font"] = "Accidental Presidency",
["actorname_text_font"] = "Accidental Presidency",
["quest_color"] = {
0.5,
1,
0,
1,
},
["quest_color_enemy"] = {
1,
0.369,
0,
},
["quest_color_neutral"] = {
1,
0.65,
0,
},
["mana_incombat"] = {
120,
1,
},
["only_thename"] = true,
["power_percent_text_font"] = "Accidental Presidency",
["actorname_use_guild_color"] = false,
["all_names"] = true,
["spellname_text_font"] = "Accidental Presidency",
["only_names"] = true,
["mana"] = {
nil,
1,
},
["actorname_text_outline"] = "OUTLINE",
["actorname_text_anchor"] = {
["y"] = 2,
["side"] = 8,
},
["percent_text_font"] = "Accidental Presidency",
["percent_text_size"] = 8,
["actorname_text_spacing"] = 9,
["only_damaged"] = false,
["relevance_state"] = 4,
["actorname_guild_color"] = {
0.498039,
1,
0.2,
1,
},
["quest_enabled"] = true,
["health_incombat"] = {
nil,
12,
},
["spellname_text_color"] = {
0.95294117647059,
[3] = 0.9921568627451,
},
["quest_color_enabled"] = true,
["spellname_text_size"] = 9,
["health"] = {
100,
7,
},
["spellpercent_text_enabled"] = false,
["level_text_alpha"] = 1,
["actorname_use_friends_color"] = true,
["big_actorname_text_font"] = "Accidental Presidency",
["actorname_text_size"] = 10,
},
["enemynpc"] = {
["quest_color_enemy"] = {
nil,
0.47450983524323,
0.11372549831867,
},
["spellpercent_text_font"] = "Accidental Presidency",
["big_actortitle_text_font"] = "Accidental Presidency",
["cast"] = {
100,
8,
},
["spellpercent_text_size"] = 9,
["level_text_outline"] = "OUTLINE",
["big_actortitle_text_size"] = 8,
["spellpercent_text_anchor"] = {
["side"] = 5,
["x"] = 1,
},
["level_text_anchor"] = {
["y"] = -2,
["x"] = -2,
["side"] = 5,
},
["cast_incombat"] = {
nil,
10,
},
["spellname_text_anchor"] = {
["y"] = 1,
["side"] = 3,
},
["percent_text_anchor"] = {
["y"] = -2,
["x"] = 2,
["side"] = 3,
},
["level_text_font"] = "Accidental Presidency",
["actorname_text_font"] = "Accidental Presidency",
["quest_color"] = {
0.5,
1,
0,
1,
},
["actorname_text_size"] = 10,
["big_actorname_text_font"] = "Accidental Presidency",
["actorname_text_outline"] = "OUTLINE",
["big_actortitle_text_color"] = {
1,
0.8,
0,
},
["percent_text_size"] = 8,
["actorname_text_spacing"] = 9,
["percent_text_font"] = "Accidental Presidency",
["big_actorname_text_color"] = {
0.5,
1,
0.5,
},
["spellname_text_font"] = "Accidental Presidency",
["only_names"] = true,
["level_text_alpha"] = 1,
["relevance_state"] = 4,
["health"] = {
100,
3,
},
["spellname_text_size"] = 9,
["health_incombat"] = {
nil,
10,
},
["power_percent_text_font"] = "Accidental Presidency",
["spellname_text_color"] = {
0.95294117647059,
[3] = 0.9921568627451,
},
["actorname_text_anchor"] = {
["y"] = 2,
["side"] = 8,
},
},
},
["health_selection_overlay"] = "Graphite",
["aura_y_offset"] = 15.899993896484,
["indicator_friendlyclass"] = true,
["expansion_triggerwipe"] = {
[10] = true,
[9] = true,
},
["cast_statusbar_color_nointerrupt"] = {
0.49411764705882,
0.49803921568628,
0.50196078431373,
0.96000000089407,
},
["first_run2"] = true,
["border_thickness"] = 1.5,
["aura_show_tooltip"] = true,
["resources_settings"] = {
["chr"] = {
["Player-3684-0DFC5199"] = "ComboPoints",
["Player-4184-00457B98"] = "Essence",
["Player-120-06E4562E"] = "Runes",
["Player-970-0085ED6B"] = "Essence",
["Player-3684-0DF4A452"] = "ComboPoints",
["Player-3684-0DE2C381"] = "HolyPower",
["Player-959-0562ADB2"] = "Essence",
["Player-4184-00487EBB"] = "HolyPower",
["Player-959-0505BE64"] = "Chi",
["Player-3684-0DE210A6"] = "ArcaneCharges",
["Player-96-09E89B5E"] = "Chi",
["Player-3684-0DF7B56B"] = "Essence",
["Player-4184-0041715C"] = "Chi",
["Player-3684-0DE27D79"] = "SoulShards",
["Player-970-00AEAA45"] = "ComboPoints",
["Player-3684-0DE449B3"] = "Chi",
},
},
["health_animation_time_dilatation"] = 2.8699998855591,
["npc_cache"] = {
[53006] = {
"灵魂链接图腾",
"永恒黎明",
"zhCN",
},
[40788] = {
"Mindbender Ghur'sha",
"Throne of the Tides",
"enUS",
},
[200126] = {
"Fallen Waterspeaker",
"Temple of the Jade Serpent",
},
[190403] = {
"Glacial Proto-Dragon",
"Halls of Infusion",
},
[195265] = {
"唤雷者阿琳佳",
"诺库德阻击战",
"zhCN",
},
[100991] = {
"Strangling Roots",
"Darkheart Thicket",
"enUS",
},
[190404] = {
"Subterranean Proto-Dragon",
"Halls of Infusion",
},
[190405] = {
"Infuser Sariya",
"Halls of Infusion",
},
[133345] = {
"Feckless Assistant",
"The MOTHERLODE!!",
},
[185032] = {
"Taskmaster Xy'pro",
"Sepulcher of the First Ones",
},
[210108] = {
"E.D.N.A",
"矶石宝库",
"zhCN",
},
[212411] = {
"炬龇",
"暗焰裂口",
"zhCN",
},
[213179] = {
"阿瓦诺克斯",
"艾拉-卡拉，回响之城",
"zhCN",
},
[164563] = {
"Vicious Gargon",
"Halls of Atonement",
},
[210109] = {
"大地注能的魔像",
"卡兹阿加",
"zhCN",
},
[169425] = {
"Felhound",
"Brackenhide Hollow",
},
[190407] = {
"Aqua Rager",
"Halls of Infusion",
},
[168658] = {
"Forsworn Devastator",
"Spires of Ascension",
},
[138465] = {
"Ashvane Cannoneer",
"Siege of Boralus",
"enUS",
},
[169426] = {
"Infernal",
"Brackenhide Hollow",
},
[200387] = {
"Shambling Infester",
"Temple of the Jade Serpent",
},
[219066] = {
"痛苦的平民",
"驭雷栖巢",
"zhCN",
},
[180429] = {
"Adorned Starseer",
"Tazavesh, the Veiled Market",
},
[217531] = {
"伊克辛",
"艾拉-卡拉，回响之城",
"zhCN",
},
[98691] = {
"Risen Scout",
"Black Rook Hold",
"enUS",
},
[169428] = {
"Wrathguard",
"Brackenhide Hollow",
},
[180431] = {
"Focused Ritualist",
"Tazavesh, the Veiled Market",
},
[217533] = {
"阿提克",
"艾拉-卡拉，回响之城",
"zhCN",
},
[164567] = {
"Ingra Maloch",
"Mists of Tirna Scithe",
"enUS",
},
[169429] = {
"Shivarra",
"Brackenhide Hollow",
},
[141283] = {
"Kul Tiran Halberd",
"Siege of Boralus",
},
[180432] = {
"Devoted Accomplice",
"Tazavesh, the Veiled Market",
},
[228537] = {
"夜幕影行者",
"破晨号",
"zhCN",
},
[169430] = {
"Ur'zul",
"Brackenhide Hollow",
},
[136934] = {
"Weapons Tester",
"The MOTHERLODE!!",
},
[141284] = {
"Kul Tiran Wavetender",
"Siege of Boralus",
},
[180433] = {
"Wandering Pulsar",
"Tazavesh, the Veiled Market",
},
[131817] = {
"Cragmaw the Infested",
"The Underrot",
},
[228538] = {
"夜幕咒刃",
"破晨号",
"zhCN",
},
[189901] = {
"Warlord Sargha",
"Neltharus",
"enUS",
},
[141285] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[131818] = {
"Marked Sister",
"Waycrest Manor",
},
[213954] = {
"击石者",
"矶石宝库",
"zhCN",
},
[228539] = {
"夜幕暗法师",
"破晨号",
"zhCN",
},
[196043] = {
"Primalist Infuser",
"Halls of Infusion",
},
[168153] = {
"Plagueroc",
"Plaguefall",
},
[131819] = {
"Coven Diviner",
"Waycrest Manor",
"enUS",
},
[228540] = {
"夜幕影法师",
"破晨号",
"zhCN",
},
[196044] = {
"Unruly Textbook",
"Algeth'ar Academy",
},
[100485] = {
"Soul-torn Vanguard",
"Black Rook Hold",
"enUS",
},
[176598] = {
"Torment Golem",
"Torghast, Tower of the Damned",
},
[102788] = {
"Felspite Dominator",
"Black Rook Hold",
"enUS",
},
[129527] = {
"Bilge Rat Buccaneer",
"Freehold",
},
[196045] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
},
[101637] = {
"Valarjar Aspirant",
"Halls of Valor",
},
[175576] = {
"Containment Cell",
"Tazavesh, the Veiled Market",
},
[184020] = {
"Hulking Berserker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[39960] = {
"Deep Murloc Drudge",
"Throne of the Tides",
"enUS",
},
[100486] = {
"Risen Arcanist",
"Black Rook Hold",
},
[44566] = {
"Ozumat",
"Throne of the Tides",
"enUS",
},
[178392] = {
"Gatewarden Zo'mazz",
"Tazavesh, the Veiled Market",
},
[219588] = {
"好好先生",
"燧酿酒庄",
"zhCN",
},
[131823] = {
"Sister Malady",
"Waycrest Manor",
"enUS",
},
[224962] = {
"咒炉愈疗者",
"矶石宝库",
"zhCN",
},
[98696] = {
"Illysanna Ravencrest",
"Black Rook Hold",
"enUS",
},
[129529] = {
"Blacktooth Scrapper",
"Freehold",
},
[212681] = {
"Vicious Snap Dragon",
"Throne of the Tides",
"enUS",
},
[131825] = {
"Sister Briar",
"Waycrest Manor",
"enUS",
},
[222149] = {
"受伤的土灵",
"矶石宝库",
"zhCN",
},
[178139] = {
"Murkbrine Shellcrusher",
"Tazavesh, the Veiled Market",
},
[133361] = {
"Wasting Servant",
"Waycrest Manor",
"enUS",
},
[164578] = {
"Stitchflesh's Creation",
"The Necrotic Wake",
"enUS",
},
[150250] = {
"Pistonhead Blaster",
"Operation: Mechagon",
},
[220616] = {
"通道沉眠者",
"暗焰裂口",
"zhCN",
},
[178141] = {
"Murkbrine Scalebinder",
"Tazavesh, the Veiled Market",
},
[137713] = {
"Big Money Crab",
"The MOTHERLODE!!",
},
[150251] = {
"Pistonhead Mechanic",
"Operation: Mechagon",
},
[39450] = {
"Trogg Dweller",
"Grim Batol",
},
[137458] = {
"Rotting Spore",
"The Underrot",
},
[199124] = {
"Primalist Chillblaster",
"Vault of the Incarnates",
},
[126845] = {
"Captain Jolly",
"Freehold",
},
[168420] = {
"Forsworn Champion",
"Spires of Ascension",
},
[150253] = {
"Weaponized Crawler",
"Operation: Mechagon",
},
[168932] = {
"Doomguard",
"Brackenhide Hollow",
},
[82579] = {
"Grom'kar Far Seer",
"Grimrail Depot",
},
[129788] = {
"Irontide Bonesaw",
"Freehold",
},
[190426] = {
"Decay Totem",
"Brackenhide Hollow",
},
[137716] = {
"Bottom Feeder",
"The MOTHERLODE!!",
},
[177889] = {
"Mawforged Souljudge",
"Sanctum of Domination",
},
[147440] = {
"炽热火焰卫士",
"达萨罗之战",
"zhCN",
},
[168934] = {
"Enraged Spirit",
"De Other Side",
},
[217039] = {
"蛛魔搬运者",
"艾拉-卡拉，回响之城",
"zhCN",
},
[45912] = {
"Wild Vortex",
"The Vortex Pinnacle",
},
[177891] = {
"Mawforged Summoner",
"Sanctum of Domination",
},
[223181] = {
"未知目标",
"千丝之城",
"zhCN",
},
[86547] = {
"Venom Sprayer",
"The Everbloom",
"enUS",
},
[177892] = {
"Mawforged Goliath",
"Sanctum of Domination",
},
[223182] = {
"未知目标",
"千丝之城",
"zhCN",
},
[168425] = {
"Forsworn Annihilator",
"Spires of Ascension",
},
[197595] = {
"Earthwrought Smasher",
"Vault of the Incarnates",
},
[220368] = {
"未知目标",
"燧酿酒庄",
"zhCN",
},
[40923] = {
"Unstable Corruption",
"Throne of the Tides",
"enUS",
},
[94224] = {
"Petrifying Totem",
"Neltharion's Lair",
},
[136186] = {
"Tidesage Spiritualist",
"Shrine of the Storm",
},
[216275] = {
"未知目标",
"水能堡",
"zhCN",
},
[39388] = {
"Mutated Hatchling",
"Grim Batol",
},
[186338] = {
"马鲁克",
"诺库德阻击战",
"zhCN",
},
[172265] = {
"Remnant of Fury",
"Sanguine Depths",
},
[160495] = {
"Maniacal Soulbinder",
"Theater of Pain",
},
[186339] = {
"提拉",
"诺库德阻击战",
"zhCN",
},
[202971] = {
"空虚微光",
"亚贝鲁斯，焰影熔炉",
"zhCN",
},
[218324] = {
"纳克特",
"艾拉-卡拉，回响之城",
"zhCN",
},
[192481] = {
"Decaying Slime",
"Brackenhide Hollow",
},
[81432] = {
"Grom'kar Technician",
"Iron Docks",
},
[191714] = {
"搜寻中的雷灵",
"化身巨龙牢窟",
"zhCN",
},
[171500] = {
"Shuffling Corpse",
"The Necrotic Wake",
},
[196576] = {
"Spellbound Scepter",
"Algeth'ar Academy",
},
[127106] = {
"Irontide Officer",
"Freehold",
},
[168942] = {
"Death Speaker",
"De Other Side",
},
[165872] = {
"Flesh Crafter",
"The Necrotic Wake",
"enUS",
},
[131585] = {
"Enthralled Guard",
"Waycrest Manor",
},
[134144] = {
"Living Current",
"Shrine of the Storm",
},
[163058] = {
"Mistveil Defender",
"Mists of Tirna Scithe",
"enUS",
},
[102287] = {
"Emberhusk Dominator",
"Neltharion's Lair",
},
[131586] = {
"Banquet Steward",
"Waycrest Manor",
},
[205790] = {
"未知目标",
"永恒黎明",
"zhCN",
},
[101008] = {
"Stinging Swarm",
"Black Rook Hold",
"enUS",
},
[135169] = {
"Spirit Drain Totem",
"The Underrot",
},
[131587] = {
"Bewitched Captain",
"Waycrest Manor",
},
[191206] = {
"Primalist Mage",
"Vault of the Incarnates",
},
[40925] = {
"Tainted Sentry",
"Throne of the Tides",
"enUS",
},
[98706] = {
"Commander Shemdah'sohn",
"Black Rook Hold",
"enUS",
},
[86552] = {
"Gorged Burster",
"The Everbloom",
"enUS",
},
[165108] = {
"Illusionary Clone",
"Mists of Tirna Scithe",
"enUS",
},
[162038] = {
"Regal Mistdancer",
"Sanguine Depths",
},
[130435] = {
"Addled Thug",
"The MOTHERLODE!!",
},
[45915] = {
"Armored Mistral",
"The Vortex Pinnacle",
},
[81819] = {
"Everbloom Naturalist",
"The Everbloom",
"enUS",
},
[184300] = {
"Ebonstone Golem",
"Uldaman: Legacy of Tyr",
"enUS",
},
[162039] = {
"Wicked Oppressor",
"Sanguine Depths",
},
[170483] = {
"Atal'ai Deathwalker's Spirit",
"De Other Side",
},
[76446] = {
"Shadowmoon Enslaver",
"Shadowmoon Burial Grounds",
},
[216541] = {
"纺线大师弗西斯",
"11.0 - 战役尾声场景",
"zhCN",
},
[184301] = {
"Cavern Seeker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[162040] = {
"Grand Overseer",
"Sanguine Depths",
},
[130436] = {
"Off-Duty Laborer",
"The MOTHERLODE!!",
},
[134150] = {
"Runecarver Sorn",
"Shrine of the Storm",
},
[114316] = {
"Baroness Dorothea Millstipe",
"Return to Karazhan",
},
[81820] = {
"Everbloom Mender",
"The Everbloom",
"enUS",
},
[213216] = {
"代言人多利塔",
"矶石宝库",
"zhCN",
},
[173044] = {
"Stitching Assistant",
"The Necrotic Wake",
"enUS",
},
[224731] = {
"掠网者",
"千丝之城",
"zhCN",
},
[139269] = {
"Gloom Horror",
"Waycrest Manor",
"enUS",
},
[137478] = {
"Queen Wasi",
"Kings' Rest",
},
[156157] = {
"Coldheart Ascendant",
"Torghast, Tower of the Damned",
},
[131849] = {
"Crazed Marksman",
"Waycrest Manor",
"enUS",
},
[95766] = {
"Crazed Razorbeak",
"Darkheart Thicket",
"enUS",
},
[114317] = {
"Lady Catriona Von'Indi",
"Return to Karazhan",
},
[204262] = {
"通灵之霜",
"永恒黎明",
"zhCN",
},
[127111] = {
"Irontide Oarsman",
"Freehold",
},
[131850] = {
"Maddened Survivalist",
"Waycrest Manor",
"enUS",
},
[138247] = {
"Irontide Curseblade",
"Siege of Boralus",
"enUS",
},
[98965] = {
"Kur'talos Ravencrest",
"Black Rook Hold",
"enUS",
},
[175861] = {
"Glacial Spike",
"Sanctum of Domination",
},
[178165] = {
"Coastwalker Goliath",
"Tazavesh, the Veiled Market",
},
[219361] = {
"机械师保护者",
"觉醒大厅",
"zhCN",
},
[82590] = {
"Grimrail Scout",
"Grimrail Depot",
},
[212453] = {
"阴森的虚空之魂",
"卡兹阿加",
"zhCN",
},
[39392] = {
"Faceless Corruptor",
"Grim Batol",
},
[170490] = {
"Atal'ai High Priest",
"De Other Side",
},
[219874] = {
"高阶代言人的构造体",
"觉醒大厅",
"zhCN",
},
[164861] = {
"Spriggan Barkbinder",
"De Other Side",
},
[114319] = {
"Lady Keira Berrybuck",
"Return to Karazhan",
},
[162047] = {
"Insatiable Brute",
"Sanguine Depths",
},
[96664] = {
"Valarjar Runecarver",
"Halls of Valor",
},
[134157] = {
"Shadow-Borne Warrior",
"Kings' Rest",
},
[216293] = {
"颤声侍从",
"艾拉-卡拉，回响之城",
"zhCN",
},
[56792] = {
"Figment of Doubt",
"Temple of the Jade Serpent",
},
[137484] = {
"King A'akul",
"Kings' Rest",
},
[95769] = {
"Mindshattered Screecher",
"Darkheart Thicket",
"enUS",
},
[210153] = {
"老蜡须",
"暗焰裂口",
"zhCN",
},
[155908] = {
"Deathspeaker",
"Torghast, Tower of the Damned",
},
[174843] = {
"Stoneborn Maitre D'",
"Castle Nathria",
},
[205804] = {
"复生的巨龙",
"永恒黎明",
"zhCN",
},
[84767] = {
"Twisted Abomination",
"The Everbloom",
"enUS",
},
[137486] = {
"Queen Patlaa",
"Kings' Rest",
},
[138254] = {
"Irontide Powdershot",
"Siege of Boralus",
"enUS",
},
[128650] = {
"Chopper Redhook",
"Siege of Boralus",
"enUS",
},
[214761] = {
"夜幕祭师",
"破晨号",
"zhCN",
},
[178171] = {
"Stormforged Guardian",
"Tazavesh, the Veiled Market",
},
[180474] = {
"Soul Reaver",
"Sanctum of Domination",
},
[131858] = {
"Thornguard",
"Waycrest Manor",
},
[138255] = {
"Ashvane Spotter",
"Siege of Boralus",
"enUS",
},
[134417] = {
"Deepsea Ritualist",
"Shrine of the Storm",
},
[214762] = {
"夜幕司令官",
"破晨号",
"zhCN",
},
[186616] = {
"格拉尼斯",
"诺库德阻击战",
"zhCN",
},
[182778] = {
"Collapsing Quasar",
"Sepulcher of the First Ones",
},
[95771] = {
"Dreadsoul Ruiner",
"Darkheart Thicket",
"enUS",
},
[128651] = {
"Hadal Darkfathom",
"Siege of Boralus",
"enUS",
},
[216554] = {
"苏雷吉导线者",
"11.0 - 战役尾声场景",
"zhCN",
},
[202481] = {
"黑曜折磨者",
"10.1 Zaralek Caverns - Chapter 6 Scenario",
"zhCN",
},
[129547] = {
"Blacktooth Knuckleduster",
"Freehold",
},
[98970] = {
"Latosius",
"Black Rook Hold",
"enUS",
},
[187897] = {
"Defier Draghar",
"Ruby Life Pools",
},
[138002] = {
"Scrimshaw Gutter",
"Siege of Boralus",
"enUS",
},
[45919] = {
"Young Storm Dragon",
"The Vortex Pinnacle",
},
[186107] = {
"Vault Keeper",
"Uldaman: Legacy of Tyr",
"enUS",
},
[129548] = {
"Blacktooth Brute",
"Freehold",
},
[206066] = {
"时流汲取者",
"永恒黎明",
"zhCN",
},
[127757] = {
"Reanimated Honor Guard",
"Atal'Dazar",
},
[131863] = {
"Raal the Gluttonous",
"Waycrest Manor",
"enUS",
},
[162057] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[131864] = {
"Gorak Tul",
"Waycrest Manor",
"enUS",
},
[136214] = {
"Windspeaker Heldis",
"Shrine of the Storm",
},
[136470] = {
"Refreshment Vendor",
"The MOTHERLODE!!",
},
[107288] = {
"Vilethorn Sapling",
"Darkheart Thicket",
"enUS",
},
[80805] = {
"Makogg Emberblade",
"Iron Docks",
},
[184319] = {
"Refti Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[133912] = {
"Bloodsworn Defiler",
"The Underrot",
},
[164873] = {
"Runestag Elderhorn",
"De Other Side",
},
[216560] = {
"阿哈格罗",
"11.0 - 战役尾声场景",
"zhCN",
},
[195579] = {
"原始阵风",
"诺库德阻击战",
"zhCN",
},
[82597] = {
"Grom'kar Captain",
"Grimrail Depot",
},
[216561] = {
"加恩丹德",
"11.0 - 战役尾声场景",
"zhCN",
},
[190206] = {
"Primalist Flamedancer",
"Ruby Life Pools",
},
[191230] = {
"Dragonspawn Flamebender",
"Vault of the Incarnates",
},
[190207] = {
"Primalist Cinderweaver",
"Ruby Life Pools",
},
[59546] = {
"The Talking Fish",
"Temple of the Jade Serpent",
},
[220401] = {
"苍白牧师",
"千丝之城",
"zhCN",
},
[99358] = {
"Rotheart Dryad",
"Darkheart Thicket",
"enUS",
},
[192767] = {
"Primal Icebulk",
"Vault of the Incarnates",
},
[191232] = {
"Drakonid Stormbringer",
"Vault of the Incarnates",
},
[224240] = {
"Twilight Decapitator",
"Grim Batol",
},
[163086] = {
"Rancid Gasbag",
"Theater of Pain",
},
[184580] = {
"Olaf",
"Uldaman: Legacy of Tyr",
"enUS",
},
[129552] = {
"Monzumi",
"Atal'Dazar",
"enUS",
},
[206074] = {
"摆时者",
"永恒黎明",
"zhCN",
},
[80936] = {
"Grom'kar Grenadier",
"Grimrail Depot",
},
[184581] = {
"Baelog",
"Uldaman: Legacy of Tyr",
"enUS",
},
[168717] = {
"Forsworn Justicar",
"Spires of Ascension",
},
[134174] = {
"Shadow-Borne Witch Doctor",
"Kings' Rest",
},
[214263] = {
"蜡面",
"水能堡",
"zhCN",
},
[114584] = {
"Phantom Crew",
"Return to Karazhan",
},
[184582] = {
"Eric \"The Swift\"",
"Uldaman: Legacy of Tyr",
"enUS",
},
[59547] = {
"Jiang",
"Temple of the Jade Serpent",
},
[168718] = {
"Forsworn Warden",
"Spires of Ascension",
},
[129553] = {
"Dinomancer Kish'o",
"Atal'Dazar",
"enUS",
},
[214264] = {
"咒炉荣誉卫兵",
"矶石宝库",
"zhCN",
},
[222964] = {
"风味科学家",
"燧酿酒庄",
"zhCN",
},
[99360] = {
"Vilethorn Blossom",
"Darkheart Thicket",
"enUS",
},
[195842] = {
"尤克赫尔腐蚀者",
"诺库德阻击战",
"zhCN",
},
[150297] = {
"Mechagon Renormalizer",
"Operation: Mechagon",
},
[84520] = {
"Pitwarden Gwarnok",
"Iron Docks",
},
[165138] = {
"Blight Bag",
"The Necrotic Wake",
},
[40357] = {
"Invoked Shadowflame Spirit",
"Grim Batol",
},
[80938] = {
"Grom'kar Hulk",
"Grimrail Depot",
},
[95779] = {
"Festerhide Grizzly",
"Darkheart Thicket",
"enUS",
},
[186122] = {
"Rira Hackclaw",
"Brackenhide Hollow",
},
[184331] = {
"Infinite Timereaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[153882] = {
"Deadsoul Spirit",
"Torghast, Tower of the Damned",
},
[193799] = {
"Rotchanting Totem",
"Brackenhide Hollow",
},
[196102] = {
"Conjured Lasher",
"The Azure Vault",
},
[163862] = {
"Defender of Many Eyes",
"Plaguefall",
},
[40166] = {
"Molten Giant",
"Grim Batol",
},
[224249] = {
"Twilight Lavabender",
"Grim Batol",
},
[189706] = {
"Chaotic Essence",
"Castle Nathria",
},
[151325] = {
"Alarm-o-Bot",
"Operation: Mechagon",
},
[180495] = {
"Enraged Direhorn",
"Tazavesh, the Veiled Market",
},
[223994] = {
"夜幕影法师",
"破晨号",
"zhCN",
},
[226809] = {
"未知目标",
"新的蜡烛，新的希望",
"zhCN",
},
[186125] = {
"Tricktotem",
"Brackenhide Hollow",
},
[165911] = {
"Loyal Creation",
"The Necrotic Wake",
"enUS",
},
[201222] = {
"瓦罗，时誓守护者",
"永恒黎明",
"zhCN",
},
[223995] = {
"夜幕咒刃",
"破晨号",
"zhCN",
},
[184335] = {
"Infinite Agent",
"Uldaman: Legacy of Tyr",
"enUS",
},
[201223] = {
"永恒暮光大法师",
"永恒黎明",
"zhCN",
},
[193291] = {
"Apex Blazewing",
"Neltharus",
"enUS",
},
[216320] = {
"凝结聚合体",
"千丝之城",
"zhCN",
},
[194315] = {
"唤雷者索隆葛",
"诺库德阻击战",
"zhCN",
},
[165913] = {
"Ghastly Parishioner",
"Halls of Atonement",
},
[137511] = {
"Bilge Rat Cutthroat",
"Siege of Boralus",
"enUS",
},
[40167] = {
"Twilight Beguiler",
"Grim Batol",
},
[195851] = {
"尤克赫尔亡语者",
"诺库德阻击战",
"zhCN",
},
[222974] = {
"未知目标",
"千丝之城",
"zhCN",
},
[193293] = {
"Qalashi Warden",
"Neltharus",
"enUS",
},
[114334] = {
"Damaged Golem",
"Return to Karazhan",
},
[216578] = {
"虫群专家多米丝",
"11.0 - 战役尾声场景",
"zhCN",
},
[194317] = {
"Stormcaller Boroo",
"The Nokhud Offensive",
},
[172312] = {
"Spinemaw Gorger",
"Mists of Tirna Scithe",
"enUS",
},
[138281] = {
"Faceless Corruptor",
"The Underrot",
},
[45477] = {
"Gust Soldier",
"The Vortex Pinnacle",
},
[99366] = {
"Taintheart Summoner",
"Darkheart Thicket",
"enUS",
},
[187154] = {
"Arcane Curator",
"The Azure Vault",
},
[201739] = {
"黑曜壁垒",
"10.1 Zaralek Caverns - Chapter 6 Scenario",
"zhCN",
},
[167964] = {
"4.RF-4.RF",
"De Other Side",
},
[187155] = {
"Rune Seal Keeper",
"The Azure Vault",
},
[201740] = {
"黑曜士兵",
"10.1 Zaralek Caverns - Chapter 6 Scenario",
"zhCN",
},
[195855] = {
"复活的战士",
"诺库德阻击战",
"zhCN",
},
[134701] = {
"Blood Effigy",
"The Underrot",
},
[80816] = {
"Ahri'ok Dugru",
"Iron Docks",
},
[167965] = {
"Lubricator",
"De Other Side",
},
[137516] = {
"Ashvane Invader",
"Siege of Boralus",
"enUS",
},
[144169] = {
"Ashvane Commander",
"Siege of Boralus",
},
[193553] = {
"诺库德战獒",
"诺库德阻击战",
"zhCN",
},
[216326] = {
"未知目标",
"千丝之城",
"zhCN",
},
[216582] = {
"凯克斯",
"11.0 - 战役尾声场景",
"zhCN",
},
[40936] = {
"Faceless Watcher",
"Throne of the Tides",
"enUS",
},
[165919] = {
"Skeletal Marauder",
"The Necrotic Wake",
"enUS",
},
[137517] = {
"Ashvane Destroyer",
"Siege of Boralus",
"enUS",
},
[144170] = {
"Ashvane Sniper",
"Siege of Boralus",
},
[201742] = {
"黑曜魔导师",
"10.1 Zaralek Caverns - Chapter 6 Scenario",
"zhCN",
},
[115488] = {
"Infused Pyromancer",
"Return to Karazhan",
},
[171805] = {
"Research Scribe",
"Sanguine Depths",
},
[167967] = {
"Sentient Oil",
"De Other Side",
},
[193555] = {
"诺库德村民",
"诺库德阻击战",
"zhCN",
},
[216328] = {
"不稳定的测试对象",
"千丝之城",
"zhCN",
},
[216584] = {
"蛛魔队长",
"地匍矿洞",
"zhCN",
},
[163618] = {
"Zolramus Necromancer",
"The Necrotic Wake",
"enUS",
},
[192788] = {
"Qalashi Thaumaturge",
"Neltharus",
"enUS",
},
[213770] = {
"Ink of Ozumat",
"Throne of the Tides",
"enUS",
},
[168992] = {
"Risen Cultist",
"De Other Side",
},
[220423] = {
"退休的尊将瓦拉扎克",
"千丝之城",
"zhCN",
},
[165410] = {
"High Adjudicator Aleez",
"Halls of Atonement",
},
[163619] = {
"Zolramus Bonecarver",
"The Necrotic Wake",
},
[192789] = {
"诺库德长弓手",
"诺库德阻击战",
"zhCN",
},
[219912] = {
"爬行者",
"11.0 - 战役尾声场景",
"zhCN",
},
[83761] = {
"Ogron Laborer",
"Iron Docks",
},
[163620] = {
"Rotspew",
"The Necrotic Wake",
"enUS",
},
[137521] = {
"Irontide Powdershot",
"Siege of Boralus",
"enUS",
},
[59552] = {
"The Crybaby Hozen",
"Temple of the Jade Serpent",
},
[189464] = {
"Qalashi Irontorch",
"Neltharus",
"enUS",
},
[196117] = {
"Crystal Construct",
"The Azure Vault",
},
[163621] = {
"Goregrind",
"The Necrotic Wake",
},
[192791] = {
"诺库德战矛",
"诺库德阻击战",
"zhCN",
},
[182045] = {
"Necrotic Ritualist",
"Sepulcher of the First Ones",
},
[198933] = {
"伊律迪孔",
"永恒黎明",
"zhCN",
},
[133685] = {
"Befouled Spirit",
"The Underrot",
},
[189466] = {
"Irontorch Commander",
"Neltharus",
"enUS",
},
[216333] = {
"沾血的助手",
"艾拉-卡拉，回响之城",
"zhCN",
},
[97068] = {
"Storm Drake",
"Halls of Valor",
},
[163623] = {
"Rotspew Leftovers",
"The Necrotic Wake",
},
[219148] = {
"未知目标",
"觉醒大厅",
"zhCN",
},
[133430] = {
"Venture Co. Mastermind",
"The MOTHERLODE!!",
},
[189467] = {
"Qalashi Bonesplitter",
"Neltharus",
"enUS",
},
[214287] = {
"未知目标",
"矶石宝库",
"zhCN",
},
[83763] = {
"Grom'kar Technician",
"Iron Docks",
},
[219149] = {
"错乱的斯卡丁",
"觉醒大厅",
"zhCN",
},
[192794] = {
"诺库德兽王",
"诺库德阻击战",
"zhCN",
},
[59553] = {
"The Songbird Queen",
"Temple of the Jade Serpent",
},
[228361] = {
"敏捷的追击者",
"千丝之城",
"zhCN",
},
[59873] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
},
[133432] = {
"Venture Co. Alchemist",
"The MOTHERLODE!!",
},
[197145] = {
"巨型风魔",
"化身巨龙牢窟",
"zhCN",
},
[222221] = {
"虫群尖刺",
"11.0 - 战役尾声场景",
"zhCN",
},
[45928] = {
"Executor of the Caliph",
"The Vortex Pinnacle",
},
[83892] = {
"Life Warden Gola",
"The Everbloom",
"enUS",
},
[163882] = {
"Decaying Flesh Giant",
"Plaguefall",
},
[192796] = {
"诺库德号角手",
"诺库德阻击战",
"zhCN",
},
[203799] = {
"Horde Axe Thrower",
"Dawn of the Infinite",
"enUS",
},
[216337] = {
"血工",
"艾拉-卡拉，回响之城",
"zhCN",
},
[188703] = {
"Protoform Barrier",
"Castle Nathria",
},
[215826] = {
"血工",
"艾拉-卡拉，回响之城",
"zhCN",
},
[136249] = {
"Guardian Elemental",
"Shrine of the Storm",
},
[216338] = {
"魁梧的血卫",
"艾拉-卡拉，回响之城",
"zhCN",
},
[83893] = {
"Earthshaper Telu",
"The Everbloom",
"enUS",
},
[207639] = {
"迦拉克隆之荒",
"永恒黎明",
"zhCN",
},
[189472] = {
"Qalashi Lavabearer",
"Neltharus",
"enUS",
},
[216339] = {
"苏雷吉反自然者",
"千丝之城",
"zhCN",
},
[210966] = {
"苏雷吉网法师",
"破晨号",
"zhCN",
},
[101549] = {
"Arcane Minion",
"Black Rook Hold",
"enUS",
},
[205337] = {
"永恒曲时者",
"永恒黎明",
"zhCN",
},
[168747] = {
"Venomfang",
"Plaguefall",
},
[216340] = {
"哨兵鹿壳虫",
"艾拉-卡拉，回响之城",
"zhCN",
},
[83894] = {
"Dulhu",
"The Everbloom",
"enUS",
},
[192800] = {
"诺库德长枪大师",
"诺库德阻击战",
"zhCN",
},
[197406] = {
"Aggravated Skitterfly",
"Algeth'ar Academy",
},
[201756] = {
"昶魑乀",
"永恒黎明",
"zhCN",
},
[216341] = {
"戳刺飞虫",
"艾拉-卡拉，回响之城",
"zhCN",
},
[75451] = {
"Defiled Spirit",
"Shadowmoon Burial Grounds",
},
[100527] = {
"Dreadfire Imp",
"Darkheart Thicket",
"enUS",
},
[156212] = {
"Coldheart Agent",
"Torghast, Tower of the Damned",
},
[163121] = {
"Stitched Vanguard",
"The Necrotic Wake",
"enUS",
},
[192803] = {
"作战欧胡纳",
"诺库德阻击战",
"zhCN",
},
[224276] = {
"Twilight Enforcer",
"Grim Batol",
},
[45930] = {
"Minister of Air",
"The Vortex Pinnacle",
},
[216856] = {
"未知目标",
"艾拉-卡拉，回响之城",
"zhCN",
},
[223253] = {
"沾血的网法师",
"艾拉-卡拉，回响之城",
"zhCN",
},
[162099] = {
"General Kaal",
"Sanguine Depths",
},
[189478] = {
"Forgemaster Gorek",
"Neltharus",
"enUS",
},
[195875] = {
"被亵渎的獒犬",
"诺库德阻击战",
"zhCN",
},
[186664] = {
"Stonevault Ambusher",
"Uldaman: Legacy of Tyr",
"enUS",
},
[195876] = {
"被亵渎的欧胡纳",
"诺库德阻击战",
"zhCN",
},
[212764] = {
"引擎语者",
"矶石宝库",
"zhCN",
},
[135234] = {
"Diseased Mastiff",
"Waycrest Manor",
"enUS",
},
[203809] = {
"熵能之憎",
"亚贝鲁斯，焰影熔炉",
"zhCN",
},
[195877] = {
"复活的秘术师",
"诺库德阻击战",
"zhCN",
},
[103344] = {
"Oakheart",
"Darkheart Thicket",
"enUS",
},
[135235] = {
"Spectral Beastmaster",
"Kings' Rest",
},
[199716] = {
"诺库德蛮兵",
"诺库德阻击战",
"zhCN",
},
[163126] = {
"Brittlebone Mage",
"The Necrotic Wake",
"enUS",
},
[163894] = {
"Blighted Spinebreaker",
"Plaguefall",
},
[75966] = {
"Defiled Spirit",
"Shadowmoon Burial Grounds",
},
[199717] = {
"诺库德防御者",
"诺库德阻击战",
"zhCN",
},
[180015] = {
"Burly Deckhand",
"Tazavesh, the Veiled Market",
},
[81212] = {
"Grimrail Overseer",
"Grimrail Depot",
},
[136005] = {
"Rowdy Reveler",
"The MOTHERLODE!!",
},
[197671] = {
"Volatile Infuser",
"Vault of the Incarnates",
},
[163128] = {
"Zolramus Sorcerer",
"The Necrotic Wake",
"enUS",
},
[202789] = {
"未知目标",
"永恒黎明",
"zhCN",
},
[168246] = {
"Reanimated Crossbowman",
"The Necrotic Wake",
},
[136006] = {
"Rowdy Reveler",
"The MOTHERLODE!!",
},
[102962] = {
"Nightmare Abomination",
"Darkheart Thicket",
},
[135239] = {
"Spectral Witch Doctor",
"Kings' Rest",
},
[223772] = {
"炽焰魔",
"暗焰裂口",
"zhCN",
},
[164921] = {
"Drust Harvester",
"Mists of Tirna Scithe",
"enUS",
},
[45932] = {
"Skyfall Star",
"The Vortex Pinnacle",
},
[135240] = {
"Soul Essence",
"Waycrest Manor",
"enUS",
},
[223773] = {
"炽焰魔",
"暗焰裂口",
"zhCN",
},
[166969] = {
"Baroness Frieda",
"Castle Nathria",
},
[208165] = {
"联盟骑士",
"永恒黎明",
"zhCN",
},
[177716] = {
"So' Cartel Assassin",
"Tazavesh, the Veiled Market",
},
[135241] = {
"Bilge Rat Pillager",
"Siege of Boralus",
"enUS",
},
[223774] = {
"炽焰魔",
"暗焰裂口",
"zhCN",
},
[83389] = {
"Ironwing Flamespitter",
"Iron Docks",
},
[166970] = {
"Lord Stavros",
"Castle Nathria",
},
[75713] = {
"Shadowmoon Bone-Mender",
"Shadowmoon Burial Grounds",
},
[223775] = {
"炽焰魔",
"暗焰裂口",
"zhCN",
},
[166971] = {
"Castellan Niklaus",
"Castle Nathria",
},
[152898] = {
"Deadsoul Chorus",
"Torghast, Tower of the Damned",
},
[223776] = {
"炽焰魔",
"暗焰裂口",
"zhCN",
},
[83390] = {
"Thunderlord Wrangler",
"Iron Docks",
},
[164414] = {
"Reanimated Mage",
"The Necrotic Wake",
"enUS",
},
[189234] = {
"Frostbreath Arachnid",
"Vault of the Incarnates",
},
[220195] = {
"苏雷吉缚丝者",
"千丝之城",
"zhCN",
},
[212775] = {
"Faceless Seer",
"Throne of the Tides",
"enUS",
},
[135245] = {
"Bilge Rat Demolisher",
"Siege of Boralus",
"enUS",
},
[189235] = {
"Overseer Lahar",
"Neltharus",
"enUS",
},
[220196] = {
"安苏雷克的传令官",
"千丝之城",
"zhCN",
},
[75459] = {
"Plagued Bat",
"Shadowmoon Burial Grounds",
},
[134990] = {
"Charged Dust Devil",
"Temple of Sethraliss",
},
[81984] = {
"Gnarlroot",
"The Everbloom",
"enUS",
},
[138061] = {
"Venture Co. Longshoreman",
"The MOTHERLODE!!",
},
[220197] = {
"皇家虫群卫士",
"千丝之城",
"zhCN",
},
[164929] = {
"Tirnenn Villager",
"Mists of Tirna Scithe",
"enUS",
},
[104246] = {
"Duskwatch Guard",
"Court of Stars",
},
[212778] = {
"Minion of Ghur'sha",
"Throne of the Tides",
"enUS",
},
[81985] = {
"Everbloom Cultivator",
"The Everbloom",
"enUS",
},
[131666] = {
"Coven Thornshaper",
"Waycrest Manor",
},
[40177] = {
"Forgemaster Throngus",
"Grim Batol",
},
[220199] = {
"战斗圣甲虫",
"千丝之城",
"zhCN",
},
[185656] = {
"Filth Caller",
"Brackenhide Hollow",
},
[131667] = {
"Soulbound Goliath",
"Waycrest Manor",
"enUS",
},
[138064] = {
"Posh Vacationer",
"The MOTHERLODE!!",
},
[65317] = {
"Xiang",
"Temple of the Jade Serpent",
},
[152905] = {
"Tower Sentinel",
"Torghast, Tower of the Damned",
},
[104247] = {
"Duskwatch Arcanist",
"Court of Stars",
},
[216363] = {
"强化雄虫",
"艾拉-卡拉，回响之城",
"zhCN",
},
[216619] = {
"演说者基克斯威兹克",
"千丝之城",
"zhCN",
},
[131669] = {
"Jagged Hound",
"Waycrest Manor",
"enUS",
},
[176959] = {
"Mawsworn Soulmage",
"Sanctum of Domination",
},
[216364] = {
"鲜血监督者",
"艾拉-卡拉，回响之城",
"zhCN",
},
[131670] = {
"Heartsbane Vinetwister",
"Waycrest Manor",
},
[213806] = {
"Splotch",
"Throne of the Tides",
"enUS",
},
[216365] = {
"飞翼运输者",
"艾拉-卡拉，回响之城",
"zhCN",
},
[208945] = {
"矮人轰炸者",
"永恒黎明",
"zhCN",
},
[205363] = {
"未知目标",
"永恒黎明",
"zhCN",
},
[100539] = {
"Taintheart Deadeye",
"Darkheart Thicket",
"enUS",
},
[214576] = {
"铁符保护者",
"觉醒大厅",
"zhCN",
},
[168007] = {
"Empowered Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
},
[205365] = {
"未知目标",
"永恒黎明",
"zhCN",
},
[179010] = {
"Fatespawn Anomaly",
"Sanctum of Domination",
},
[134232] = {
"Hired Assassin",
"The MOTHERLODE!!",
},
[218671] = {
"风险投资公司纵火狂",
"燧酿酒庄",
"zhCN",
},
[212786] = {
"驭虚者",
"驭雷栖巢",
"zhCN",
},
[205366] = {
"未知目标",
"永恒黎明",
"zhCN",
},
[214066] = {
"咒炉塑石者",
"矶石宝库",
"zhCN",
},
[115765] = {
"Abstract Nullifier",
"Return to Karazhan",
},
[164427] = {
"Reanimated Warrior",
"The Necrotic Wake",
},
[208438] = {
"永恒破坏者",
"永恒黎明",
"zhCN",
},
[135258] = {
"Irontide Curseblade",
"Siege of Boralus",
"enUS",
},
[179269] = {
"Oasis Security",
"Tazavesh, the Veiled Market",
},
[187969] = {
"Flashfrost Earthshaper",
"Ruby Life Pools",
"enUS",
},
[184131] = {
"Earthen Guardian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[101437] = {
"Burning Geode",
"UNKNOWN",
},
[131677] = {
"Heartsbane Runeweaver",
"Waycrest Manor",
},
[201787] = {
"初生幼兽",
"10.1 Zaralek Caverns - Chapter 6 Scenario",
"zhCN",
},
[165197] = {
"Skeletal Monstrosity",
"The Necrotic Wake",
},
[208440] = {
"永恒杀戮者",
"永恒黎明",
"zhCN",
},
[184132] = {
"Earthen Warder",
"Uldaman: Legacy of Tyr",
"enUS",
},
[195135] = {
"Bracken Warscourge",
"Brackenhide Hollow",
},
[92610] = {
"Understone Drummer",
"Neltharion's Lair",
},
[84550] = {
"Xeri'tac",
"The Everbloom",
"enUS",
},
[196671] = {
"Arcane Ravager",
"Algeth'ar Academy",
},
[170572] = {
"Atal'ai Hoodoo Hexxer",
"De Other Side",
},
[136541] = {
"Bile Oozeling",
"Waycrest Manor",
"enUS",
},
[81864] = {
"Dreadpetal",
"The Everbloom",
"enUS",
},
[75979] = {
"Exhumed Spirit",
"Shadowmoon Burial Grounds",
},
[156244] = {
"Winged Automaton",
"Torghast, Tower of the Damned",
},
[201790] = {
"洛斯凯勒兹",
"永恒黎明",
"zhCN",
},
[171341] = {
"Bladebeak Hatchling",
"De Other Side",
},
[151127] = {
"Lord of Torment",
"Torghast, Tower of the Damned",
},
[214840] = {
"充血的爬行者",
"艾拉-卡拉，回响之城",
"zhCN",
},
[135263] = {
"Ashvane Spotter",
"Siege of Boralus",
"enUS",
},
[156245] = {
"Grand Automaton",
"Torghast, Tower of the Damned",
},
[128434] = {
"Feasting Skyscreamer",
"Atal'Dazar",
},
[197697] = {
"Flamegullet",
"Ruby Life Pools",
},
[223541] = {
"失窃的装货者",
"地匍矿洞",
"zhCN",
},
[199233] = {
"Flamescale Captain",
"Vault of the Incarnates",
},
[197698] = {
"Thunderhead",
"Ruby Life Pools",
},
[171343] = {
"Bladebeak Matriarch",
"De Other Side",
},
[186696] = {
"Quaking Totem",
"Uldaman: Legacy of Tyr",
"enUS",
},
[128435] = {
"Toxic Saurid",
"Atal'Dazar",
},
[98370] = {
"Ghostly Councilor",
"Black Rook Hold",
"enUS",
},
[162133] = {
"General Kaal",
"Sanguine Depths",
},
[217658] = {
"布朗派克爵士",
"圣焰隐修院",
"zhCN",
},
[176974] = {
"Soul Reaver",
"Sanctum of Domination",
},
[163157] = {
"Amarth",
"The Necrotic Wake",
},
[115642] = {
"Umbral Imp",
"Faronaar",
},
[211262] = {
"坚不可摧的伊克斯雷腾",
"破晨号",
"zhCN",
},
[131685] = {
"Runic Disciple",
"Waycrest Manor",
},
[199748] = {
"时间线掠夺者",
"永恒黎明",
"zhCN",
},
[157017] = {
"Lithic Watcher",
"Torghast, Tower of the Damned",
},
[220730] = {
"皇家毒壳者",
"千丝之城",
"zhCN",
},
[98243] = {
"Soul-Torn Champion",
"Black Rook Hold",
"enUS",
},
[211263] = {
"死亡尖啸者艾肯塔克",
"破晨号",
"zhCN",
},
[195399] = {
"Curious Swoglet",
"Halls of Infusion",
},
[84554] = {
"Venom-Crazed Pale One",
"The Everbloom",
"enUS",
},
[44404] = {
"Naz'jar Frost Witch",
"Throne of the Tides",
"enUS",
},
[77006] = {
"Corpse Skitterling",
"Shadowmoon Burial Grounds",
},
[133990] = {
"Scrimshaw Gutter",
"Siege of Boralus",
"enUS",
},
[136549] = {
"Ashvane Cannoneer",
"Siege of Boralus",
"enUS",
},
[208450] = {
"漫游蜡烛",
"暗焰裂口",
"zhCN",
},
[211777] = {
"喷火引线看护者",
"水能堡",
"zhCN",
},
[207939] = {
"布朗派克男爵",
"圣焰隐修院",
"zhCN",
},
[115388] = {
"King",
"Return to Karazhan",
},
[219198] = {
"未知目标",
"千丝之城",
"zhCN",
},
[137830] = {
"Pallid Gorger",
"Waycrest Manor",
},
[130485] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
},
[136295] = {
"Sunken Denizen",
"Shrine of the Storm",
},
[186191] = {
"Decay Speaker",
"Brackenhide Hollow",
},
[127799] = {
"Dazar'ai Honor Guard",
"Atal'Dazar",
"enUS",
},
[192333] = {
"Alpha Eagle",
"Algeth'ar Academy",
},
[133482] = {
"Crawler Mine",
"The MOTHERLODE!!",
},
[208198] = {
"Whiiskeyz",
"Scarlet Monastery",
"enUS",
},
[131436] = {
"Chosen Blood Matron",
"The Underrot",
},
[205384] = {
"永恒织历者",
"永恒黎明",
"zhCN",
},
[213828] = {
"烛爪炎术师",
"新的蜡烛，新的希望",
"zhCN",
},
[134251] = {
"Seneschal M'bara",
"Kings' Rest",
},
[194894] = {
"拜荒雷语者",
"诺库德阻击战",
"zhCN",
},
[189265] = {
"Qalashi Bonetender",
"Neltharus",
"enUS",
},
[208456] = {
"残步恐魔",
"暗焰裂口",
"zhCN",
},
[3527] = {
"治疗之泉图腾",
"永恒黎明",
"zhCN",
},
[194895] = {
"不稳定的狂风",
"诺库德阻击战",
"zhCN",
},
[164702] = {
"Carrion Worm",
"The Necrotic Wake",
},
[190034] = {
"Blazebound Destroyer",
"Ruby Life Pools",
},
[178008] = {
"Decrepit Orb",
"Sanctum of Domination",
},
[225601] = {
"米雷达尔市民",
"破晨号",
"zhCN",
},
[130488] = {
"Mech Jockey",
"The MOTHERLODE!!",
},
[207946] = {
"戴尔克莱上尉",
"圣焰隐修院",
"zhCN",
},
[165471] = {
"Nathrian Duelist",
"Castle Nathria",
},
[114624] = {
"Arcane Warden",
"Return to Karazhan",
},
[194897] = {
"风暴喷涌图腾",
"诺库德阻击战",
"zhCN",
},
[204109] = {
"邃穴尖啸者",
"水能堡",
"zhCN",
},
[194898] = {
"拜荒弧光之刃",
"诺库德阻击战",
"zhCN",
},
[213577] = {
"喷火冲锋者",
"水能堡",
"zhCN",
},
[213833] = {
"烛爪骑士",
"新的蜡烛，新的希望",
"zhCN",
},
[52019] = {
"Skyfall Star",
"The Vortex Pinnacle",
},
[216648] = {
"恩克斯",
"千丝之城",
"zhCN",
},
[217672] = {
"错乱的斯卡丁",
"觉醒大厅",
"zhCN",
},
[213834] = {
"烛爪鼹鼠",
"新的蜡烛，新的希望",
"zhCN",
},
[207949] = {
"热心的圣殿骑士",
"圣焰隐修院",
"zhCN",
},
[216649] = {
"维克斯",
"千丝之城",
"zhCN",
},
[190294] = {
"诺库德风暴法师",
"诺库德阻击战",
"zhCN",
},
[83025] = {
"Grom'kar Battlemaster",
"Iron Docks",
},
[225605] = {
"夜幕暗法师",
"破晨号",
"zhCN",
},
[40633] = {
"Naz'jar Honor Guard",
"Throne of the Tides",
"enUS",
},
[164707] = {
"Congealed Slime",
"Plaguefall",
},
[134514] = {
"Abyssal Cultist",
"Shrine of the Storm",
},
[114626] = {
"Forlorn Spirit",
"Return to Karazhan",
},
[225606] = {
"夜幕影行者",
"破晨号",
"zhCN",
},
[96587] = {
"Felsworn Infester",
"Vault of the Wardens",
},
[203857] = {
"Horde Warlock",
"Dawn of the Infinite",
"enUS",
},
[210510] = {
"胆小的吹牛大王",
"暗焰裂口",
"zhCN",
},
[83026] = {
"Siegemaster Olugar",
"Iron Docks",
},
[198996] = {
"时间流具象",
"永恒黎明",
"zhCN",
},
[208208] = {
"联盟驱逐坦克",
"永恒黎明",
"zhCN",
},
[114627] = {
"Shrieking Terror",
"Return to Karazhan",
},
[198997] = {
"迦拉克隆之荒",
"永恒黎明",
"zhCN",
},
[165222] = {
"Zolramus Bonemender",
"The Necrotic Wake",
"enUS",
},
[198998] = {
"永恒守护者提尔",
"永恒黎明",
"zhCN",
},
[40634] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
"enUS",
},
[189531] = {
"Decayed Elder",
"Brackenhide Hollow",
},
[195928] = {
"灵魂收割者杜乌伦",
"诺库德阻击战",
"zhCN",
},
[165479] = {
"Court Enforcer",
"Castle Nathria",
},
[198999] = {
"米罗克",
"永恒黎明",
"zhCN",
},
[203861] = {
"Horde Destroyer",
"Dawn of the Infinite",
"enUS",
},
[195929] = {
"灵魂收割者图曼",
"诺库德阻击战",
"zhCN",
},
[214608] = {
"未知目标",
"阿梅达希尔，梦境之愿",
"zhCN",
},
[199000] = {
"时空领主戴欧斯",
"永恒黎明",
"zhCN",
},
[195930] = {
"灵魂收割者马达克",
"诺库德阻击战",
"zhCN",
},
[114629] = {
"Spectral Retainer",
"Return to Karazhan",
},
[229706] = {
"爆破炸弹机器人",
"主机觉醒",
"zhCN",
},
[219983] = {
"女王之眼",
"千丝之城",
"zhCN",
},
[186208] = {
"Rotbow Stalker",
"Brackenhide Hollow",
},
[180323] = {
"Fatespawn Monstrosity",
"Sanctum of Domination",
},
[219984] = {
"谢非提克",
"千丝之城",
"zhCN",
},
[116549] = {
"Backup Singer",
"Return to Karazhan",
},
[218961] = {
"饥饿爬蛛",
"艾拉-卡拉，回响之城",
"zhCN",
},
[87252] = {
"Unruly Ogron",
"Iron Docks",
},
[164461] = {
"Sathel the Accursed",
"Theater of Pain",
},
[134012] = {
"Taskmaster Askari",
"The MOTHERLODE!!",
},
[181861] = {
"Magmatusk",
"Neltharus",
"enUS",
},
[180070] = {
"Mawsworn Scryer",
"Sanctum of Domination",
},
[217684] = {
"错乱的斯卡丁",
"觉醒大厅",
"zhCN",
},
[129600] = {
"Bilge Rat Brinescale",
"Freehold",
},
[210264] = {
"驯蜂者",
"燧酿酒庄",
"zhCN",
},
[101326] = {
"Honored Ancestor",
"Halls of Valor",
},
[157810] = {
"Mawsworn Endbringer",
"Torghast, Tower of the Damned",
},
[164463] = {
"Paceran the Virulent",
"Theater of Pain",
},
[102094] = {
"Risen Swordsman",
"Black Rook Hold",
"enUS",
},
[114632] = {
"Spectral Attendant",
"Return to Karazhan",
},
[219221] = {
"未知目标",
"艾拉-卡拉，回响之城",
"zhCN",
},
[211289] = {
"泰纳·杜尔玛",
"圣焰隐修院",
"zhCN",
},
[211290] = {
"艾蕾娜·安博兰兹",
"圣焰隐修院",
"zhCN",
},
[99664] = {
"Restless Soul",
"Black Rook Hold",
"enUS",
},
[102095] = {
"Risen Lancer",
"Black Rook Hold",
"enUS",
},
[104270] = {
"Guardian Construct",
"Court of Stars",
},
[114633] = {
"Spectral Valet",
"Return to Karazhan",
},
[135552] = {
"Deathtouched Slaver",
"Waycrest Manor",
},
[129602] = {
"Irontide Enforcer",
"Freehold",
},
[204127] = {
"狗头人领职者",
"水能堡",
"zhCN",
},
[224853] = {
"Mutated Hatchling",
"Grim Batol",
},
[111563] = {
"Duskwatch Guard",
"Court of Stars",
},
[205151] = {
"提尔先锋",
"永恒黎明",
"zhCN",
},
[197219] = {
"Vile Lasher",
"Algeth'ar Academy",
},
[187240] = {
"Drakonid Breaker",
"The Azure Vault",
},
[154744] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[171376] = {
"Head Custodian Javlin",
"Sanguine Depths",
},
[205152] = {
"勒莱，时誓圣女",
"永恒黎明",
"zhCN",
},
[205408] = {
"永恒切时者",
"永恒黎明",
"zhCN",
},
[216155] = {
"掠行伏击者",
"地匍矿洞",
"zhCN",
},
[191847] = {
"诺库德平原践踏者",
"诺库德阻击战",
"zhCN",
},
[179821] = {
"Commander Zo'far",
"Tazavesh, the Veiled Market",
},
[217435] = {
"机械大师顿斯坦",
"觉醒大厅",
"zhCN",
},
[210271] = {
"酿造大师阿德里尔",
"燧酿酒庄",
"zhCN",
},
[196198] = {
"Algeth'ar Security",
"Algeth'ar Academy",
},
[115019] = {
"Coldmist Widow",
"Return to Karazhan",
},
[207969] = {
"Horde Raider",
"Dawn of the Infinite",
"enUS",
},
[186220] = {
"Brackenhide Shaper",
"Brackenhide Hollow",
},
[180335] = {
"Cartel Smuggler",
"Tazavesh, the Veiled Market",
},
[213343] = {
"熔炉装货工",
"矶石宝库",
"zhCN",
},
[150142] = {
"Scrapbone Trashtosser",
"Operation: Mechagon",
},
[104273] = {
"Jazshariu",
"Court of Stars",
},
[126918] = {
"Irontide Crackshot",
"Freehold",
},
[180336] = {
"Cartel Wiseguy",
"Tazavesh, the Veiled Market",
},
[168310] = {
"Plagueroc",
"Plaguefall",
},
[115020] = {
"Arcanid",
"Return to Karazhan",
},
[203877] = {
"狗头人重击者",
"水能堡",
"zhCN",
},
[101075] = {
"Wormspeaker Devout",
"Neltharion's Lair",
},
[228953] = {
"飞掠入侵者",
"地匍矿洞",
"zhCN",
},
[166264] = {
"Spare Parts",
"The Necrotic Wake",
},
[134024] = {
"Devouring Maggot",
"Waycrest Manor",
"enUS",
},
[203878] = {
"狗头人秘法师",
"水能堡",
"zhCN",
},
[196202] = {
"Spectral Invoker",
"Algeth'ar Academy",
},
[126919] = {
"Irontide Stormcaller",
"Freehold",
},
[174197] = {
"Battlefield Ritualist",
"Theater of Pain",
},
[205158] = {
"斯普洛克，时誓戒卫",
"永恒黎明",
"zhCN",
},
[201832] = {
"筋疲力尽的贾拉丁",
"10.1 Zaralek Caverns - Chapter 6 Scenario",
"zhCN",
},
[40319] = {
"Drahga Shadowburner",
"Grim Batol",
},
[196203] = {
"Algeth'ar Nurse",
"Algeth'ar Academy",
},
[135049] = {
"Dreadwing Raven",
"Waycrest Manor",
"enUS",
},
[166266] = {
"Spare Parts",
"The Necrotic Wake",
},
[150146] = {
"Scrapbone Shaman",
"Operation: Mechagon",
},
[128455] = {
"T'lonja",
"Atal'Dazar",
"enUS",
},
[132491] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[120651] = {
"Explosives",
"Operation: Mechagon",
},
[128967] = {
"Ashvane Sniper",
"Siege of Boralus",
"enUS",
},
[207207] = {
"虚空石畸体",
"驭雷栖巢",
"zhCN",
},
[136330] = {
"Soul Thorns",
"Waycrest Manor",
},
[115406] = {
"Knight",
"Return to Karazhan",
},
[186226] = {
"Fetid Rotsinger",
"Brackenhide Hollow",
},
[39616] = {
"Naz'jar Invader",
"Throne of the Tides",
"enUS",
},
[214117] = {
"Stormflurry Totem",
"Throne of the Tides",
"enUS",
},
[135052] = {
"Blight Toad",
"Waycrest Manor",
"enUS",
},
[168572] = {
"Fungi Stormer",
"Plaguefall",
},
[136076] = {
"Agitated Nimbus",
"Temple of Sethraliss",
},
[115407] = {
"Rook",
"Return to Karazhan",
},
[206698] = {
"狂热的咒术师",
"圣焰隐修院",
"zhCN",
},
[213607] = {
"Deep Sea Murloc",
"Throne of the Tides",
"enUS",
},
[10184] = {
"奥妮克希亚",
"奥妮克希亚的巢穴",
"zhCN",
},
[189555] = {
"Arcane Attendant",
"The Azure Vault",
},
[157571] = {
"Mawsworn Flametender",
"Torghast, Tower of the Damned",
},
[186741] = {
"Arcane Elemental",
"The Azure Vault",
},
[183671] = {
"Monstrous Soul",
"Sepulcher of the First Ones",
},
[157572] = {
"Mawsworn Firecaller",
"Torghast, Tower of the Damned",
},
[137614] = {
"Demolishing Terror",
"Siege of Boralus",
"enUS",
},
[223844] = {
"未知目标",
"千丝之城",
"zhCN",
},
[164737] = {
"Brood Ambusher",
"Plaguefall",
},
[154758] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[104278] = {
"Felbound Enforcer",
"Court of Stars",
},
[137103] = {
"Blood Visage",
"The Underrot",
},
[213008] = {
"蠕动暗嗣",
"暗焰裂口",
"zhCN",
},
[208747] = {
"黑暗之主",
"暗焰裂口",
"zhCN",
},
[210539] = {
"通道爬行者",
"暗焰裂口",
"zhCN",
},
[162691] = {
"Blightbone",
"The Necrotic Wake",
},
[208457] = {
"掠行之暗",
"暗焰裂口",
"zhCN",
},
[208745] = {
"蜡烛之王",
"暗焰裂口",
"zhCN",
},
[163459] = {
"Forsworn Mender",
"Spires of Ascension",
},
[180091] = {
"Ancient Core Hound",
"Tazavesh, the Veiled Market",
},
[212412] = {
"灰鼻",
"暗焰裂口",
"zhCN",
},
[40577] = {
"Naz'jar Sentinel",
"Throne of the Tides",
"enUS",
},
[109908] = {
"Nightmare Abomination",
"Darkheart Thicket",
"enUS",
},
[208743] = {
"布雷炙孔",
"暗焰裂口",
"zhCN",
},
[210797] = {
"黑暗之主",
"暗焰裂口",
"zhCN",
},
[165251] = {
"Illusionary Vulpin",
"Mists of Tirna Scithe",
"enUS",
},
[102232] = {
"Rockbound Trapper",
"Neltharion's Lair",
},
[165763] = {
"Vile Occultist",
"Castle Nathria",
},
[180348] = {
"Cartel Muscle",
"Tazavesh, the Veiled Market",
},
[129227] = {
"Azerokk",
"The MOTHERLODE!!",
},
[168578] = {
"Fungalmancer",
"Plaguefall",
},
[162693] = {
"Nalthor the Rimebinder",
"The Necrotic Wake",
},
[218865] = {
"小蜜蜂",
"燧酿酒庄",
"zhCN",
},
[189816] = {
"Dathea Stormlash",
"Vault of the Incarnates",
},
[220141] = {
"蜂王浆供应商",
"燧酿酒庄",
"zhCN",
},
[206704] = {
"热切的圣骑士",
"圣焰隐修院",
"zhCN",
},
[96512] = {
"Archdruid Glaidalis",
"Darkheart Thicket",
"enUS",
},
[166276] = {
"Mistveil Guardian",
"Mists of Tirna Scithe",
"enUS",
},
[220946] = {
"风险投资公司蜂蜜收割者",
"燧酿酒庄",
"zhCN",
},
[170882] = {
"Bone Magus",
"Theater of Pain",
},
[206065] = {
"时间间隙",
"永恒黎明",
"zhCN",
},
[210269] = {
"雇佣的打手",
"燧酿酒庄",
"zhCN",
},
[188026] = {
"Frost Tomb",
"Vault of the Incarnates",
},
[206705] = {
"阿拉希步兵",
"圣焰隐修院",
"zhCN",
},
[168156] = {
"Remornia",
"Castle Nathria",
},
[215405] = {
"阿努布泽克特",
"艾拉-卡拉，回响之城",
"zhCN",
},
[197985] = {
"Flame Channeler",
"Ruby Life Pools",
},
[208698] = {
"永恒裂隙法师",
"永恒黎明",
"zhCN",
},
[133852] = {
"Living Rot",
"The Underrot",
},
[76518] = {
"Ritual of Bones",
"Shadowmoon Burial Grounds",
},
[216329] = {
"凝结液滴",
"千丝之城",
"zhCN",
},
[212827] = {
"高阶牧师艾姆雅",
"圣焰隐修院",
"zhCN",
},
[174210] = {
"Blighted Sludge-Spewer",
"Theater of Pain",
},
[207943] = {
"阿拉希新兵",
"圣焰隐修院",
"zhCN",
},
[211140] = {
"阿拉希新兵",
"圣焰隐修院",
"zhCN",
},
[213743] = {
"未知目标",
"觉醒大厅",
"zhCN",
},
[223777] = {
"炽焰魔",
"暗焰裂口",
"zhCN",
},
[208242] = {
"蛛魔暗法师",
"地匍矿洞",
"zhCN",
},
[221760] = {
"亡灵法师",
"圣焰隐修院",
"zhCN",
},
[169861] = {
"Ickor Bileflesh",
"Plaguefall",
},
[211228] = {
"炽焰魔",
"暗焰裂口",
"zhCN",
},
[215407] = {
"收割者吉卡塔尔",
"艾拉-卡拉，回响之城",
"zhCN",
},
[180864] = {
"High Torturer",
"Sanctum of Domination",
},
[212831] = {
"铸炉大师达米安",
"圣焰隐修院",
"zhCN",
},
[183423] = {
"Reformed Bachelor",
"Return to Karazhan",
},
[208243] = {
"蛛魔斩击者",
"地匍矿洞",
"zhCN",
},
[179841] = {
"Veteran Sparkcaster",
"Tazavesh, the Veiled Market",
},
[212826] = {
"守卫队长苏雷曼",
"圣焰隐修院",
"zhCN",
},
[186658] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[229695] = {
"被腐蚀的机械师",
"主机觉醒",
"zhCN",
},
[150160] = {
"Scrapbone Bully",
"Operation: Mechagon",
},
[213873] = {
"流蜡液球",
"新的蜡烛，新的希望",
"zhCN",
},
[173189] = {
"Nathrian Hawkeye",
"Castle Nathria",
},
[208244] = {
"蛛魔御纤士",
"地匍矿洞",
"zhCN",
},
[179842] = {
"Commerce Enforcer",
"Tazavesh, the Veiled Market",
},
[204918] = {
"未知目标",
"永恒黎明",
"zhCN",
},
[217200] = {
"虚空水晶畸体",
"觉醒大厅",
"zhCN",
},
[199368] = {
"Hardened Crystal",
"The Azure Vault",
},
[212835] = {
"复活的步兵",
"圣焰隐修院",
"zhCN",
},
[134041] = {
"Infected Peasant",
"Waycrest Manor",
"enUS",
},
[173190] = {
"Court Hawkeye",
"Castle Nathria",
},
[208245] = {
"敏捷的聚生虫",
"地匍矿洞",
"zhCN",
},
[206699] = {
"作战山猫",
"圣焰隐修院",
"zhCN",
},
[206710] = {
"光耀之子",
"圣焰隐修院",
"zhCN",
},
[206696] = {
"阿拉希骑士",
"圣焰隐修院",
"zhCN",
},
[229739] = {
"未知目标",
"主机觉醒",
"zhCN",
},
[222927] = {
"圣焰酿酒师",
"圣焰隐修院",
"zhCN",
},
[229691] = {
"未知目标",
"主机觉醒",
"zhCN",
},
[216544] = {
"苏雷吉引线者",
"11.0 - 战役尾声场景",
"zhCN",
},
[212403] = {
"咒心入侵者",
"矶石宝库",
"zhCN",
},
[207638] = {
"迦拉克隆之荒",
"永恒黎明",
"zhCN",
},
[126928] = {
"Irontide Corsair",
"Freehold",
},
[88163] = {
"Grom'kar Cinderseer",
"Grimrail Depot",
},
[137625] = {
"Demolishing Terror",
"Siege of Boralus",
"enUS",
},
[86372] = {
"Melded Berserker",
"The Everbloom",
"enUS",
},
[207940] = {
"隐修院长穆普雷",
"圣焰隐修院",
"zhCN",
},
[207202] = {
"虚空碎片",
"驭雷栖巢",
"zhCN",
},
[213831] = {
"烛爪二把手",
"新的蜡烛，新的希望",
"zhCN",
},
[209230] = {
"凯里欧斯",
"驭雷栖巢",
"zhCN",
},
[186242] = {
"Skulking Gutstabber",
"Brackenhide Hollow",
},
[169927] = {
"Putrid Butcher",
"Theater of Pain",
},
[137626] = {
"Demolishing Terror",
"Siege of Boralus",
"enUS",
},
[224271] = {
"Twilight Warlock",
"Grim Batol",
},
[221979] = {
"虚缚嚎叫者",
"矶石宝库",
"zhCN",
},
[179334] = {
"Portalmancer Zo'dahh",
"Tazavesh, the Veiled Market",
},
[196645] = {
"未知目标",
"诺库德阻击战",
"zhCN",
},
[207796] = {
"燃烧的巨像",
"阿梅达希尔，梦境之愿",
"zhCN",
},
[208193] = {
"白银之手圣骑士",
"永恒黎明",
"zhCN",
},
[122963] = {
"Rezan",
"Atal'Dazar",
"enUS",
},
[199037] = {
"Primalist Shocktrooper",
"Halls of Infusion",
},
[150165] = {
"Slime Elemental",
"Operation: Mechagon",
},
[189314] = {
"Encroaching Hornswog",
"10.0 Dragon Isles",
},
[131545] = {
"Lady Waycrest",
"Waycrest Manor",
"enUS",
},
[213835] = {
"烛爪干扰者",
"新的蜡烛，新的希望",
"zhCN",
},
[179847] = {
"Shadowsteel Horror",
"Sanctum of Domination",
},
[203763] = {
"联盟步兵",
"永恒黎明",
"zhCN",
},
[222222] = {
"虫群尖刺",
"11.0 - 战役尾声场景",
"zhCN",
},
[176521] = {
"Stygian Abductor",
"Sanctum of Domination",
},
[205435] = {
"纪元撕裂者",
"永恒黎明",
"zhCN",
},
[205691] = {
"伊律迪孔的造物",
"永恒黎明",
"zhCN",
},
[148631] = {
"未引爆的军火",
"达萨罗之战",
"zhCN",
},
[202483] = {
"黑曜暴君",
"10.1 Zaralek Caverns - Chapter 6 Scenario",
"zhCN",
},
[211306] = {
"未知目标",
"阿梅达希尔，梦境之愿",
"zhCN",
},
[180104] = {
"Tangling Bloom",
"The Shadowlands",
},
[206697] = {
"虔诚的牧师",
"圣焰隐修院",
"zhCN",
},
[149535] = {
"冰缚镜像",
"达萨罗之战",
"zhCN",
},
[148120] = {
"库尔提拉斯水兵",
"达萨罗之战",
"zhCN",
},
[196115] = {
"Arcane Tender",
"The Azure Vault",
},
[211121] = {
"职阶监督者",
"卡兹阿加（地表）",
"zhCN",
},
[147439] = {
"熔火猎犬",
"达萨罗之战",
"zhCN",
},
[210810] = {
"卑微的劳工",
"卡兹阿加（地表）",
"zhCN",
},
[190340] = {
"Refti Defender",
"Halls of Infusion",
},
[209090] = {
"丁达尔·迅贤",
"阿梅达希尔，梦境之愿",
"zhCN",
},
[176523] = {
"Painsmith Raznal",
"Sanctum of Domination",
},
[150168] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[179733] = {
"Invigorating Fish Stick",
"Tazavesh, the Veiled Market",
},
[95842] = {
"Valarjar Thundercaller",
"Halls of Valor",
},
[207198] = {
"被诅咒的雷霆使",
"驭雷栖巢",
"zhCN",
},
[207197] = {
"被诅咒的雷鸫守卫",
"驭雷栖巢",
"zhCN",
},
[213830] = {
"烛爪狗头人",
"新的蜡烛，新的希望",
"zhCN",
},
[122965] = {
"Vol'kaal",
"Atal'Dazar",
"enUS",
},
[11262] = {
"奥妮克希亚雏龙",
"奥妮克希亚的巢穴",
"zhCN",
},
[127315] = {
"Reanimation Totem",
"Atal'Dazar",
},
[193572] = {
"诺库德战争工匠",
"诺库德阻击战",
"zhCN",
},
[165010] = {
"Congealed Slime",
"Plaguefall",
},
[198326] = {
"Stormwrought Despoiler",
"Vault of the Incarnates",
},
[216583] = {
"啾鸣释惧蛛",
"地匍矿洞",
"zhCN",
},
[190342] = {
"Containment Apparatus",
"Halls of Infusion",
},
[135329] = {
"Matron Bryndle",
"Waycrest Manor",
},
[134137] = {
"Temple Attendant",
"Shrine of the Storm",
},
[186615] = {
"狂怒风暴",
"诺库德阻击战",
"zhCN",
},
[213883] = {
"滑蜡者落耳",
"新的蜡烛，新的希望",
"zhCN",
},
[136353] = {
"Colossal Tentacle",
"Shrine of the Storm",
},
[134139] = {
"Shrine Templar",
"Shrine of the Storm",
},
[179852] = {
"Soulless Vengeance",
"The Shadowlands",
},
[212739] = {
"辐射虚空石",
"驭雷栖巢",
"zhCN",
},
[178142] = {
"Murkbrine Fishmancer",
"Tazavesh, the Veiled Market",
},
[131492] = {
"Devout Blood Priest",
"The Underrot",
},
[168594] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[111068] = {
"Archmage Galeorn",
"Black Rook Hold",
"enUS",
},
[194487] = {
"Vile Rothexer",
"Brackenhide Hollow",
},
[134158] = {
"Shadow-Borne Champion",
"Kings' Rest",
},
[195878] = {
"尤克赫尔驭兽师",
"诺库德阻击战",
"zhCN",
},
[207199] = {
"被诅咒的雷鸫看护者",
"驭雷栖巢",
"zhCN",
},
[139425] = {
"Crazed Incubator",
"Temple of Sethraliss",
},
[138464] = {
"Ashvane Deckhand",
"Siege of Boralus",
"enUS",
},
[164501] = {
"Mistcaller",
"Mists of Tirna Scithe",
"enUS",
},
[213885] = {
"夜幕筑暗师",
"破晨号",
"zhCN",
},
[168443] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[118489] = {
"Corrupted Risen Soldier",
"Black Rook Hold - Artifact Challenge",
},
[200137] = {
"Depraved Mistweaver",
"Temple of the Jade Serpent",
},
[190345] = {
"Primalist Geomancer",
"Halls of Infusion",
},
[122967] = {
"Priestess Alun'za",
"Atal'Dazar",
"enUS",
},
[98949] = {
"Smashspite the Hateful",
"Black Rook Hold",
"enUS",
},
[164562] = {
"Depraved Houndmaster",
"Halls of Atonement",
},
[203806] = {
"黑暗低语",
"亚贝鲁斯，焰影熔炉",
"zhCN",
},
[133870] = {
"Diseased Lasher",
"The Underrot",
},
[141938] = {
"Ashvane Sniper",
"Siege of Boralus",
"enUS",
},
[173714] = {
"Mistveil Nightblossom",
"Mists of Tirna Scithe",
},
[213932] = {
"苏雷吉好战者",
"破晨号",
"zhCN",
},
[204931] = {
"菲莱克",
"阿梅达希尔，梦境之愿",
"zhCN",
},
[205265] = {
"时空错位的步兵",
"永恒黎明",
"zhCN",
},
[189492] = {
"莱萨杰丝",
"化身巨龙牢窟",
"zhCN",
},
[170480] = {
"Atal'ai Deathwalker",
"De Other Side",
},
[220193] = {
"苏雷吉剧毒之刃",
"千丝之城",
"zhCN",
},
[163524] = {
"Kyrian Dark-Praetor",
"Spires of Ascension",
},
[214443] = {
"未知目标",
"矶石宝库",
"zhCN",
},
[179388] = {
"Hourglass Tidesage",
"Tazavesh, the Veiled Market",
},
[122968] = {
"Yazma",
"Atal'Dazar",
"enUS",
},
[200761] = {
"狂野的欧胡纳",
"诺库德阻击战",
"zhCN",
},
[222923] = {
"改造的载货机器人",
"卡兹阿加",
"zhCN",
},
[220029] = {
"齿轮清扫者",
"觉醒大厅",
"zhCN",
},
[184023] = {
"Vicious Basilisk",
"Uldaman: Legacy of Tyr",
"enUS",
},
[197857] = {
"Gutstabber",
"Brackenhide Hollow",
},
[194896] = {
"原始暴风之盾",
"诺库德阻击战",
"zhCN",
},
[210818] = {
"低贱的鼹鼠倌",
"暗焰裂口",
"zhCN",
},
[150292] = {
"Mechagon Cavalry",
"Operation: Mechagon",
},
[154014] = {
"Imprisoned Cabalist",
"Torghast, Tower of the Damned",
},
[199718] = {
"诺库德狩猎大师",
"诺库德阻击战",
"zhCN",
},
[203951] = {
"狗头人颅面者",
"水能堡",
"zhCN",
},
[199719] = {
"诺库德战犬",
"诺库德阻击战",
"zhCN",
},
[220542] = {
"暴怒海藻",
"水能堡",
"zhCN",
},
[165529] = {
"Depraved Collector",
"Halls of Atonement",
},
[188302] = {
"Reconfiguration Emitter",
"Castle Nathria",
},
[122969] = {
"Zanchuli Witch-Doctor",
"Atal'Dazar",
},
[207186] = {
"任性的雷鸫",
"驭雷栖巢",
"zhCN",
},
[129366] = {
"Bilge Rat Buccaneer",
"Siege of Boralus",
"enUS",
},
[206140] = {
"凝结时光",
"永恒黎明",
"zhCN",
},
[224219] = {
"Twilight Earthcaller",
"Grim Batol",
},
[206214] = {
"永恒渗透者",
"永恒黎明",
"zhCN",
},
[216342] = {
"掠行助理",
"千丝之城",
"zhCN",
},
[75652] = {
"Void Spawn",
"Shadowmoon Burial Grounds",
},
[101476] = {
"Molten Charskin",
"Neltharion's Lair",
},
[95834] = {
"Valarjar Mystic",
"Halls of Valor",
},
[207438] = {
"Headless Horseman",
"Scarlet Monastery",
"enUS",
},
[144293] = {
"Waste Processing Unit",
"Operation: Mechagon",
},
[190174] = {
"Hypnosis Bat",
"Operation: Mechagon",
},
[210156] = {
"斯卡莫拉克",
"矶石宝库",
"zhCN",
},
[173016] = {
"Corpse Collector",
"The Necrotic Wake",
"enUS",
},
[166299] = {
"Mistveil Tender",
"Mists of Tirna Scithe",
"enUS",
},
[122970] = {
"Shadowblade Stalker",
"Atal'Dazar",
"enUS",
},
[215427] = {
"未知目标",
"新的蜡烛，新的希望",
"zhCN",
},
[129367] = {
"Bilge Rat Tempest",
"Siege of Boralus",
"enUS",
},
[144294] = {
"Mechagon Tinkerer",
"Operation: Mechagon",
},
[206070] = {
"克罗纳克西",
"永恒黎明",
"zhCN",
},
[198995] = {
"克罗妮卡",
"永恒黎明",
"zhCN",
},
[129879] = {
"Irontide Cleaver",
"Siege of Boralus",
"enUS",
},
[135474] = {
"Thistle Acolyte",
"Waycrest Manor",
},
[76104] = {
"Monstrous Corpse Spider",
"Shadowmoon Burial Grounds",
},
[135204] = {
"Spectral Hex Priest",
"Kings' Rest",
},
[187192] = {
"Rageclaw",
"Brackenhide Hollow",
},
[213893] = {
"夜幕暗法师",
"破晨号",
"zhCN",
},
[122971] = {
"Dazar'ai Juggernaut",
"Atal'Dazar",
},
[75506] = {
"Shadowmoon Loyalist",
"Shadowmoon Burial Grounds",
},
[214661] = {
"戈尔迪·底爵",
"燧酿酒庄",
"zhCN",
},
[166079] = {
"Brittlebone Crossbowman",
"The Necrotic Wake",
},
[114783] = {
"Reformed Maiden",
"Return to Karazhan",
},
[191739] = {
"Scalebane Lieutenant",
"The Azure Vault",
},
[164510] = {
"Shambling Arbalest",
"Theater of Pain",
},
[144296] = {
"Spider Tank",
"Operation: Mechagon",
},
[163520] = {
"Forsworn Squad-Leader",
"Spires of Ascension",
},
[208521] = {
"Pumpkin Soldier",
"Scarlet Monastery",
"enUS",
},
[177816] = {
"Interrogation Specialist",
"Tazavesh, the Veiled Market",
},
[189471] = {
"Qalashi Blacksmith",
"Neltharus",
"enUS",
},
[154020] = {
"Prisonbreak Cursewalker",
"Torghast, Tower of the Damned",
},
[166302] = {
"Corpse Harvester",
"The Necrotic Wake",
"enUS",
},
[135167] = {
"Spectral Berserker",
"Kings' Rest",
},
[213895] = {
"夜幕影行者",
"破晨号",
"zhCN",
},
[59555] = {
"Haunting Sha",
"Temple of the Jade Serpent",
},
[134629] = {
"Scaled Krolusk Rider",
"Temple of Sethraliss",
},
[177817] = {
"Support Officer",
"Tazavesh, the Veiled Market",
},
[98280] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[122972] = {
"Dazar'ai Augur",
"Atal'Dazar",
},
[41096] = {
"Naz'jar Oracle",
"Throne of the Tides",
"enUS",
},
[129369] = {
"Irontide Raider",
"Siege of Boralus",
"enUS",
},
[144298] = {
"Defense Bot Mk III",
"Operation: Mechagon",
},
[157634] = {
"Flameforge Enforcer",
"Torghast, Tower of the Damned",
},
[131812] = {
"Heartsbane Soulcharmer",
"Waycrest Manor",
"enUS",
},
[197905] = {
"Spellbound Scepter",
"Algeth'ar Academy",
},
[214920] = {
"品酒间侍从",
"燧酿酒庄",
"zhCN",
},
[39625] = {
"General Umbriss",
"Grim Batol",
},
[138187] = {
"Grotesque Horror",
"The Underrot",
},
[139949] = {
"Plague Doctor",
"Temple of Sethraliss",
},
[92538] = {
"Tarspitter Grub",
"Neltharion's Lair",
},
[101991] = {
"Nightmare Dweller",
"Darkheart Thicket",
"enUS",
},
[115395] = {
"Queen",
"Return to Karazhan",
},
[102019] = {
"Stormforged Obliterator",
"Halls of Valor",
},
[215177] = {
"瓦克西姆斯",
"新的蜡烛，新的希望",
"zhCN",
},
[122973] = {
"Dazar'ai Confessor",
"Atal'Dazar",
},
[151773] = {
"Junkyard D.0.G.",
"Operation: Mechagon",
},
[129370] = {
"Irontide Waveshaper",
"Siege of Boralus",
"enUS",
},
[127879] = {
"Shieldbearer of Zul",
"Atal'Dazar",
"enUS",
},
[220003] = {
"Eye of the Queen",
"City of Threads",
"enUS",
},
[175517] = {
"Symbiotic Faerie",
"9.0 Bastion Arena - Path of Ascension",
},
[180473] = {
"Unstoppable Abomination",
"Sanctum of Domination",
},
[144071] = {
"Irontide Waveshaper",
"Siege of Boralus",
"enUS",
},
[217225] = {
"机械师保护者",
"觉醒大厅",
"zhCN",
},
[194990] = {
"逐风助战者",
"化身巨龙牢窟",
"zhCN",
},
[186420] = {
"Earthen Weaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[98275] = {
"Risen Archer",
"Black Rook Hold",
"enUS",
},
[81522] = {
"Witherbark",
"The Everbloom",
"enUS",
},
[91002] = {
"Rotdrool Grabber",
"UNKNOWN",
},
[125977] = {
"Reanimation Totem",
"Atal'Dazar",
},
[190359] = {
"Skulking Zealot",
"Halls of Infusion",
},
[98538] = {
"Lady Velandras Ravencrest",
"Black Rook Hold",
"enUS",
},
[211341] = {
"暗影具象",
"破晨号",
"zhCN",
},
[129371] = {
"Riptide Shredder",
"Siege of Boralus",
"enUS",
},
[220065] = {
"未知目标",
"千丝之城",
"zhCN",
},
[167998] = {
"Portal Guardian",
"Theater of Pain",
},
[132532] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[214668] = {
"风险投资公司主顾",
"燧酿酒庄",
"zhCN",
},
[213892] = {
"夜幕影法师",
"破晨号",
"zhCN",
},
[175992] = {
"Dutiful Attendant",
"Castle Nathria",
},
[101438] = {
"Vileshard Chunk",
"Neltharion's Lair",
},
[164517] = {
"Tred'ova",
"Mists of Tirna Scithe",
"enUS",
},
[97720] = {
"Blightshard Skitter",
"Neltharion's Lair",
},
[166396] = {
"Noble Skirmisher",
"Sanguine Depths",
},
[138063] = {
"Posh Vacationer",
"The MOTHERLODE!!",
},
[173729] = {
"Manifestation of Pride",
"Halls of Atonement",
},
[201792] = {
"昂佐恩",
"永恒黎明",
"zhCN",
},
[211087] = {
"代言人夏多克朗",
"破晨号",
"zhCN",
},
[224221] = {
"Twilight Overseer",
"Grim Batol",
},
[129372] = {
"Blacktar Bomber",
"Siege of Boralus",
"enUS",
},
[176565] = {
"Disruptive Patron",
"Tazavesh, the Veiled Market",
},
[166275] = {
"Mistveil Shaper",
"Mists of Tirna Scithe",
"enUS",
},
[193944] = {
"Qalashi Lavamancer",
"Neltharus",
"enUS",
},
[129928] = {
"Irontide Powdershot",
"Siege of Boralus",
"enUS",
},
[190362] = {
"Dazzling Dragonfly",
"Halls of Infusion",
},
[223357] = {
"苏雷吉役兵",
"千丝之城",
"zhCN",
},
[105704] = {
"Arcane Manifestation",
"Court of Stars",
},
[165762] = {
"Soul Infuser",
"Castle Nathria",
},
[184022] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[146371] = {
"黑铁仪祭师",
"达萨罗之战",
"zhCN",
},
[192464] = {
"Raging Ember",
"Neltharus",
"enUS",
},
[213217] = {
"代言人布洛克",
"矶石宝库",
"zhCN",
},
[193462] = {
"巴塔克",
"诺库德阻击战",
"zhCN",
},
[211089] = {
"阿努布伊卡基",
"破晨号",
"zhCN",
},
[149441] = {
"未知目标",
"达萨罗之战",
"zhCN",
},
[189340] = {
"Chargath, Bane of Scales",
"Neltharus",
"enUS",
},
[162729] = {
"Patchwerk Soldier",
"The Necrotic Wake",
},
[183707] = {
"Xy Spellslinger",
"Sepulcher of the First Ones",
},
[98792] = {
"Wyrmtongue Scavenger",
"Black Rook Hold",
"enUS",
},
[172981] = {
"Kyrian Stitchwerk",
"The Necrotic Wake",
"enUS",
},
[115640] = {
"Fuming Imp",
"Faronaar",
},
[131009] = {
"Spirit of Gold",
"Atal'Dazar",
"enUS",
},
[229769] = {
"医疗机器人",
"主机觉醒",
"zhCN",
},
[135048] = {
"Gorestained Piglet",
"Waycrest Manor",
"enUS",
},
[213905] = {
"活化黑暗",
"破晨号",
"zhCN",
},
[211261] = {
"扬升者维斯可里亚",
"破晨号",
"zhCN",
},
[165560] = {
"Gormling Larva",
"Mists of Tirna Scithe",
"enUS",
},
[214673] = {
"风味科学家",
"燧酿酒庄",
"zhCN",
},
[167963] = {
"Headless Client",
"De Other Side",
},
[99891] = {
"Storm Drake",
"Halls of Valor",
},
[188244] = {
"Primal Juggernaut",
"Ruby Life Pools",
"enUS",
},
[129374] = {
"Scrimshaw Enforcer",
"Siege of Boralus",
"enUS",
},
[99359] = {
"Rotheart Keeper",
"Darkheart Thicket",
"enUS",
},
[81236] = {
"Grimrail Technician",
"Grimrail Depot",
},
[206230] = {
"永恒分化者",
"永恒黎明",
"zhCN",
},
[220815] = {
"炽焰魔",
"暗焰裂口",
"zhCN",
},
[114796] = {
"Wholesome Hostess",
"Return to Karazhan",
},
[150169] = {
"Toxic Lurker",
"Operation: Mechagon",
},
[86684] = {
"Feral Lasher",
"The Everbloom",
"enUS",
},
[81603] = {
"Champion Druna",
"Iron Docks",
},
[213894] = {
"夜幕咒刃",
"破晨号",
"zhCN",
},
[192786] = {
"Qalashi Plunderer",
"Neltharus",
"enUS",
},
[214419] = {
"虚咒碾压者",
"驭雷栖巢",
"zhCN",
},
[224516] = {
"斯卡丁入侵者",
"矶石宝库",
"zhCN",
},
[135007] = {
"Orb Guardian",
"Temple of Sethraliss",
},
[155824] = {
"Lumbering Creation",
"Torghast, Tower of the Damned",
},
[98542] = {
"Amalgam of Souls",
"Black Rook Hold",
"enUS",
},
[45935] = {
"Temple Adept",
"The Vortex Pinnacle",
},
[218002] = {
"本克·鸣蜂",
"燧酿酒庄",
"zhCN",
},
[134331] = {
"King Rahu'ai",
"Kings' Rest",
},
[164920] = {
"Drust Soulcleaver",
"Mists of Tirna Scithe",
"enUS",
},
[155221] = {
"Faeleaf Tender",
"Torghast, Tower of the Damned",
},
[190368] = {
"Flamecaller Aymi",
"Halls of Infusion",
},
[212383] = {
"狗头人履职者",
"暗焰裂口",
"zhCN",
},
[176551] = {
"Vault Purifier",
"Tazavesh, the Veiled Market",
},
[104275] = {
"Imacu'tya",
"Court of Stars",
},
[186229] = {
"Wilted Oak",
"Brackenhide Hollow",
},
[150143] = {
"Scrapbone Grinder",
"Operation: Mechagon",
},
[214421] = {
"凝虚散播者",
"驭雷栖巢",
"zhCN",
},
[104300] = {
"Shadow Mistress",
"Court of Stars",
},
[165805] = {
"Shade of Kael'thas",
"Castle Nathria",
},
[82039] = {
"Rockspine Stinger",
"The Everbloom",
"enUS",
},
[224609] = {
"Twilight Destroyer",
"Grim Batol",
},
[199325] = {
"Nokhud Stormcaller",
"The Nokhud Offensive",
},
[213338] = {
"炉铸愈疗者",
"矶石宝库",
"zhCN",
},
[171384] = {
"Research Scribe",
"Sanguine Depths",
},
[104274] = {
"Baalgar the Watchful",
"Court of Stars",
},
[188067] = {
"Flashfrost Chillweaver",
"Ruby Life Pools",
"enUS",
},
[190370] = {
"Squallbringer Cyraz",
"Halls of Infusion",
},
[168109] = {
"Empowered Mawsworn Ritualist",
"Torghast, Tower of the Damned",
},
[206064] = {
"凝结时刻",
"永恒黎明",
"zhCN",
},
[130400] = {
"Irontide Crusher",
"Freehold",
},
[205723] = {
"未知目标",
"永恒黎明",
"zhCN",
},
[196712] = {
"Nullification Device",
"Halls of Infusion",
},
[198047] = {
"Tempest Channeler",
"Ruby Life Pools",
},
[75899] = {
"Possessed Soul",
"Shadowmoon Burial Grounds",
},
[190371] = {
"Primalist Earthshaker",
"Halls of Infusion",
},
[137405] = {
"Gripping Terror",
"Siege of Boralus",
"enUS",
},
[205212] = {
"永恒守护者",
"永恒黎明",
"zhCN",
},
[134284] = {
"Fallen Deathspeaker",
"The Underrot",
},
[132126] = {
"Gilded Priestess",
"Atal'Dazar",
},
[212673] = {
"Naz'jar Ravager",
"Throne of the Tides",
"enUS",
},
[165556] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[198308] = {
"Frostwrought Dominator",
"Vault of the Incarnates",
},
[224663] = {
"未知目标",
"11.0 - 战役尾声场景",
"zhCN",
},
[183495] = {
"Twisted Worldeater",
"Sepulcher of the First Ones",
},
[139422] = {
"Scaled Krolusk Tamer",
"Temple of Sethraliss",
},
[187224] = {
"Vile Rothexer",
"Brackenhide Hollow",
},
[203678] = {
"Grommash Hellscream",
"Dawn of the Infinite",
"enUS",
},
[126848] = {
"Captain Eudora",
"Freehold",
},
[194467] = {
"Disease Slasher",
"Brackenhide Hollow",
},
[194469] = {
"Wither Slasher",
"Brackenhide Hollow",
},
[190373] = {
"Primalist Galesinger",
"Halls of Infusion",
},
[155830] = {
"Mawsworn Disciple",
"Torghast, Tower of the Damned",
},
[229778] = {
"未知目标",
"主机觉醒",
"zhCN",
},
[129208] = {
"Dread Captain Lockwood",
"Siege of Boralus",
"enUS",
},
[203679] = {
"安度因·洛萨",
"永恒黎明",
"zhCN",
},
[91000] = {
"Vileshard Hulk",
"Neltharion's Lair",
},
[171184] = {
"Mythresh, Sky's Talons",
"De Other Side",
},
[128969] = {
"Ashvane Commander",
"Siege of Boralus",
"enUS",
},
[216658] = {
"大捻接师艾佐",
"千丝之城",
"zhCN",
},
[155831] = {
"Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
},
[163458] = {
"Forsworn Castigator",
"Spires of Ascension",
},
[195927] = {
"灵魂收割者加尔特玛",
"诺库德阻击战",
"zhCN",
},
[205727] = {
"未知目标",
"永恒黎明",
"zhCN",
},
[134338] = {
"Tidesage Enforcer",
"Shrine of the Storm",
},
[163622] = {
"Goregrind Bits",
"The Necrotic Wake",
},
[168318] = {
"Forsworn Goliath",
"Spires of Ascension",
},
[169905] = {
"Risen Warlord",
"De Other Side",
},
[84957] = {
"Putrid Pyromancer",
"The Everbloom",
"enUS",
},
[192934] = {
"Volatile Infuser",
"Vault of the Incarnates",
},
[213913] = {
"狗头人护焰者",
"暗焰裂口",
"zhCN",
},
[168882] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[130909] = {
"Fetid Maggot",
"The Underrot",
},
[82682] = {
"Archmage Sol",
"The Everbloom",
"enUS",
},
[90998] = {
"Blightshard Shaper",
"Neltharion's Lair",
},
[115486] = {
"Erudite Slayer",
"Return to Karazhan",
},
[134418] = {
"Drowned Depthbringer",
"Shrine of the Storm",
},
[144168] = {
"Ashvane Destroyer",
"Siege of Boralus",
"enUS",
},
[168627] = {
"Plaguebinder",
"Plaguefall",
},
[224152] = {
"Twilight Brute",
"Grim Batol",
},
[83578] = {
"Ogron Laborer",
"Iron Docks",
},
[197535] = {
"High Channeler Ryvati",
"Ruby Life Pools",
},
[84400] = {
"Flourishing Ancient",
"The Everbloom",
"enUS",
},
[190377] = {
"Primalist Icecaller",
"Halls of Infusion",
},
[192680] = {
"Guardian Sentry",
"Algeth'ar Academy",
},
[229782] = {
"觉醒的方阵兵",
"主机觉醒",
"zhCN",
},
[151476] = {
"Blastatron X-80",
"Operation: Mechagon",
},
[186246] = {
"Fleshripper Vulture",
"Brackenhide Hollow",
},
[216221] = {
"土灵护卫哨兵",
"觉醒大厅",
"zhCN",
},
[210336] = {
"Misty Pineshrew",
"Emerald Dream",
},
[196263] = {
"诺库顿新兵",
"诺库德阻击战",
"zhCN",
},
[186284] = {
"Gutchewer Bear",
"Brackenhide Hollow",
},
[135365] = {
"Matron Alma",
"Waycrest Manor",
},
[131527] = {
"Lord Waycrest",
"Waycrest Manor",
"enUS",
},
[130404] = {
"Vermin Trapper",
"Freehold",
},
[220060] = {
"美味测试员",
"燧酿酒庄",
"zhCN",
},
[96574] = {
"Stormforged Sentinel",
"Halls of Valor",
},
[206063] = {
"时光偏差",
"永恒黎明",
"zhCN",
},
[198311] = {
"Flamewrought Eradicator",
"Vault of the Incarnates",
},
[163122] = {
"Brittlebone Warrior",
"The Necrotic Wake",
},
[122984] = {
"Dazar'ai Colossus",
"Atal'Dazar",
},
[129758] = {
"Irontide Grenadier",
"Freehold",
},
[193373] = {
"诺库德雷霆之拳",
"诺库德阻击战",
"zhCN",
},
[168886] = {
"Virulax Blightweaver",
"Plaguefall",
},
[129559] = {
"Cutwater Duelist",
"Freehold",
},
[134599] = {
"Imbued Stormcaller",
"Temple of Sethraliss",
},
[167607] = {
"Stoneborn Slasher",
"Halls of Atonement",
},
[183033] = {
"Grim Reflection",
"Sepulcher of the First Ones",
},
[214350] = {
"被转化的代言人",
"矶石宝库",
"zhCN",
},
[45922] = {
"Empyrean Assassin",
"The Vortex Pinnacle",
},
[40825] = {
"Erunak Stonespeaker",
"Throne of the Tides",
"enUS",
},
[215968] = {
"黑血",
"艾拉-卡拉，回响之城",
"zhCN",
},
[130661] = {
"Venture Co. Earthshaper",
"The MOTHERLODE!!",
},
[134600] = {
"Sandswept Marksman",
"Temple of Sethraliss",
},
[98810] = {
"Wrathguard Bladelord",
"Black Rook Hold",
"enUS",
},
[190381] = {
"Rotburst Totem",
"Brackenhide Hollow",
},
[194816] = {
"Forgewrought Monstrosity",
"Neltharus",
"enUS",
},
[184140] = {
"Xy Acolyte",
"Sepulcher of the First Ones",
},
[187771] = {
"Kadros Icewrath",
"Vault of the Incarnates",
},
[218016] = {
"未知目标",
"燧酿酒庄",
"zhCN",
},
[206068] = {
"时光聚变",
"永恒黎明",
"zhCN",
},
[40586] = {
"Lady Naz'jar",
"Throne of the Tides",
"enUS",
},
[177808] = {
"Armored Overseer",
"Tazavesh, the Veiled Market",
},
[130012] = {
"Irontide Ravager",
"Freehold",
},
[165483] = {
"Court Hierarch",
"Castle Nathria",
},
[223646] = {
"Pale Priest",
"City of Threads",
"enUS",
},
[40765] = {
"Commander Ulthok",
"Throne of the Tides",
"enUS",
},
[204560] = {
"Incorporeal Being",
"Freehold",
"enUS",
},
[216336] = {
"贪婪爬蛛",
"艾拉-卡拉，回响之城",
"zhCN",
},
[164926] = {
"Drust Boughbreaker",
"Mists of Tirna Scithe",
"enUS",
},
[114542] = {
"Ghostly Philanthropist",
"Return to Karazhan",
},
[199749] = {
"时流畸体",
"永恒黎明",
"zhCN",
},
[164506] = {
"Ancient Captain",
"Theater of Pain",
},
[140447] = {
"Demolishing Terror",
"Siege of Boralus",
"enUS",
},
[133835] = {
"Feral Bloodswarmer",
"The Underrot",
},
[199595] = {
"Nokhud Defender",
"The Nokhud Offensive",
},
[204536] = {
"荒芜碎块",
"永恒黎明",
"zhCN",
},
[212389] = {
"咒心入侵者",
"卡兹阿加",
"zhCN",
},
[190128] = {
"Zul'gamux",
"Operation: Mechagon",
},
[84989] = {
"Infested Icecaller",
"The Everbloom",
"enUS",
},
[189266] = {
"Qalashi Trainee",
"Neltharus",
"enUS",
},
[105715] = {
"Watchful Inquisitor",
"Court of Stars",
},
[133836] = {
"Reanimated Guardian",
"The Underrot",
},
[136139] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
},
[155812] = {
"Mawsworn Ritualist",
"Torghast, Tower of the Damned",
},
[207177] = {
"永恒巡视者",
"永恒黎明",
"zhCN",
},
[167612] = {
"Stoneborn Reaver",
"Halls of Atonement",
},
[201788] = {
"达扎克",
"永恒黎明",
"zhCN",
},
[40320] = {
"Valiona",
"Grim Batol",
},
[194991] = {
"神誓先锋",
"化身巨龙牢窟",
"zhCN",
},
[166589] = {
"Animated Weapon",
"Sanguine Depths",
},
[187315] = {
"Disease Slasher",
"Brackenhide Hollow",
},
[129640] = {
"Snarling Dockhound",
"Siege of Boralus",
"enUS",
},
[209801] = {
"军需官科拉泰特",
"驭雷栖巢",
"zhCN",
},
[195696] = {
"拜荒雷兽",
"诺库德阻击战",
"zhCN",
},
[84990] = {
"Addled Arcanomancer",
"The Everbloom",
"enUS",
},
[104251] = {
"Duskwatch Sentry",
"Court of Stars",
},
[136483] = {
"Ashvane Deckhand",
"Siege of Boralus",
"enUS",
},
[187768] = {
"Dathea Stormlash",
"Vault of the Incarnates",
},
[193457] = {
"巴拉拉",
"诺库德阻击战",
"zhCN",
},
[133436] = {
"Venture Co. Skyscorcher",
"The MOTHERLODE!!",
},
[214439] = {
"被腐化的先知",
"驭雷栖巢",
"zhCN",
},
[114544] = {
"Skeletal Usher",
"Return to Karazhan",
},
[183425] = {
"Wholesome Host",
"Return to Karazhan",
},
[219301] = {
"未知目标",
"燧酿酒庄",
"zhCN",
},
[196548] = {
"Ancient Branch",
"Algeth'ar Academy",
},
[167731] = {
"Separation Assistant",
"The Necrotic Wake",
},
[86526] = {
"Grom'kar Chainmaster",
"Iron Docks",
},
[183497] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[216487] = {
"斯卡丁残留物",
"觉醒大厅",
"zhCN",
},
[99192] = {
"Shade of Xavius",
"Darkheart Thicket",
"enUS",
},
[165824] = {
"Nar'zudah",
"The Necrotic Wake",
"enUS",
},
[229537] = {
"Void Emissary",
"The Dawnbreaker",
"enUS",
},
[184107] = {
"Runic Protector",
"Uldaman: Legacy of Tyr",
"enUS",
},
[45572] = {
"Howling Gale",
"The Vortex Pinnacle",
},
[80935] = {
"Grom'kar Boomer",
"Grimrail Depot",
},
[114804] = {
"Spectral Charger",
"Return to Karazhan",
},
[204206] = {
"Horde Farseer",
"Dawn of the Infinite",
"enUS",
},
[214697] = {
"主厨丘伊",
"燧酿酒庄",
"zhCN",
},
[156226] = {
"Coldheart Binder",
"Torghast, Tower of the Damned",
},
[212765] = {
"虚缚抢劫者",
"矶石宝库",
"zhCN",
},
[168384] = {
"Flesh Construct",
"The Necrotic Wake",
},
[98681] = {
"Rook Spinner",
"Black Rook Hold",
"enUS",
},
[118491] = {
"Corrupted Risen Mage",
"Black Rook Hold - Artifact Challenge",
},
[185528] = {
"Trickclaw Mystic",
"Brackenhide Hollow",
},
[189878] = {
"Nathrezim Infiltrator",
"Operation: Mechagon",
},
[210147] = {
"焚化先驱",
"阿梅达希尔，梦境之愿",
"zhCN",
},
[114266] = {
"Shoreline Tidespeaker",
"Return to Karazhan",
},
[169421] = {
"Felguard",
"Brackenhide Hollow",
},
[176573] = {
"Mawsworn Woebringer",
"Torghast, Tower of the Damned",
},
[131824] = {
"Sister Solena",
"Waycrest Manor",
"enUS",
},
[222700] = {
"未知目标",
"千丝之城",
"zhCN",
},
[185529] = {
"Bracken Warscourge",
"Brackenhide Hollow",
},
[175550] = {
"Volatile Faerie",
"9.0 Bastion Arena - Path of Ascension",
},
[77700] = {
"Shadowmoon Exhumer",
"Shadowmoon Burial Grounds",
},
[165414] = {
"Depraved Obliterator",
"Halls of Atonement",
},
[12129] = {
"奥妮克希亚守卫",
"奥妮克希亚的巢穴",
"zhCN",
},
[165137] = {
"Zolramus Gatekeeper",
"The Necrotic Wake",
"enUS",
},
[213119] = {
"虚空代言人艾里克",
"矶石宝库",
"zhCN",
},
[164804] = {
"Droman Oulfarran",
"Mists of Tirna Scithe",
"enUS",
},
[113537] = {
"Emberhusk Dominator",
"Neltharion's Lair",
},
[193760] = {
"涌电毁灭者",
"化身巨龙牢窟",
"zhCN",
},
[91006] = {
"Rockback Gnasher",
"Neltharion's Lair",
},
[225479] = {
"苏雷吉网法师",
"破晨号",
"zhCN",
},
[97197] = {
"Valarjar Purifier",
"UNKNOWN",
},
[176575] = {
"Mawsworn Soulwarden",
"Torghast, Tower of the Damned",
},
[170690] = {
"Diseased Horror",
"Theater of Pain",
},
[206352] = {
"联盟弓手",
"永恒黎明",
"zhCN",
},
[194316] = {
"唤雷者扎莉伊",
"诺库德阻击战",
"zhCN",
},
[224732] = {
"隐秘网士",
"千丝之城",
"zhCN",
},
[207205] = {
"雷卫戈伦",
"驭雷栖巢",
"zhCN",
},
[167876] = {
"Inquisitor Sigar",
"Halls of Atonement",
},
[114803] = {
"Spectral Stable Hand",
"Return to Karazhan",
},
[194999] = {
"不稳定的火花",
"化身巨龙牢窟",
"zhCN",
},
[208241] = {
"啃踝者",
"地匍矿洞",
"zhCN",
},
[213934] = {
"夜幕战略家",
"破晨号",
"zhCN",
},
[165076] = {
"Gluttonous Tick",
"Sanguine Depths",
},
[210812] = {
"皇家点芯者",
"暗焰裂口",
"zhCN",
},
[91007] = {
"Dargrul",
"Neltharion's Lair",
},
[169924] = {
"Veteran Stoneguard",
"Castle Nathria",
},
[206694] = {
"热诚的神射手",
"圣焰隐修院",
"zhCN",
},
[201754] = {
"萨卡雷斯",
"亚贝鲁斯，焰影熔炉",
"zhCN",
},
[206351] = {
"联盟咒术师",
"永恒黎明",
"zhCN",
},
[217299] = {
"护门者威斯坦",
"觉醒大厅",
"zhCN",
},
[186151] = {
"巴拉卡可汗",
"诺库德阻击战",
"zhCN",
},
[212400] = {
"虚触元素",
"矶石宝库",
"zhCN",
},
[221896] = {
"蛛网将军阿贝纳尔",
"地匍矿洞",
"zhCN",
},
[203811] = {
"熵能化身",
"亚贝鲁斯，焰影熔炉",
"zhCN",
},
[194745] = {
"Rotfang Hyena",
"Brackenhide Hollow",
},
[171799] = {
"Depths Warden",
"Sanguine Depths",
},
[165189] = {
"纳赫基",
"永恒黎明",
"zhCN",
},
[129517] = {
"Reanimated Raptor",
"Atal'Dazar",
"enUS",
},
[167111] = {
"Spinemaw Staghorn",
"Mists of Tirna Scithe",
"enUS",
},
[146409] = {
"吉安娜·普罗德摩尔",
"达萨罗之战",
"zhCN",
},
[91008] = {
"Rockbound Pelter",
"Neltharion's Lair",
},
[210170] = {
"扎卡利驭焰者",
"阿梅达希尔，梦境之愿",
"zhCN",
},
[210150] = {
"焰触执行者",
"阿梅达希尔，梦境之愿",
"zhCN",
},
[192955] = {
"Draconic Illusion",
"The Azure Vault",
},
[191164] = {
"Arcane Tender",
"The Azure Vault",
},
[213937] = {
"拉夏南",
"破晨号",
"zhCN",
},
[169159] = {
"Unstable Canister",
"Plaguefall",
},
[208239] = {
"飞掠之恐",
"地匍矿洞",
"zhCN",
},
[227127] = {
"食草的苔绒羱",
"地匍矿洞",
"zhCN",
},
[221102] = {
"长者织影",
"千丝之城",
"zhCN",
},
[212838] = {
"阿拉希新兵",
"圣焰隐修院",
"zhCN",
},
[133593] = {
"Expert Technician",
"The MOTHERLODE!!",
},
[128652] = {
"Viq'Goth",
"Siege of Boralus",
"enUS",
},
[98813] = {
"Bloodscent Felhound",
"Black Rook Hold",
"enUS",
},
[167113] = {
"Spinemaw Acidgullet",
"Mists of Tirna Scithe",
"enUS",
},
[189886] = {
"Blazebound Firestorm",
"Ruby Life Pools",
},
[212793] = {
"虚空晋升者",
"驭雷栖巢",
"zhCN",
},
[221103] = {
"魁梧的战甲尉",
"千丝之城",
"zhCN",
},
[216555] = {
"裂跖者",
"11.0 - 战役尾声场景",
"zhCN",
},
[218325] = {
"群聚飞虫",
"艾拉-卡拉，回响之城",
"zhCN",
},
[186124] = {
"Gashtooth",
"Brackenhide Hollow",
},
[229729] = {
"未知目标",
"主机觉醒",
"zhCN",
},
[185537] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[211977] = {
"运货鼹鼠",
"暗焰裂口",
"zhCN",
},
[210148] = {
"卑微的劳工",
"暗焰裂口",
"zhCN",
},
[223770] = {
"炽焰魔",
"暗焰裂口",
"zhCN",
},
[210265] = {
"工蜂",
"燧酿酒庄",
"zhCN",
},
[211291] = {
"歇尼麦尔中士",
"圣焰隐修院",
"zhCN",
},
[213684] = {
"未知目标",
"驭雷栖巢",
"zhCN",
},
[217799] = {
"机械师保护者",
"觉醒大厅",
"zhCN",
},
[168418] = {
"Forsworn Inquisitor",
"Spires of Ascension",
},
[212405] = {
"上进的铸手",
"矶石宝库",
"zhCN",
},
[217610] = {
"反常的斯卡丁",
"觉醒大厅",
"zhCN",
},
[40484] = {
"Erudax",
"Grim Batol",
},
[217353] = {
"机械大师顿斯坦",
"觉醒大厅",
"zhCN",
},
[178630] = {
"Mawsworn Seeker",
"Sanctum of Domination",
},
[164557] = {
"Shard of Halkias",
"Halls of Atonement",
},
[217126] = {
"过度放纵的主顾",
"燧酿酒庄",
"zhCN",
},
[134364] = {
"Faithless Tender",
"Temple of Sethraliss",
},
[155090] = {
"Anodized Coilbearer",
"Operation: Mechagon",
},
[83846] = {
"Yalnu",
"The Everbloom",
"enUS",
},
[190401] = {
"Gusting Proto-Dragon",
"Halls of Infusion",
},
[196798] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
},
[168396] = {
"Plaguebelcher",
"Plaguefall",
},
[228015] = {
"未知目标",
"艾拉-卡拉，回响之城",
"zhCN",
},
[213942] = {
"Sludge",
"Throne of the Tides",
"enUS",
},
[131847] = {
"Waycrest Reveler",
"Waycrest Manor",
"enUS",
},
[223497] = {
"工蜂",
"燧酿酒庄",
"zhCN",
},
[223498] = {
"小蜜蜂",
"燧酿酒庄",
"zhCN",
},
[210270] = {
"酒滴",
"燧酿酒庄",
"zhCN",
},
[223423] = {
"粗心的酒花大地精",
"燧酿酒庄",
"zhCN",
},
[223562] = {
"酒滴",
"燧酿酒庄",
"zhCN",
},
[210267] = {
"艾帕",
"燧酿酒庄",
"zhCN",
},
[115757] = {
"Wrathguard Flamebringer",
"Return to Karazhan",
},
},
["spell_animation_list"] = {
[203782] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = true,
["scaleY"] = -1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = true,
["scaleY"] = -1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[107270] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 200,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 200,
},
},
[7268] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[196278] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.05,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.05,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[189112] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.34999999403954,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.8799999952316,
["fade_in"] = 0,
["duration"] = 0.40000000596046,
["cooldown"] = 0.5,
["frequency"] = 51.979999542236,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.34999999403954,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.8799999952316,
["fade_in"] = 0,
["duration"] = 0.40000000596046,
["cooldown"] = 0.5,
["frequency"] = 51.979999542236,
},
},
[2643] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[188443] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[162243] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 1,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 1,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[199547] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.59999847412109,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.039999961853,
["scale_upY"] = 1.039999961853,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.59999847412109,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.039999961853,
["scale_upY"] = 1.039999961853,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[228354] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[31661] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[117418] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.1499999910593,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1799999922514,
["cooldown"] = 0.5,
["frequency"] = 116.00999450684,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1499999910593,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1799999922514,
["cooldown"] = 0.5,
["frequency"] = 116.00999450684,
},
},
[17364] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.02,
["scale_upY"] = 1.02,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.10000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["scaleY"] = -1,
["fade_out"] = 0.11,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.02,
["scale_upY"] = 1.02,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.10000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.11,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[222024] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1,
["duration"] = 0.050000000745058,
["scale_downX"] = 1,
["animation_type"] = "scale",
["critical_scale"] = 1,
["scale_upY"] = 1.1000000238419,
["cooldown"] = 0.75,
["scale_downY"] = 0.89999997615814,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1,
["amplitude"] = 1.7999999523163,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 11.14999961853,
},
["3"] = {
["enabled"] = true,
["scale_upX"] = 1,
["duration"] = 0.050000000745058,
["scale_downX"] = 1,
["animation_type"] = "scale",
["critical_scale"] = 1,
["scale_upY"] = 1.1000000238419,
["cooldown"] = 0.75,
["scale_downY"] = 0.89999997615814,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1,
["amplitude"] = 1.7999999523163,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 11.14999961853,
},
},
[11366] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 10,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 10,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[155166] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[46968] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 0.95,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.1,
["frequency"] = 120,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 0.95,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.1,
["frequency"] = 120,
},
},
[257045] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[228478] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.099999994039536,
["absolute_sineX"] = true,
["scaleY"] = 0.79999923706055,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.20000076293945,
["critical_scale"] = 1.05,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.099999994039536,
["absolute_sineX"] = true,
["scaleY"] = 0.79999923706055,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.20000076293945,
["critical_scale"] = 1.05,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[49998] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["enabled"] = true,
["amplitude"] = 1.0330086946487,
["fade_in"] = 0.01,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["enabled"] = true,
["amplitude"] = 1.0330086946487,
["fade_in"] = 0.01,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[204157] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 6,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 6,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[31935] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[53595] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[264178] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.08,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.25,
["frequency"] = 20,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.08,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.25,
["frequency"] = 20,
},
},
[53351] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[324540] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 2,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.89999997615814,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 25.650197982788,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 2,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.89999997615814,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 25.650197982788,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[148135] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.75,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 60.874122619629,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.75,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 60.874122619629,
},
},
[185438] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.19999998807907,
["absolute_sineX"] = false,
["scaleY"] = -1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 6.460000038147,
["fade_in"] = 0,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.19999998807907,
["absolute_sineX"] = false,
["scaleY"] = -1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 6.460000038147,
["fade_in"] = 0,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[206930] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[275779] = {
["1"] = {
["scaleY"] = -1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[185763] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.25999999046326,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 3.6583230495453,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.15999999642372,
["cooldown"] = 0.5,
["frequency"] = 23.525663375854,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.25999999046326,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 3.6583230495453,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.15999999642372,
["cooldown"] = 0.5,
["frequency"] = 23.525663375854,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[100784] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[196819] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1999999284744,
["scale_upY"] = 1.2999999523163,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.21999999880791,
["cooldown"] = 0.5,
["frequency"] = 3.3099999427795,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1999999284744,
["scale_upY"] = 1.2999999523163,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.21999999880791,
["cooldown"] = 0.5,
["frequency"] = 3.3099999427795,
},
},
[27285] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1,
["scale_upY"] = 1.1,
["scale_downX"] = 0.9,
["scale_downY"] = 0.9,
["duration"] = 0.075,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1,
["scale_upY"] = 1.1,
["scale_downX"] = 0.9,
["scale_downY"] = 0.9,
["duration"] = 0.075,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[187708] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[199804] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 0.88999938964844,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.1699999570847,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.19999998807907,
["cooldown"] = 0.5,
["frequency"] = 23.525676727295,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0499999523163,
["scale_upY"] = 1.0499999523163,
["scale_downX"] = 1,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 0.88999938964844,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.1699999570847,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.19999998807907,
["cooldown"] = 0.5,
["frequency"] = 23.525676727295,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0499999523163,
["scale_upY"] = 1.0499999523163,
["scale_downX"] = 1,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[52174] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.075,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.2,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.15,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.3,
["cooldown"] = 0.5,
["frequency"] = 50,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.075,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.2,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.15,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.3,
["cooldown"] = 0.5,
["frequency"] = 50,
},
},
[86040] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.1,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 2,
["fade_in"] = 0.05,
["duration"] = 0.15,
["cooldown"] = 0.25,
["frequency"] = 20,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.1,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 2,
["fade_in"] = 0.05,
["duration"] = 0.15,
["cooldown"] = 0.25,
["frequency"] = 20,
},
},
[32645] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1000000238419,
["scale_upY"] = 1.1999999284744,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 4.0999999046326,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.12000000476837,
["cooldown"] = 0.5,
["frequency"] = 2.6099998950958,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1000000238419,
["scale_upY"] = 1.1999999284744,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 4.0999999046326,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.12000000476837,
["cooldown"] = 0.5,
["frequency"] = 2.6099998950958,
},
},
[108853] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[187874] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.85,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 100,
},
["2"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.85,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 100,
},
},
[8042] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.05,
["scale_upY"] = 1.05,
["scale_downX"] = 0.95,
["scale_downY"] = 0.95,
["duration"] = 0.060000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["scaleY"] = -1,
["fade_out"] = 0.05,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 7.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.06,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.05,
["scale_upY"] = 1.05,
["scale_downX"] = 0.95,
["scale_downY"] = 0.95,
["duration"] = 0.060000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.05,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 7.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.06,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
},
["indicator_scale"] = 0.99999994039536,
["aura_cooldown_reverse"] = false,
["castbar_icon_size"] = "same as castbar plus healthbar",
["aggro_modifies"] = {
["actor_name_color"] = true,
},
["minor_height_scale"] = 0.99999994039536,
["cast_statusbar_spark_half"] = true,
["aura_padding"] = 2,
["hook_data"] = {
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1724449520,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["Enabled"] = true,
["Revision"] = 357,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Aura Reorder [Plater]",
["HooksTemp"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Options"] = {
},
},
{
["Enabled"] = true,
["Revision"] = 44,
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Author"] = "Ditador-Azralon",
["Options"] = {
},
["Desc"] = "Change the color of the aura timer by it's time left",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --colors for each time bracket\n    envTable.Colors = {\n        critical = \"red\",\n        warning = \"yellow\",\n        okay = \"white\",\n    }\n    \n    --time amount to enter in warning or critical state\n    envTable.Timers = {\n        critical = 4.9,\n        warning = 8,\n    }\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auras = unitFrame.BuffFrame.PlaterBuffList\n    \n    for _, auraIcon in ipairs (auras) do\n        if (auraIcon:IsVisible()) then\n            if (auraIcon.RemainingTime < envTable.Timers.critical) then\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.critical)\n                \n            elseif (auraIcon.RemainingTime < envTable.Timers.warning) then\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.warning)\n                \n            else\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.okay)\n            end \n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Prio"] = 99,
["Time"] = 1669863230,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["LastHookEdited"] = "",
["Name"] = "Paint Aura Timers",
["Icon"] = "Interface\\Timer\\Challenges-Logo",
["PlaterCore"] = 1,
},
{
["Enabled"] = true,
["Revision"] = 127,
["OptionsValues"] = {
},
["HooksTemp"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border thickness\n    local size = 1 \n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (0, 0, 0, 0)\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()\n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end\n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame2.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (0, 0, 0, 0)\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()            \n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end    \nend",
},
["Author"] = "????????-Illidan",
["Options"] = {
},
["Desc"] = "Config aura borders",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border thickness\n    local size = 1 \n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (0, 0, 0, 0)\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()\n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end\n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame2.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (0, 0, 0, 0)\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()            \n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end    \nend",
},
["Prio"] = 99,
["Time"] = 1724449523,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["LastHookEdited"] = "",
["Name"] = "Advanced Debuff Border",
["Icon"] = 133006,
["PlaterCore"] = 1,
},
{
["Enabled"] = true,
["Revision"] = 73,
["OptionsValues"] = {
},
["HooksTemp"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.ThreatIcon) then\n        unitFrame.ThreatIcon:Hide()\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIndicator (unitFrame)\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateThreatState (unitFrame, unitId)\n    \nend\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.ThreatIcon) then\n        unitFrame.ThreatIcon:Hide()\n    end\nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.ThreatIcon) then\n        unitFrame.ThreatIcon:Hide()\n    end    \nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdatePlayerRole (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.Anchor = {side = 11, x = -2, y = 0}\n    envTable.Texture = \"Interface\\\\AddOns\\\\Plater\\\\media\\\\exclamation2_64\"\n    \n    --it'll only use the icon if the nameplate has a color from the Npc Colors tab and \"Only Scripts\" disabled.\n    envTable.OnlyWhenUsingNpcColor = true --if false, it'll always use the icon\n    \n    --private\n    envTable.PlayerRole = \"NONE\" --automatically changed by the script\n    \n    function envTable.CreateIndicator (unitFrame)\n        if (not unitFrame.ThreatIcon) then\n            unitFrame.ThreatIcon = unitFrame.healthBar:CreateTexture (nil, \"overlay\")\n        end\n    end\n    \n    function envTable.UpdateIndicator (unitFrame)\n        envTable.CreateIndicator (unitFrame)\n        \n        unitFrame.ThreatIcon:SetTexture (envTable.Texture)\n        Plater.SetAnchor (unitFrame.ThreatIcon, envTable.Anchor)\n        unitFrame.ThreatIcon:SetSize (unitFrame.healthBar:GetHeight(), unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateThreatState (unitFrame, unitId)\n        if (not unitFrame.ThreatIcon) then --if there's no icon created yet\n            return\n            \n        elseif (not Plater.IsInCombat()) then --not in combat\n            unitFrame.ThreatIcon:Hide()\n            return\n            \n        elseif (unitFrame.IsSelf) then --personal bar\n            unitFrame.ThreatIcon:Hide()\n            return\n            \n        elseif (envTable.OnlyWhenUsingNpcColor) then --must be using a npc color?\n            if (not unitFrame.UsingCustomColor) then\n                unitFrame.ThreatIcon:Hide()\n                return\n            end\n        end\n        \n        local isTanking, threatStatus, threatpct = UnitDetailedThreatSituation (\"player\", unitId)\n        \n        if (isTanking) then\n            if (envTable.PlayerRole == \"TANK\") then\n                unitFrame.ThreatIcon:Hide()\n            else\n                unitFrame.ThreatIcon:Show()\n                unitFrame.ThreatIcon:SetVertexColor (unpack (envTable.NameplateAggroColor))\n            end\n        else\n            if (envTable.PlayerRole == \"TANK\") then\n                unitFrame.ThreatIcon:Show()\n                unitFrame.ThreatIcon:SetVertexColor (unpack (envTable.NameplateNoAggroColor))                \n            else\n                unitFrame.ThreatIcon:Hide()                \n            end\n        end\n    end\n    \n    function envTable.UpdatePlayerRole (unitFrame)\n        local profile = Plater.db.profile\n        local role = Plater:GetPlayerRole()\n        \n        if (role == \"TANK\") then\n            envTable.PlayerRole = \"TANK\"\n            envTable.NameplateAggroColor = profile.tank.colors.aggro\n            envTable.NameplateNoAggroColor = profile.tank.colors.noaggro\n            \n        else\n            envTable.PlayerRole = \"DAMAGER\"\n            envTable.NameplateAggroColor = profile.dps.colors.aggro\n            envTable.NameplateNoAggroColor = profile.dps.colors.noaggro\n            \n        end        \n    end\n    \n    envTable.UpdatePlayerRole (unitFrame)\n    \nend",
},
["Author"] = "Cyclopes-Turalyon",
["Options"] = {
},
["Desc"] = "Add an icon to indicate an unit has Aggro on you. By default only show for units using a custom color from Npc Colors.",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.ThreatIcon) then\n        unitFrame.ThreatIcon:Hide()\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIndicator (unitFrame)\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.ThreatIcon) then\n        unitFrame.ThreatIcon:Hide()\n    end    \nend\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.ThreatIcon) then\n        unitFrame.ThreatIcon:Hide()\n    end\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateThreatState (unitFrame, unitId)\n    \nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdatePlayerRole (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.Anchor = {side = 11, x = -2, y = 0}\n    envTable.Texture = \"Interface\\\\AddOns\\\\Plater\\\\media\\\\exclamation2_64\"\n    \n    --it'll only use the icon if the nameplate has a color from the Npc Colors tab and \"Only Scripts\" disabled.\n    envTable.OnlyWhenUsingNpcColor = true --if false, it'll always use the icon\n    \n    --private\n    envTable.PlayerRole = \"NONE\" --automatically changed by the script\n    \n    function envTable.CreateIndicator (unitFrame)\n        if (not unitFrame.ThreatIcon) then\n            unitFrame.ThreatIcon = unitFrame.healthBar:CreateTexture (nil, \"overlay\")\n        end\n    end\n    \n    function envTable.UpdateIndicator (unitFrame)\n        envTable.CreateIndicator (unitFrame)\n        \n        unitFrame.ThreatIcon:SetTexture (envTable.Texture)\n        Plater.SetAnchor (unitFrame.ThreatIcon, envTable.Anchor)\n        unitFrame.ThreatIcon:SetSize (unitFrame.healthBar:GetHeight(), unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateThreatState (unitFrame, unitId)\n        if (not unitFrame.ThreatIcon) then --if there's no icon created yet\n            return\n            \n        elseif (not Plater.IsInCombat()) then --not in combat\n            unitFrame.ThreatIcon:Hide()\n            return\n            \n        elseif (unitFrame.IsSelf) then --personal bar\n            unitFrame.ThreatIcon:Hide()\n            return\n            \n        elseif (envTable.OnlyWhenUsingNpcColor) then --must be using a npc color?\n            if (not unitFrame.UsingCustomColor) then\n                unitFrame.ThreatIcon:Hide()\n                return\n            end\n        end\n        \n        local isTanking, threatStatus, threatpct = UnitDetailedThreatSituation (\"player\", unitId)\n        \n        if (isTanking) then\n            if (envTable.PlayerRole == \"TANK\") then\n                unitFrame.ThreatIcon:Hide()\n            else\n                unitFrame.ThreatIcon:Show()\n                unitFrame.ThreatIcon:SetVertexColor (unpack (envTable.NameplateAggroColor))\n            end\n        else\n            if (envTable.PlayerRole == \"TANK\") then\n                unitFrame.ThreatIcon:Show()\n                unitFrame.ThreatIcon:SetVertexColor (unpack (envTable.NameplateNoAggroColor))                \n            else\n                unitFrame.ThreatIcon:Hide()                \n            end\n        end\n    end\n    \n    function envTable.UpdatePlayerRole (unitFrame)\n        local profile = Plater.db.profile\n        local role = Plater:GetPlayerRole()\n        \n        if (role == \"TANK\") then\n            envTable.PlayerRole = \"TANK\"\n            envTable.NameplateAggroColor = profile.tank.colors.aggro\n            envTable.NameplateNoAggroColor = profile.tank.colors.noaggro\n            \n        else\n            envTable.PlayerRole = \"DAMAGER\"\n            envTable.NameplateAggroColor = profile.dps.colors.aggro\n            envTable.NameplateNoAggroColor = profile.dps.colors.noaggro\n            \n        end        \n    end\n    \n    envTable.UpdatePlayerRole (unitFrame)\n    \nend",
},
["Prio"] = 48,
["Time"] = 1724449522,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["LastHookEdited"] = "",
["Name"] = "Aggro Indicator",
["Icon"] = 132344,
["PlaterCore"] = 1,
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = true\n    --anchor icon on what side\n    envTable.IconAnchor = \"left\" --accep 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 1\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = true\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", -1, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", -1, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 1, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 1, 0)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            \n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"center\", castBar, \"left\", 0, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\nend",
},
["Hooks"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = true\n    --anchor icon on what side\n    envTable.IconAnchor = \"left\" --accep 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 1\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = true\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", -1, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", -1, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 1, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 1, 0)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            \n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"center\", castBar, \"left\", 0, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\nend",
},
["Time"] = 1724449518,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/SR0FJSEDZ/1",
["Icon"] = "Interface\\Buttons\\UI-Quickslot2",
["Enabled"] = true,
["Revision"] = 119,
["semver"] = "1.0.0",
["Author"] = "Ditador-Azralon",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Name"] = "Cast Icon Anchor",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 87,
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Author"] = "Izimode-Azralon",
["Options"] = {
},
["Desc"] = "Adds a pixels perfect border around the cast bar.",
["Hooks"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder:Hide()\n    end    \nend",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    \n    --hide the icon of the spell, may require /reload after changing\n    envTable.HideIcon = false\n    \n    --border settings\n    envTable.BorderThickness = 1\n    envTable.BorderColor = \"black\"\n    \n    --private\n    --create the border\n    if (not unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder = CreateFrame (\"frame\", nil, unitFrame.castBar, \"NamePlateFullBorderTemplate\")\n    end    \n    \n    --update the border\n    function envTable.UpdateBorder (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.CastBarBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.CastBarBorder:SetBorderSizes (size, size, size, size)\n        castBar.CastBarBorder:UpdateSizes()        \n        \n        if (envTable.HideIcon) then\n            castBar.Icon:Hide()\n        end\n        \n        castBar.CastBarBorder:Show()\n    end\n    \nend\n\n\n\n\n",
},
["Prio"] = 99,
["Time"] = 1669862651,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["LastHookEdited"] = "",
["Name"] = "Cast Bar Border",
["Icon"] = 133004,
["PlaterCore"] = 1,
},
{
["Enabled"] = false,
["Revision"] = 43,
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Author"] = "????????-Illidan",
["Options"] = {
},
["Desc"] = "Debuff timer show decimal values",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --minimum time left to take effect\n    envTable.MinTime = 9.999\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    for index, auraIcon in ipairs (unitFrame.BuffFrame.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            if (auraIcon.RemainingTime < envTable.MinTime) then\n                auraIcon.TimerText:SetText (format (\"%.1f\", auraIcon.RemainingTime))\n            end\n        end\n    end\n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame2.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            if (auraIcon.RemainingTime < envTable.MinTime) then            \n                auraIcon.TimerText:SetText (format (\"%.1f\", auraIcon.RemainingTime))\n            end\n        end        \n    end    \nend",
},
["Prio"] = 99,
["Time"] = 1666641438,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["LastHookEdited"] = "",
["Name"] = "Decimal Debuff Timer",
["Icon"] = 609811,
["PlaterCore"] = 1,
},
{
["Enabled"] = true,
["Revision"] = 85,
["OptionsValues"] = {
},
["HooksTemp"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --    if false then return end\n    \n    for _, iconFrame in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n        \n        unitFrame.ExtraIconFrame.options.show_text = true\n        \n        local profile = Plater.db.profile\n        \n        Plater.SetAnchor (iconFrame.CountdownText, profile.aura_timer_text_anchor)\n        Plater:SetFontSize (iconFrame.CountdownText, profile.aura_timer_text_size)\n        Plater:SetFontFace (iconFrame.CountdownText, profile.aura_timer_text_font)\n        \n        Plater.SetFontOutlineAndShadow (iconFrame.CountdownText, profile.aura_timer_text_outline, profile.aura_timer_text_shadow_color, profile.aura_timer_text_shadow_color_offset[1], profile.aura_timer_text_shadow_color_offset[2])\n        \n        iconFrame.Cooldown:SetEdgeTexture (profile.aura_cooldown_edge_texture)\n        iconFrame.Cooldown:SetReverse (profile.aura_cooldown_reverse)\n        iconFrame.Cooldown:SetDrawSwipe (profile.aura_cooldown_show_swipe)        \n        \n    end\n    \nend",
},
["Author"] = "?????-Illidan",
["Options"] = {
},
["Desc"] = "Format Buff Special icons like the regular aura icons.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --    if false then return end\n    \n    for _, iconFrame in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n        \n        unitFrame.ExtraIconFrame.options.show_text = true\n        \n        local profile = Plater.db.profile\n        \n        Plater.SetAnchor (iconFrame.CountdownText, profile.aura_timer_text_anchor)\n        Plater:SetFontSize (iconFrame.CountdownText, profile.aura_timer_text_size)\n        Plater:SetFontFace (iconFrame.CountdownText, profile.aura_timer_text_font)\n        \n        Plater.SetFontOutlineAndShadow (iconFrame.CountdownText, profile.aura_timer_text_outline, profile.aura_timer_text_shadow_color, profile.aura_timer_text_shadow_color_offset[1], profile.aura_timer_text_shadow_color_offset[2])\n        \n        iconFrame.Cooldown:SetEdgeTexture (profile.aura_cooldown_edge_texture)\n        iconFrame.Cooldown:SetReverse (profile.aura_cooldown_reverse)\n        iconFrame.Cooldown:SetDrawSwipe (profile.aura_cooldown_show_swipe)        \n        \n    end\n    \nend",
},
["Prio"] = 99,
["Time"] = 1724449519,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["LastHookEdited"] = "",
["Name"] = "Buff Special Mod",
["Icon"] = 136139,
["PlaterCore"] = 1,
},
{
["Enabled"] = true,
["Revision"] = 35,
["OptionsValues"] = {
},
["HooksTemp"] = {
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --after editing this script, save it and /reload\n    \n    --adds two target indicators in arrow format\n    --to change the texture you may replace the path with another texture path\n    --or you can copy and paste more options here\n    \n    Plater.TargetIndicators    [\"SmallArrow\"] = {\n        path = [[Interface\\MONEYFRAME\\Arrow-Right-Up]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 12,\n        height = 12,\n        x = 8,\n        y = 0,\n        blend = \"ADD\",\n    }\n    \n    Plater.TargetIndicators    [\"BigArrow\"] = {\n        path = [[Interface\\AddOns\\Plater\\media\\arrow_right_64]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 18,\n        height = 16,\n        x = 24,\n        y = 0,\n        blend = \"ADD\",\n        color = \"yellow\",\n    }\n    \n    \n    \nend\n\n\n",
},
["Author"] = "Izimode-Azralon",
["Options"] = {
},
["Desc"] = "Adds two arrows into the target indicators options.",
["Hooks"] = {
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --after editing this script, save it and /reload\n    \n    --adds two target indicators in arrow format\n    --to change the texture you may replace the path with another texture path\n    --or you can copy and paste more options here\n    \n    Plater.TargetIndicators    [\"SmallArrow\"] = {\n        path = [[Interface\\MONEYFRAME\\Arrow-Right-Up]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 12,\n        height = 12,\n        x = 8,\n        y = 0,\n        blend = \"ADD\",\n    }\n    \n    Plater.TargetIndicators    [\"BigArrow\"] = {\n        path = [[Interface\\AddOns\\Plater\\media\\arrow_right_64]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 18,\n        height = 16,\n        x = 24,\n        y = 0,\n        blend = \"ADD\",\n        color = \"yellow\",\n    }\n    \n    \n    \nend\n\n\n",
},
["Prio"] = 99,
["Time"] = 1724449521,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["LastHookEdited"] = "",
["Name"] = "Arrow Target Indicators",
["Icon"] = "Interface\\AddOns\\Plater\\media\\arrow_right_64",
["PlaterCore"] = 1,
},
{
["Enabled"] = true,
["Revision"] = 26,
["OptionsValues"] = {
},
["HooksTemp"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.Spark:SetHeight (self:GetHeight())\n    \nend\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.Spark:SetHeight (self:GetHeight())\n    \nend\n\n\n",
},
["Author"] = "Ditador-Azralon",
["Options"] = {
},
["Desc"] = "Set the spark height to the same size of the cast bar.",
["Hooks"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.Spark:SetHeight (self:GetHeight())\n    \nend\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.Spark:SetHeight (self:GetHeight())\n    \nend\n\n\n",
},
["Prio"] = 99,
["Time"] = 1724449526,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["LastHookEdited"] = "",
["Name"] = "Adjust Spark Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\spark6",
["PlaterCore"] = 1,
},
{
["Enabled"] = true,
["Revision"] = 74,
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Author"] = "Izimode-Azralon",
["Options"] = {
},
["Desc"] = "Show power bar for some units.",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --power bar options:\n    \n    --for which units it should\n    envTable.ShowForEnemyPlayers = true\n    envTable.ShowForEnemyNpcs = false\n    \n    --specific npcs, can be the npc name or npcId\n    --this list work even if the ShowForEnemyNpcs is false\n    envTable.SpecificNpcs = {\n        [\"the rock\"] = true, --npc name\n        [225] = true, --npcId\n    }\n    \n    --anchor the power bar to\n    envTable.Anchor = {\n        side = 13, --inside the healthbar, bottom side\n        x = 0, \n        y = 0,\n    }\n    \n    --power bar height\n    envTable.Height = 1\n    \n    --power bar percent text\n    envTable.PercentTextEnabled = false\n    envTable.PercentTextAnchor = {\n        side = 7, --top right\n        x = 2, \n        y = 0,\n    }\n    \n    \n    --private\n    function envTable.ShowPowerbar (unitFrame)\n        unitFrame.powerBar:SetUnit (unitFrame.unit)\n        envTable.UpdatePowerbar (unitFrame)\n    end\n    \n    function envTable.UpdatePowerbar (unitFrame)\n        local powerBar = unitFrame.powerBar\n        Plater.SetAnchor (powerBar, envTable.Anchor, unitFrame.healthBar)\n        powerBar:SetSize (unitFrame.healthBar:GetWidth(), envTable.Height)\n        \n        envTable.SavePowerBarSize (unitFrame, envTable.Height)\n        \n        if (envTable.PercentTextEnabled) then\n            powerBar.percentText:Show()\n            --copy the font from the health percent\n            Plater:SetFontFace (powerBar.percentText, Plater.GetConfig (unitFrame).percent_text_font)\n            Plater:SetFontSize (powerBar.percentText, Plater.GetConfig (unitFrame).percent_text_size)\n            Plater.SetAnchor (powerBar.percentText, envTable.PercentTextAnchor)\n        else\n            powerBar.percentText:Hide()\n        end\n    end\n    \n    function envTable.CanShowPowerBarForUnit (unitFrame)\n        --check if the is in the special list to force show\n        local forceShowPowerBar = envTable.SpecificNpcs [unitFrame.namePlateNpcId] or envTable.SpecificNpcs [unitFrame.namePlateUnitName] or envTable.SpecificNpcs [unitFrame.namePlateUnitNameLower]\n        if (forceShowPowerBar) then\n            envTable.ShowPowerbar (unitFrame)\n            \n            --check if the unit is a enemy player\n        elseif (unitFrame.ActorType == \"enemyplayer\") then\n            if (envTable.ShowForEnemyPlayers) then\n                envTable.ShowPowerbar (unitFrame)\n            end\n            \n            --check if the unit is a enemy npc\n        elseif (unitFrame.ActorType == \"enemynpc\") then\n            if (envTable.ShowForEnemyNpcs) then\n                envTable.ShowPowerbar (unitFrame)\n            end\n        end\n    end\n    \n    function envTable.SavePowerBarSize (unitFrame, height)\n        local plateConfigs = Plater.db.profile.plate_config [unitFrame.ActorType]\n        plateConfigs.mana[1] = plateConfigs.health[1]\n        plateConfigs.mana[2] = height\n        plateConfigs.mana_incombat[1] = plateConfigs.health_incombat[1]\n        plateConfigs.mana_incombat[2] = height\n    end\nend\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShowPowerBarForUnit (unitFrame)    \nend",
},
["Prio"] = 99,
["Time"] = 1671134405,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["LastHookEdited"] = "",
["Name"] = "Power Bar",
["Icon"] = "Interface/Addons/Plater/Media/fire_64",
["PlaterCore"] = 1,
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame)\nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame)\nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.healthBar.TargetBorder) then\n        unitFrame.healthBar.TargetBorder:Hide()\n    end\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border options\n    local borderSize = 3\n    local borderColor = \"white\"\n    \n    if (not unitFrame.healthBar.TargetBorder) then\n        unitFrame.healthBar.TargetBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n    end\n    \n    function envTable.UpdateBorder (unitFrame)\n        if (UnitIsUnit (\"target\", unitFrame.unit)) then               \n            local r, g, b, a = DetailsFramework:ParseColors (borderColor)\n            unitFrame.healthBar.TargetBorder:SetVertexColor (r, g, b, a)\n            \n            unitFrame.healthBar.TargetBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n            unitFrame.healthBar.TargetBorder:UpdateSizes()            \n            \n            unitFrame.healthBar.TargetBorder:Show()\n        else\n            unitFrame.healthBar.TargetBorder:Hide()\n        end\n    end\nend",
},
["Time"] = 1718691503,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\CHATFRAME\\UI-ChatInputBorder",
["Enabled"] = true,
["Revision"] = 70,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Add a border around the current target.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Target Border",
["LastHookEdited"] = "Nameplate Updated",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.healthBar.customShieldHookNeedsUpdate = true\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    local hb = unitFrame.healthBar\n    if hb.customShieldHookNeedsUpdate and hb.displayedUnit then\n        hb:UNIT_MAXHEALTH()\n        hb.customShieldHookNeedsUpdate = false\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Initialization"] = "function (modTable)\n    modTable.LibSharedMedia = LibStub:GetLibrary (\"LibSharedMedia-3.0\")\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --Disable for classic\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        function envTable.addHook(unitFrame) end\n        return\n    end\n    \n    --settings: (changing this requires a /reload)\n    local shieldTexture = \"\"\n    --local shieldTexture = \"Details Flat\"\n    local useHalfBar = false --use a \"half bar\" overlay if the health+absorb is > 100% of the health\n    local showAlways = false --show absorbs value if health amount is disabled\n    \n    \n    --init\n    local hb = unitFrame.healthBar\n    local unit = hb.displayedUnit\n    if shieldTexture and shieldTexture ~= \"\" then\n        local texture = modTable.LibSharedMedia:Fetch(\"statusbar\", shieldTexture)\n        hb.Settings.ShieldIndicatorTexture = texture or [[Interface\\RaidFrame\\Shield-Fill]]\n        hb.shieldAbsorbIndicator:SetTexture (hb.Settings.ShieldIndicatorTexture, true, true)\n    else\n        hb.Settings.ShieldIndicatorTexture = [[Interface\\RaidFrame\\Shield-Fill]]\n        hb.shieldAbsorbIndicator:SetTexture (hb.Settings.ShieldIndicatorTexture, true, true)\n    end\n    \n    -- ensure settings are up to date... workardound till fix in Plater core.\n    unitFrame.healthBar.Settings.ShowShields = Plater.db.profile.show_shield_prediction\n    \n    -- overwrite to add custom text\n    function Plater.UpdateLifePercentText (healthBar, unitId, showHealthAmount, showPercentAmount, showDecimals) -- ~health\n        \n        --get the cached health amount for performance\n        local currentHealth, maxHealth, absorb = healthBar.CurrentHealth, healthBar.CurrentHealthMax, healthBar.currentAbsorb\n        \n        if (showHealthAmount and showPercentAmount) then\n            local percent = currentHealth / maxHealth * 100\n            \n            if (showDecimals) then\n                if (percent < 10) then\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. format (\"%.2f\", percent) .. \"%)\")\n                    \n                elseif (percent < 99.9) then\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. format (\"%.1f\", percent) .. \"%)\")\n                else\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (100%)\")\n                end\n            else\n                healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. floor (percent) .. \"%)\")\n            end\n            \n        elseif (showHealthAmount) then\n            healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth))\n            \n        elseif (showPercentAmount) then\n            local percent = currentHealth / maxHealth * 100\n            \n            if (showDecimals) then\n                if (percent < 10) then\n                    healthBar.lifePercent:SetText (format (\"%.2f\", percent) .. \"%\")\n                    \n                elseif (percent < 99.9) then\n                    healthBar.lifePercent:SetText (format (\"%.1f\", percent) .. \"%\")\n                else\n                    healthBar.lifePercent:SetText (\"100%\")\n                end\n            else\n                healthBar.lifePercent:SetText (floor (percent) .. \"%\")\n            end\n            \n        else\n            healthBar.lifePercent:SetText (\"\")\n        end\n        \n        -- CUSTOM HERE --\n        if healthBar.currentAbsorb and healthBar.currentAbsorb > 0 then\n            if (showHealthAmount or showPercentAmount) then\n                healthBar.lifePercent:SetText(healthBar.lifePercent:GetText() .. \"  -  \" .. Plater.FormatNumber(healthBar.currentAbsorb))\n            elseif showAlways then\n                healthBar.lifePercent:SetText(Plater.FormatNumber(healthBar.currentAbsorb))\n            end\n        end\n        -- CUSTOM END --\n    end\n    \n    \n    -- overwrite UpdateHealPrediction on the healthBar\n    function envTable.addHook(unitFrame)\n        if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n            return\n        end\n        local hb = unitFrame.healthBar\n        \n        if not hb.isCustomShieldHook then\n            --health and absorbs prediction from Plater core, reworked to integrate shields into the health bar\n            hb.UpdateHealPrediction = function (self)\n                local currentHealth = self.currentHealth\n                local currentHealthMax = self.currentHealthMax\n                local healthPercent = currentHealth / currentHealthMax\n                \n                if (not currentHealthMax or currentHealthMax <= 0) then\n                    return\n                end\n                \n                --order is: the health of the unit > damage absorb > heal absorb > incoming heal\n                local width = self:GetWidth()\n                \n                hb.shieldAbsorbIndicator:Hide()\n                hb.shieldAbsorbGlow:Hide()\n                \n                if not self.displayedUnit then return end\n                \n                if (self.Settings.ShowHealingPrediction) then\n                    --incoming heal on the unit from all sources\n                    local unitHealIncoming = UnitGetIncomingHeals (self.displayedUnit) or 0\n                    --heal absorbs\n                    local unitHealAbsorb = UnitGetTotalHealAbsorbs (self.displayedUnit) or 0\n                    \n                    if (unitHealIncoming > 0) then\n                        --calculate what is the percent of health incoming based on the max health the player has\n                        local incomingPercent = unitHealIncoming / currentHealthMax\n                        self.incomingHealIndicator:Show()\n                        self.incomingHealIndicator:SetWidth (max (1, min (width * incomingPercent, abs (healthPercent - 1) * width)))\n                        self.incomingHealIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                        self.incomingHealIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                    else\n                        self.incomingHealIndicator:Hide()\n                    end\n                    \n                    if (unitHealAbsorb > 0) then\n                        local healAbsorbPercent = unitHealAbsorb / currentHealthMax\n                        self.healAbsorbIndicator:Show()\n                        self.healAbsorbIndicator:SetWidth (max (1, min (width * healAbsorbPercent, abs (healthPercent - 1) * width)))\n                        self.healAbsorbIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                        self.healAbsorbIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                    else\n                        self.healAbsorbIndicator:Hide()\n                    end\n                end\n                \n                if (self.Settings.ShowShields) then\n                    --damage absorbs\n                    local unitDamageAbsorb = UnitGetTotalAbsorbs (self.displayedUnit) or 0\n                    self.currentAbsorb = unitDamageAbsorb\n                    \n                    if (unitDamageAbsorb > 0) then\n                        local curHealthTotal = unitDamageAbsorb + currentHealth\n                        local damageAbsorbPercent\n                        local healthPercentAbsorb\n                        local isHalfBar = false\n                        if curHealthTotal > currentHealthMax then\n                            if useHalfBar then\n                                damageAbsorbPercent = unitDamageAbsorb / currentHealthMax\n                                if damageAbsorbPercent > 1 then\n                                    damageAbsorbPercent = 1 -- just limit it to the healthbar width...\n                                end\n                                healthPercentAbsorb = 1 - damageAbsorbPercent\n                                self:SetMinMaxValues (0, currentHealthMax)\n                                \n                                isHalfBar = true\n                            else\n                                damageAbsorbPercent = unitDamageAbsorb / curHealthTotal\n                                healthPercentAbsorb = currentHealth / curHealthTotal\n                                self:SetMinMaxValues (0, curHealthTotal)\n                            end\n                        else \n                            damageAbsorbPercent = unitDamageAbsorb / currentHealthMax\n                            healthPercentAbsorb = currentHealth / currentHealthMax\n                            self:SetMinMaxValues (0, currentHealthMax)\n                        end\n                        --print(healthPercentAbsorb, currentHealth, unitDamageAbsorb, damageAbsorbPercent)\n                        \n                        \n                        self.shieldAbsorbIndicator:SetWidth (width * damageAbsorbPercent)\n                        self.shieldAbsorbIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercentAbsorb, (isHalfBar and (- self:GetHeight() / 2)) or 0)\n                        self.shieldAbsorbIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercentAbsorb, 0)\n                        \n                        self.shieldAbsorbIndicator:Show()\n                        \n                    else\n                        self.shieldAbsorbIndicator:Hide()\n                    end\n                end\n                \n                hb.isCustomShieldHook = true\n            end\n            \n            if hb.displayedUnit then\n                hb.shieldAbsorbIndicator:Hide()\n                hb.shieldAbsorbGlow:Hide()\n                hb:UNIT_MAXHEALTH()\n            else\n                hb.customShieldHookNeedsUpdate = true\n            end\n            \n        end\n    end\n    \nend",
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.healthBar.customShieldHookNeedsUpdate = true\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    local hb = unitFrame.healthBar\n    if hb.customShieldHookNeedsUpdate and hb.displayedUnit then\n        hb:UNIT_MAXHEALTH()\n        hb.customShieldHookNeedsUpdate = false\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Initialization"] = "function (modTable)\n    modTable.LibSharedMedia = LibStub:GetLibrary (\"LibSharedMedia-3.0\")\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --Disable for classic\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        function envTable.addHook(unitFrame) end\n        return\n    end\n    \n    --settings: (changing this requires a /reload)\n    local shieldTexture = \"\"\n    --local shieldTexture = \"Details Flat\"\n    local useHalfBar = false --use a \"half bar\" overlay if the health+absorb is > 100% of the health\n    local showAlways = false --show absorbs value if health amount is disabled\n    \n    \n    --init\n    local hb = unitFrame.healthBar\n    local unit = hb.displayedUnit\n    if shieldTexture and shieldTexture ~= \"\" then\n        local texture = modTable.LibSharedMedia:Fetch(\"statusbar\", shieldTexture)\n        hb.Settings.ShieldIndicatorTexture = texture or [[Interface\\RaidFrame\\Shield-Fill]]\n        hb.shieldAbsorbIndicator:SetTexture (hb.Settings.ShieldIndicatorTexture, true, true)\n    else\n        hb.Settings.ShieldIndicatorTexture = [[Interface\\RaidFrame\\Shield-Fill]]\n        hb.shieldAbsorbIndicator:SetTexture (hb.Settings.ShieldIndicatorTexture, true, true)\n    end\n    \n    -- ensure settings are up to date... workardound till fix in Plater core.\n    unitFrame.healthBar.Settings.ShowShields = Plater.db.profile.show_shield_prediction\n    \n    -- overwrite to add custom text\n    function Plater.UpdateLifePercentText (healthBar, unitId, showHealthAmount, showPercentAmount, showDecimals) -- ~health\n        \n        --get the cached health amount for performance\n        local currentHealth, maxHealth, absorb = healthBar.CurrentHealth, healthBar.CurrentHealthMax, healthBar.currentAbsorb\n        \n        if (showHealthAmount and showPercentAmount) then\n            local percent = currentHealth / maxHealth * 100\n            \n            if (showDecimals) then\n                if (percent < 10) then\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. format (\"%.2f\", percent) .. \"%)\")\n                    \n                elseif (percent < 99.9) then\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. format (\"%.1f\", percent) .. \"%)\")\n                else\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (100%)\")\n                end\n            else\n                healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. floor (percent) .. \"%)\")\n            end\n            \n        elseif (showHealthAmount) then\n            healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth))\n            \n        elseif (showPercentAmount) then\n            local percent = currentHealth / maxHealth * 100\n            \n            if (showDecimals) then\n                if (percent < 10) then\n                    healthBar.lifePercent:SetText (format (\"%.2f\", percent) .. \"%\")\n                    \n                elseif (percent < 99.9) then\n                    healthBar.lifePercent:SetText (format (\"%.1f\", percent) .. \"%\")\n                else\n                    healthBar.lifePercent:SetText (\"100%\")\n                end\n            else\n                healthBar.lifePercent:SetText (floor (percent) .. \"%\")\n            end\n            \n        else\n            healthBar.lifePercent:SetText (\"\")\n        end\n        \n        -- CUSTOM HERE --\n        if healthBar.currentAbsorb and healthBar.currentAbsorb > 0 then\n            if (showHealthAmount or showPercentAmount) then\n                healthBar.lifePercent:SetText(healthBar.lifePercent:GetText() .. \"  -  \" .. Plater.FormatNumber(healthBar.currentAbsorb))\n            elseif showAlways then\n                healthBar.lifePercent:SetText(Plater.FormatNumber(healthBar.currentAbsorb))\n            end\n        end\n        -- CUSTOM END --\n    end\n    \n    \n    -- overwrite UpdateHealPrediction on the healthBar\n    function envTable.addHook(unitFrame)\n        if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n            return\n        end\n        local hb = unitFrame.healthBar\n        \n        if not hb.isCustomShieldHook then\n            --health and absorbs prediction from Plater core, reworked to integrate shields into the health bar\n            hb.UpdateHealPrediction = function (self)\n                local currentHealth = self.currentHealth\n                local currentHealthMax = self.currentHealthMax\n                local healthPercent = currentHealth / currentHealthMax\n                \n                if (not currentHealthMax or currentHealthMax <= 0) then\n                    return\n                end\n                \n                --order is: the health of the unit > damage absorb > heal absorb > incoming heal\n                local width = self:GetWidth()\n                \n                hb.shieldAbsorbIndicator:Hide()\n                hb.shieldAbsorbGlow:Hide()\n                \n                if not self.displayedUnit then return end\n                \n                if (self.Settings.ShowHealingPrediction) then\n                    --incoming heal on the unit from all sources\n                    local unitHealIncoming = UnitGetIncomingHeals (self.displayedUnit) or 0\n                    --heal absorbs\n                    local unitHealAbsorb = UnitGetTotalHealAbsorbs (self.displayedUnit) or 0\n                    \n                    if (unitHealIncoming > 0) then\n                        --calculate what is the percent of health incoming based on the max health the player has\n                        local incomingPercent = unitHealIncoming / currentHealthMax\n                        self.incomingHealIndicator:Show()\n                        self.incomingHealIndicator:SetWidth (max (1, min (width * incomingPercent, abs (healthPercent - 1) * width)))\n                        self.incomingHealIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                        self.incomingHealIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                    else\n                        self.incomingHealIndicator:Hide()\n                    end\n                    \n                    if (unitHealAbsorb > 0) then\n                        local healAbsorbPercent = unitHealAbsorb / currentHealthMax\n                        self.healAbsorbIndicator:Show()\n                        self.healAbsorbIndicator:SetWidth (max (1, min (width * healAbsorbPercent, abs (healthPercent - 1) * width)))\n                        self.healAbsorbIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                        self.healAbsorbIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                    else\n                        self.healAbsorbIndicator:Hide()\n                    end\n                end\n                \n                if (self.Settings.ShowShields) then\n                    --damage absorbs\n                    local unitDamageAbsorb = UnitGetTotalAbsorbs (self.displayedUnit) or 0\n                    self.currentAbsorb = unitDamageAbsorb\n                    \n                    if (unitDamageAbsorb > 0) then\n                        local curHealthTotal = unitDamageAbsorb + currentHealth\n                        local damageAbsorbPercent\n                        local healthPercentAbsorb\n                        local isHalfBar = false\n                        if curHealthTotal > currentHealthMax then\n                            if useHalfBar then\n                                damageAbsorbPercent = unitDamageAbsorb / currentHealthMax\n                                if damageAbsorbPercent > 1 then\n                                    damageAbsorbPercent = 1 -- just limit it to the healthbar width...\n                                end\n                                healthPercentAbsorb = 1 - damageAbsorbPercent\n                                self:SetMinMaxValues (0, currentHealthMax)\n                                \n                                isHalfBar = true\n                            else\n                                damageAbsorbPercent = unitDamageAbsorb / curHealthTotal\n                                healthPercentAbsorb = currentHealth / curHealthTotal\n                                self:SetMinMaxValues (0, curHealthTotal)\n                            end\n                        else \n                            damageAbsorbPercent = unitDamageAbsorb / currentHealthMax\n                            healthPercentAbsorb = currentHealth / currentHealthMax\n                            self:SetMinMaxValues (0, currentHealthMax)\n                        end\n                        --print(healthPercentAbsorb, currentHealth, unitDamageAbsorb, damageAbsorbPercent)\n                        \n                        \n                        self.shieldAbsorbIndicator:SetWidth (width * damageAbsorbPercent)\n                        self.shieldAbsorbIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercentAbsorb, (isHalfBar and (- self:GetHeight() / 2)) or 0)\n                        self.shieldAbsorbIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercentAbsorb, 0)\n                        \n                        self.shieldAbsorbIndicator:Show()\n                        \n                    else\n                        self.shieldAbsorbIndicator:Hide()\n                    end\n                end\n                \n                hb.isCustomShieldHook = true\n            end\n            \n            if hb.displayedUnit then\n                hb.shieldAbsorbIndicator:Hide()\n                hb.shieldAbsorbGlow:Hide()\n                hb:UNIT_MAXHEALTH()\n            else\n                hb.customShieldHookNeedsUpdate = true\n            end\n            \n        end\n    end\n    \nend",
},
["Time"] = 1724449527,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/VtPjNl8Mg/7",
["Icon"] = 135940,
["Enabled"] = true,
["Revision"] = 1181,
["semver"] = "1.0.6",
["Author"] = "Elaiana-Proudmoore",
["Desc"] = "Adds absorbs to the health bar as full health value.",
["Prio"] = 99,
["version"] = 7,
["PlaterCore"] = 1,
["Name"] = "Absorb Shields in Healthbar",
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Options For @scriptname",
["Name"] = "Options Intro",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = "",
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    local Details = Details\n    unitFrame.HealerTexture:Hide()\n    \n    if (Details and Details.realversion >= 134) then\n        local spec = Details:GetSpecByGUID (unitFrame.namePlateUnitGUID)\n        if (spec and envTable.HealerSpecs [spec]) then\n            \n            --custom icon indicator\n            if (envTable.ShowCustomIndicator) then\n                unitFrame.HealerTexture:Show()                \n                if (envTable.UseClassColor) then\n                    unitFrame.HealerTexture.vertexcolor = select (2, UnitClass (unitId))\n                else\n                    unitFrame.HealerTexture.vertexcolor = envTable.Color\n                end\n            end\n            \n            --regular indicator from plater\n            if (envTable.ShowRegularIndicator) then\n                Plater.ShowIndicator (unitFrame, envTable.Texture, envTable.Width, envTable.Height) \n            end\n            \n        end\n    end\n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --options\n    --custom indicator is a custom icon added by this script\n    envTable.ShowCustomIndicator = true\n    --regular indicator is the indicator row within Plater default indicators\n    envTable.ShowRegularIndicator = false\n    \n    --custom indicator options\n    envTable.Texture = [[Interface\\AddOns\\Plater\\media\\cross_64]]\n    envTable.Width = 8\n    envTable.Height = 8\n    \n    envTable.Anchor = {\n        side = 7, --topright\n        x = envTable.Width / 2, --x offset\n        y = -envTable.Width / 2, --y offset\n    }\n    \n    envTable.UseClassColor = false\n    envTable.Color = \"white\" --only use this color when use class color is false\n    \n    --private\n    envTable.HealerSpecs = {\n        [105] = true, -->  druid resto\n        [270] = true, --> monk mw\n        [65] = true, --> paladin holy\n        [256] = true,  --> priest disc\n        [257] = true,  --> priest holy\n        [264] = true, --> shaman resto\n    }\n    \n    unitFrame.HealerTexture = unitFrame.HealerTexture or Plater:CreateImage (unitFrame.healthBar.FrameOverlay, texture, envTable.Width, envTable.Height, \"overlay\")\n    \n    unitFrame.HealerTexture.width = envTable.Width\n    unitFrame.HealerTexture.height = envTable.Height\n    unitFrame.HealerTexture.texture = envTable.Texture\n    Plater.SetAnchor (unitFrame.HealerTexture, envTable.Anchor)\n    \nend",
},
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --options\n    --custom indicator is a custom icon added by this script\n    envTable.ShowCustomIndicator = true\n    --regular indicator is the indicator row within Plater default indicators\n    envTable.ShowRegularIndicator = false\n    \n    --custom indicator options\n    envTable.Texture = [[Interface\\AddOns\\Plater\\media\\cross_64]]\n    envTable.Width = 8\n    envTable.Height = 8\n    \n    envTable.Anchor = {\n        side = 7, --topright\n        x = envTable.Width / 2, --x offset\n        y = -envTable.Width / 2, --y offset\n    }\n    \n    envTable.UseClassColor = false\n    envTable.Color = \"white\" --only use this color when use class color is false\n    \n    --private\n    envTable.HealerSpecs = {\n        [105] = true, -->  druid resto\n        [270] = true, --> monk mw\n        [65] = true, --> paladin holy\n        [256] = true,  --> priest disc\n        [257] = true,  --> priest holy\n        [264] = true, --> shaman resto\n    }\n    \n    unitFrame.HealerTexture = unitFrame.HealerTexture or Plater:CreateImage (unitFrame.healthBar.FrameOverlay, texture, envTable.Width, envTable.Height, \"overlay\")\n    \n    unitFrame.HealerTexture.width = envTable.Width\n    unitFrame.HealerTexture.height = envTable.Height\n    unitFrame.HealerTexture.texture = envTable.Texture\n    Plater.SetAnchor (unitFrame.HealerTexture, envTable.Anchor)\n    \nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    local Details = Details\n    unitFrame.HealerTexture:Hide()\n    \n    if (Details and Details.realversion >= 134) then\n        local spec = Details:GetSpecByGUID (unitFrame.namePlateUnitGUID)\n        if (spec and envTable.HealerSpecs [spec]) then\n            \n            --custom icon indicator\n            if (envTable.ShowCustomIndicator) then\n                unitFrame.HealerTexture:Show()                \n                if (envTable.UseClassColor) then\n                    unitFrame.HealerTexture.vertexcolor = select (2, UnitClass (unitId))\n                else\n                    unitFrame.HealerTexture.vertexcolor = envTable.Color\n                end\n            end\n            \n            --regular indicator from plater\n            if (envTable.ShowRegularIndicator) then\n                Plater.ShowIndicator (unitFrame, envTable.Texture, envTable.Width, envTable.Height) \n            end\n            \n        end\n    end\n    \nend",
},
["Time"] = 1724449517,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/aIlB_UgaU/1",
["Icon"] = "Interface\\AddOns\\Plater\\media\\cross_64",
["Enabled"] = true,
["Revision"] = 105,
["semver"] = "1.0.0",
["Author"] = "Izimode-Azralon",
["Desc"] = "Add a cross icon into the nameplate of healers. Must have Details! Damage Meter installed.",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Name"] = "Healer Indicator",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
["outerGlow"] = false,
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    -- settings:\n    \n    -- for the LibCustomGlow implementation:\n    modTable.options = {\n        glowType = \"pixel\",\n        color = modTable.config.glowColor,--\"red\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1. Defaul value is {0.95, 0.95, 0.32, 1}\n        N = modTable.config.antsAmount, --8, -- number of lines. Defaul value is 8;\n        frequency = modTable.config.frequency, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = modTable.config.antsLength, -- length of lines. Default value depends on region size and number of lines;\n        th = modTable.config.antsThickness, -- thickness of lines. Default value is 2;\n        xOffset = 0,\n        yOffset = 0, -- offset of glow relative to region border;\n        border = modTable.config.antsBorder, -- set to true to create border under lines;\n        key = \"StealPurgeAuraGlow\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local buffSpecialGlow = true\n    \n    \n    -- functions --\n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        local auraContainer = auraContainers [containerID]\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown() and auraIcon.CanStealOrPurge) then\n                Plater.StartGlow(auraIcon, nil, modTable.options)\n                if modTable.config.outerGlow and auraIcon.__PlaterGlowFrame then\n                    auraIcon.__PlaterGlowFrame:ClearAllPoints()\n                    local offset = modTable.config.antsThickness\n                    auraIcon.__PlaterGlowFrame:SetPoint(\"topleft\", auraIcon, \"topleft\", -offset, offset)\n                    auraIcon.__PlaterGlowFrame:SetPoint(\"bottomright\", auraIcon, \"bottomright\", offset, -offset)\n                end\n            else\n                Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n            end\n        end\n    end\n    \n    if buffSpecialGlow then\n        for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n            if auraIcon:IsShown() then\n                if (auraIcon:IsShown() and auraIcon.canStealOrPurge) then\n                    Plater.StartGlow(auraIcon, nil, modTable.options)\n                    if modTable.config.outerGlow and auraIcon.__PlaterGlowFrame then\n                        auraIcon.__PlaterGlowFrame:ClearAllPoints()\n                        local offset = modTable.config.antsThickness\n                        auraIcon.__PlaterGlowFrame:SetPoint(\"topleft\", auraIcon, \"topleft\", -offset, offset)\n                        auraIcon.__PlaterGlowFrame:SetPoint(\"bottomright\", auraIcon, \"bottomright\", offset, -offset)\n                    end\n                else\n                    Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n                end                \n            end\n        end\n    end\n    \nend",
},
["Time"] = 1669863230,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/turHC0a5k/7",
["Icon"] = "INTERFACE\\ICONS\\Ability_Creature_Cursed_04",
["Enabled"] = false,
["Revision"] = 286,
["semver"] = "1.0.6",
["Author"] = "Viashi-Antonidas",
["Desc"] = "Adds a glow to the aura if you can steal or purge the buff.",
["Prio"] = 99,
["version"] = 7,
["PlaterCore"] = 1,
["Name"] = "Steal/Purge Aura Glow",
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "@scriptname Options:",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
1,
0,
0,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the glow ants.",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "Amount of ants in the glow effect.",
["Min"] = 1,
["Key"] = "antsAmount",
["Value"] = 6,
["Name"] = "Ants Amount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Ants move speed",
["Min"] = -1,
["Key"] = "frequency",
["Value"] = 0.25,
["Name"] = "Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "",
["Min"] = 1,
["Key"] = "antsLength",
["Value"] = 4,
["Name"] = "Ants length",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 4,
["Desc"] = "",
["Min"] = 1,
["Key"] = "antsThickness",
["Value"] = 2,
["Name"] = "Ants Thickness",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Key"] = "antsBorder",
["Value"] = false,
["Name"] = "Ants Border",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "outerGlow",
["Value"] = false,
["Name"] = "Outer Glow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
["Health Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if modTable.config.show_health and unitFrame.healthBar:IsVisible()\n    then  \n        local function percentFn(bar)\n            return bar.CurrentHealth /  bar.CurrentHealthMax\n        end\n        \n        envTable.UpdateSpark(unitFrame.healthBar, percentFn)    \n    end\n    \nend\n\n\n",
["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if modTable.config.show_power and unitFrame.powerBar:IsVisible() then\n        \n        local function percentFn(bar)\n            return bar.currentPower /  bar.currentPowerMax\n        end\n        \n        envTable.UpdateSpark(unitFrame.powerBar, percentFn)\n    end\n    \nend\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    function envTable.CreateSpark(bar)\n        if bar.spark then\n            return \n        end\n        \n        local texture = bar:GetStatusBarTexture()\n        local spark = bar:CreateTexture(nil, 'ARTWORK',nil,4)\n        \n        \n        local texturePath = modTable.config.texture\n        texturePath = texturePath:gsub(\"//\", \"/\")\n        texturePath = texturePath:gsub(\"\\\\\", \"/\")\n        \n        spark:SetTexture(texturePath)\n        \n        local r, g, b, a = DetailsFramework:ParseColors (modTable.config.color)\n        spark:SetVertexColor(r, g, b, a)\n        \n        -- ViragDevTool_AddData(bar, 'bar')\n        \n        local w = modTable.config.width\n        local _, h = bar:GetSize()\n        \n        spark:SetSize (w, h)\n        \n        spark:SetBlendMode (\"ADD\")\n        spark:SetPoint (\"LEFT\", texture, \"RIGHT\", -w/2, 0)\n        \n        bar.spark = spark\n        if modTable.config.useBarColor then \n            envTable.UpdateColor(bar)    \n        end\n        spark:Hide()\n    end    \n    \n    function envTable.UpdateSpark(bar, currentPercentFn)\n        if not bar or not bar.spark then\n            return\n        end\n        \n        local percent = currentPercentFn(bar)\n        local upperLimit = modTable.config.upperThreshold / 100\n        local lowerLimit = modTable.config.lowerThreshold / 100\n        if percent > lowerLimit and percent < upperLimit then\n            bar.spark:Show()\n            if modTable.config.useBarColor then \n                envTable.UpdateColor(bar)    \n            end\n        else\n            bar.spark:Hide()\n        end\n    end\n    \n    function envTable.UpdateColor(bar)\n        if not bar or not bar.spark then\n            return\n        end\n        \n        local r, g, b = bar:GetColor()\n        bar.spark:SetVertexColor(r, b, g, modTable.config.alpha)\n    end\n    \n    -- create the sparks\n    if modTable.config.show_health and unitFrame.healthBar then\n        envTable.CreateSpark(unitFrame.healthBar)\n    end\n    \n    if modTable.config.show_power and unitFrame.powerBar then\n        envTable.CreateSpark(unitFrame.powerBar)\n    end\n    \n    -- ViragDevTool_AddData(unitFrame.healthBar, \"healthbar\")\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Hooks"] = {
["Health Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if modTable.config.show_health and unitFrame.healthBar:IsVisible()\n    then  \n        local function percentFn(bar)\n            return bar.CurrentHealth /  bar.CurrentHealthMax\n        end\n        \n        envTable.UpdateSpark(unitFrame.healthBar, percentFn)    \n    end\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    function envTable.CreateSpark(bar)\n        if bar.spark then\n            return \n        end\n        \n        local texture = bar:GetStatusBarTexture()\n        local spark = bar:CreateTexture(nil, 'ARTWORK',nil,4)\n        \n        \n        local texturePath = modTable.config.texture\n        texturePath = texturePath:gsub(\"//\", \"/\")\n        texturePath = texturePath:gsub(\"\\\\\", \"/\")\n        \n        spark:SetTexture(texturePath)\n        \n        local r, g, b, a = DetailsFramework:ParseColors (modTable.config.color)\n        spark:SetVertexColor(r, g, b, a)\n        \n        -- ViragDevTool_AddData(bar, 'bar')\n        \n        local w = modTable.config.width\n        local _, h = bar:GetSize()\n        \n        spark:SetSize (w, h)\n        \n        spark:SetBlendMode (\"ADD\")\n        spark:SetPoint (\"LEFT\", texture, \"RIGHT\", -w/2, 0)\n        \n        bar.spark = spark\n        if modTable.config.useBarColor then \n            envTable.UpdateColor(bar)    \n        end\n        spark:Hide()\n    end    \n    \n    function envTable.UpdateSpark(bar, currentPercentFn)\n        if not bar or not bar.spark then\n            return\n        end\n        \n        local percent = currentPercentFn(bar)\n        local upperLimit = modTable.config.upperThreshold / 100\n        local lowerLimit = modTable.config.lowerThreshold / 100\n        if percent > lowerLimit and percent < upperLimit then\n            bar.spark:Show()\n            if modTable.config.useBarColor then \n                envTable.UpdateColor(bar)    \n            end\n        else\n            bar.spark:Hide()\n        end\n    end\n    \n    function envTable.UpdateColor(bar)\n        if not bar or not bar.spark then\n            return\n        end\n        \n        local r, g, b = bar:GetColor()\n        bar.spark:SetVertexColor(r, b, g, modTable.config.alpha)\n    end\n    \n    -- create the sparks\n    if modTable.config.show_health and unitFrame.healthBar then\n        envTable.CreateSpark(unitFrame.healthBar)\n    end\n    \n    if modTable.config.show_power and unitFrame.powerBar then\n        envTable.CreateSpark(unitFrame.powerBar)\n    end\n    \n    -- ViragDevTool_AddData(unitFrame.healthBar, \"healthbar\")\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if modTable.config.show_power and unitFrame.powerBar:IsVisible() then\n        \n        local function percentFn(bar)\n            return bar.currentPower /  bar.currentPowerMax\n        end\n        \n        envTable.UpdateSpark(unitFrame.powerBar, percentFn)\n    end\n    \nend\n\n\n\n\n",
},
["Time"] = 1724449515,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/Rdp_NkMp9/8",
["Icon"] = 571554,
["Enabled"] = true,
["Revision"] = 661,
["semver"] = "1.0.7",
["Author"] = "Lucyón-Bloodfeather",
["Desc"] = "Adds a spark to the end of the healthbar",
["Prio"] = 99,
["version"] = 8,
["PlaterCore"] = 1,
["Name"] = "Healthbar Spark",
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 5,
["Key"] = "foo",
["Value"] = "Spark options",
["Name"] = "Spark options",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 3,
["Key"] = "texture",
["Value"] = "Interface\\CastingBar\\UI-CastingBar-Spark",
["Name"] = "Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Path to the spark texture",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "color",
["Value"] = {
1,
1,
1,
0.5,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the spark",
},
{
["Type"] = 4,
["Key"] = "useBarColor",
["Value"] = false,
["Name"] = "Use bar color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If this is checked, it will ignore the spark color option and use the healthbar/powerbar color for the spark as well.",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "The alpha to use when Use Bar Color is active",
["Min"] = 0,
["Key"] = "alpha",
["Value"] = 50,
["Name"] = "Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 40,
["Desc"] = "Width of the spark texture",
["Min"] = 0,
["Key"] = "width",
["Value"] = 20,
["Name"] = "Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "Below this percentage the spark will be shown",
["Min"] = 0,
["Key"] = "upperThreshold",
["Value"] = 99,
["Name"] = "Upper threshold",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "Above this percent the spark will be shown",
["Min"] = 0,
["Key"] = "lowerThreshold",
["Value"] = 0,
["Name"] = "Lower threshold",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "show_health",
["Value"] = true,
["Name"] = "Show on health bar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show a spark on healthbars",
},
{
["Type"] = 4,
["Key"] = "show_power",
["Value"] = true,
["Name"] = "Show on power bar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show a spark on power bars",
},
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckForQuest (unitFrame)\n    \nend\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.ExtraQuestMarker22154:Hide()\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckForQuest (unitFrame)\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.ExtraQuestMarker22154) then\n        \n        unitFrame.ExtraQuestMarker22154:Hide()\n        \n    end    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.Texture = [[Interface\\OPTIONSFRAME\\UI-OptionsFrame-NewFeatureIcon]]\n    envTable.Size = 12\n    envTable.Anchor = {\n        side = 6, --right side\n        x = 2,\n        y = 0\n    }\n    \n    if (not unitFrame.ExtraQuestMarker22154) then\n        unitFrame.ExtraQuestMarker22154 = unitFrame:CreateTexture (nil, \"overlay\")\n        local texture = unitFrame.ExtraQuestMarker22154\n        \n        texture:SetTexture (envTable.Texture)\n        texture:SetSize (envTable.Size, envTable.Size)\n        Plater.SetAnchor (texture, envTable.Anchor)\n    end\n    \n    function envTable.CheckForQuest (unitFrame)\n        if (unitFrame.namePlateIsQuestObjective) then\n            unitFrame.ExtraQuestMarker22154:Show()\n            \n        else\n            unitFrame.ExtraQuestMarker22154:Hide()\n            \n        end\n    end\nend\n\n\n\n\n\n\n",
},
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckForQuest (unitFrame)\n    \nend\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.ExtraQuestMarker22154:Hide()\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckForQuest (unitFrame)\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.ExtraQuestMarker22154) then\n        \n        unitFrame.ExtraQuestMarker22154:Hide()\n        \n    end    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.Texture = [[Interface\\OPTIONSFRAME\\UI-OptionsFrame-NewFeatureIcon]]\n    envTable.Size = 12\n    envTable.Anchor = {\n        side = 6, --right side\n        x = 2,\n        y = 0\n    }\n    \n    if (not unitFrame.ExtraQuestMarker22154) then\n        unitFrame.ExtraQuestMarker22154 = unitFrame:CreateTexture (nil, \"overlay\")\n        local texture = unitFrame.ExtraQuestMarker22154\n        \n        texture:SetTexture (envTable.Texture)\n        texture:SetSize (envTable.Size, envTable.Size)\n        Plater.SetAnchor (texture, envTable.Anchor)\n    end\n    \n    function envTable.CheckForQuest (unitFrame)\n        if (unitFrame.namePlateIsQuestObjective) then\n            unitFrame.ExtraQuestMarker22154:Show()\n            \n        else\n            unitFrame.ExtraQuestMarker22154:Hide()\n            \n        end\n    end\nend\n\n\n\n\n\n\n",
},
["Time"] = 1724449518,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/platerquesticon/2",
["Icon"] = "Interface\\OPTIONSFRAME\\UI-OptionsFrame-NewFeatureIcon",
["Enabled"] = true,
["Revision"] = 41,
["semver"] = "1.0.1",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show an extra icon if the unit is a part of a quest you're current doing. You may adjust where the exclamation mark is shown in the Constructor.",
["Prio"] = 99,
["version"] = 2,
["PlaterCore"] = 1,
["Name"] = "Extra Quest Icon",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
["scale"] = true,
["lowScale"] = 0.5,
["midScale"] = 0.75,
},
["HooksTemp"] = {
},
["UID"] = "0x6366dbeb1fda6285",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local npcID = select(6, strsplit(\"-\", UnitGUID(unitId)))\n    if npcID then\n        local prio = modTable[\"npcIDs\"][npcID]\n        if prio then\n            local scale = modTable.config.scale\n            local midScale = modTable.config.midScale\n            local lowScale = modTable.config.lowScale\n            local color = modTable.config.color\n            local midColor = modTable.config.midColor\n            local lowColor = modTable.config.lowColor\n            if prio == 1 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, midScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, midColor)\n                end\n            elseif prio == 2 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, lowScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, lowColor)\n                end\n            end    \n        end\n    end\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local npcID = select(6, strsplit(\"-\", UnitGUID(unitId)))\n    if npcID then\n        local prio = modTable[\"npcIDs\"][npcID]\n        if prio then\n            local scale = modTable.config.scale\n            local midScale = modTable.config.midScale\n            local lowScale = modTable.config.lowScale\n            local color = modTable.config.color\n            local midColor = modTable.config.midColor\n            local lowColor = modTable.config.lowColor\n            if prio == 1 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, midScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, midColor)\n                end\n            elseif prio == 2 then\n                if scale then \n                    Plater.SetNameplateScale(unitFrame, lowScale)\n                end\n                if color then\n                    Plater.SetNameplateColor (unitFrame, lowColor)\n                end\n            end    \n        end\n    end\nend",
["Initialization"] = "function (modTable)\n    \n    -- 1 = mid prio, 2 = low prio\n    \n    modTable[\"npcIDs\"] = {\n        \n        -- The War Within M+ Season 1\n        \n        -- The Dawnbreaker\n        [\"213905\"] = 1, -- Animated Darkness\n        \n        -- Siege of Boralus\n        [\"138002\"] = 1, -- Scrimshaw Gutter\n        [\"133990\"] = 1, -- Scrimshaw Gutter 2\n        [\"136549\"] = 1, -- Ashvane Cannoneer\n        [\"138465\"] = 1, --Ashvane Cannoneer 2\n        [\"129366\"] = 1, --Bilge Rat Buccaneer\n        [\"135241\"] = 1, --Bilge Rat Pillager\n        [\"137511\"] = 1, --Bilge Rat Cutthroat\n        [\"166264\"] = 1, --Spare Parts\n        [\"163622\"] = 1, --Goregrind Bits\n        [\"137516\"] = 1, --Ashvane Invader\n        \n        -- The Necrotic Wake\n        [\"162729\"] = 1, -- Patchwerk Soldier\n        [\"163121\"] = 1, -- Stitched Vanguard\n        [\"165138\"] = 1, -- Blight Bag\n        [\"163122\"] = 1, --Brittlebone Warrior\n        [\"171500\"] = 1, --Shuffling Corpse\n        [\"166079\"] = 1, --Brittlebone Crossbowman\n        [\"168246\"] = 1, --Reanimated Crossbowma\n        [\"166264\"] = 1, --Spare Parts\n        [\"163622\"] = 1, --Goregrind Bits\n        [\"163623\"] = 1, --Rotspew Leftovers\n        \n        -- Grim Batol\n        [\"224152\"] = 1, -- Twilight Brute\n        [\"39388\"] = 1, -- Mutated Hatchling\n        [\"224853\"] = 1, -- Mutated Hatchling 2\n        \n        -- The Stonevault\n        [\"222923\"] = 1, -- Repurposed Loaderbot\n        [\"212764\"] = 1, -- Engine Speaker\n        [\"212405\"] = 1, -- Aspiring Forgehand\n        [\"223844\"] = 1, -- Covert Webmancer <Eye of the Queen\n        [\"224731\"] = 1, --Web Marauder\n        [\"223182\"] = 1, --Web Marauder <Hollows Resident>\n        [\"451239\"] = 1, --Sureki Conscript\n        [\"451238\"] = 1, --Sureki Conscript 2\n        [\"216329\"] = 1, --Congealed Droplet\n        [\"222974\"] = 1, --Hungry Scarab\n        \n        -- City Of Threads\n        [\"220193\"] = 1, -- Sureki Venomblade\n        [\"220199\"] = 1, -- Battle Scarab\n        [\"223181\"] = 1, -- Agile Pursuer <Eye of the Queen>\n        [\"223844\"] = 1, -- Covert Webmancer <Eye of the Queen\n        [\"224731\"] = 1, --Web Marauder\n        [\"223182\"] = 1, --Web Marauder <Hollows Resident>\n        [\"451239\"] = 1, --Sureki Conscript\n        [\"451238\"] = 1, --Sureki Conscript 2\n        [\"216329\"] = 1, --Congealed Droplet\n        [\"222974\"] = 1, --Hungry Scarab\n        \n        -- Mists of Tirna Scithe\n        [\"165111\"] = 1, -- Drust Spliteclaw\n        [\"166301\"] = 1, -- Mist Veilstalker\n        [\"166304\"] = 1, -- Mistveil Stinger\n        [\"167117\"] = 1, --spinemaw larvar\n        [\"167116\"] = 1, --Spinemaw Reaver\n        \n        -- Ara-Kara, City of Echoes\n        [\"216336\"] = 1, -- Ravenous Crawler\n        [\"214840\"] = 1, -- Engored Crawler\n        [\"216341\"] = 1, -- Jabbing Flyer\n        [\"216365\"] = 1, -- Winged Carrier\n        [\"216856\"] = 1, --Black Blood\n        [\"215968\"] = 1, --Black Blood 2\n        [\"216363\"] = 1, --Reinforced Drone\n        \n        \n        -- Dragonflight M+ Season 3\n        \n        -- Dawn Of The Infinite - Murozond\n        [\"205151\"] = 1, --Tyr's Vanguard\n        [\"205366\"] = 1, -- Time-Lost Wakethrasher\n        [\"205727\"] = 1, -- Timelost Rocketeer\n        [\"206074\"] = 1, -- Pendule\n        [\"204030\"] = 1, --Goblin Sapper\n        [\"205265\"] = 1, --Time Displaced Trooper\n        [\"135052\"] = 1, --Blight Toad\n        \n        -- Throne Of The Tides\n        [\"39960\"] = 1, --Murloc Drudge\n        [\"213607\"] = 1, -- Deep Sea Murloc\n        [\"213219\"] = 1, -- Congealed Ooze\n        [\"212778\"] = 1, -- Minion of Ghur'sha\n        [\"40935\"] = 1, -- Gilgoblin Hunter\n        [\"40923\"] = 1, --Unstable Corruption\n        \n        -- Dawn Of The Infinite - Galakron\n        [\"135052\"] = 1, --Blight Toad\n        [\"206068\"] = 1, -- Temporal Fusion\n        [\"206063\"] = 1, -- Temporal Deviation\n        [\"204536\"] = 1, -- Blight Chunk\n        [\"131847\"] = 1, -- Waycrest Reveler\n        [\"136541\"] = 1, --Bile Oozeling\n        [\"131669\"] = 1, --Jagged Hound\n        [\"135052\"] = 1, --Blight Toad\n        \n        -- Waycrest Manor\n        [\"135234\"] = 1, -- Diseased Mastiff\n        [\"134041\"] = 1, -- Infected Peasant\n        [\"135048\"] = 1, -- Gorestained Piglet\n        [\"131847\"] = 1, -- Waycrest Reveler\n        [\"136541\"] = 1, --Bile Oozeling\n        [\"131669\"] = 1, --Jagged Hound\n        [\"135052\"] = 1, --Blight Toad\n        \n        -- Atal'Dazar\n        [\"128435\"] = 1, -- Toxic Saurid\n        [\"127879\"] = 1, -- Shieldbearer of Zul\n        [\"129517\"] = 1, -- Reanimated Raptor\n        \n        -- Black Rook Hold\n        [\"98366\"] = 1, -- Ghostly Retainer\n        [\"98368\"] = 1, -- Ghostly Protector\n        [\"98362\"] = 1, -- Troubled Soul\n        [\"98677\"] = 1, -- Rook Spiderling\n        [\"101839\"] = 1, --Risen Companion\n        [\"98900\"] = 1, --Wyrmtounge Trickster\n        [\"102781\"] = 2, --Fel Bat Pup\n        \n        -- Darkheart Thicket\n        [\"95772\"] = 1, -- Frenzied Nightclaw\n        [\"109908\"] = 1, -- Nightmare Abomination\n        [\"102962\"] = 1, -- Nightmare Abomination | 1st Boss\n        [\"99360\"] = 1, -- Vilethorn Blossom\n        [\"107288\"] = 1, --Vilesthorn Sapling\n        [\"102277\"] = 1, --Deadeye Decoy\n        [\"100526\"] = 1, --Tormented Bloodseeker\n        \n        \n        -- The Everbloom\n        [\"86684\"] = 1, -- Feral lasher\n        [\"212981\"] = 1, -- Hapless Assistant\n        [\"82039\"] =1, --Rockspine Stinger\n        --[\"84767\"] = 1, -- Twisted Abomination\n        --[\"86372\"] = 1, --Melded Beserker\n        [\"81864\"] = 1, --Dreadpetal\n        \n        -- Dragonflight M+ Season 2\n        \n        -- Neltharus\n        [\"193293\"] = 1, -- Qalashi Warden\n        [\"192787\"] = 1, -- Qalashi Spinecrusher\n        [\"189247\"] = 1, -- Tamed Phoenix\n        [\"189227\"] = 1, -- Qalashi Hunter\n        [\"189470\"] = 1, -- Lava Flare\n        [\"189363\"] = 2, --Infected Slasher\n        [\"186284\"] = 1, -- Gutchewer Bear\n        [\"130024\"] = 2, --Soggy Shiprat\n        [\"129526\"] = 2, --Bilge Rat Swabby \n        \n        -- Uldaman: Legacy Of Tyr\n        [\"184134\"] = 1, -- Primalist Ravager\n        [\"184130\"] = 1, -- Earthen Custodian\n        [\"191311\"] = 1, -- Infinte Whelp\n        \n        -- Halls Of Infusion\n        [\"190348\"] = 1, -- Primalist Ravager\n        [\"190923\"] = 1, -- Zephyrling\n        [\"190406\"] = 1, -- Aqualing\n        \n        -- Brackenhide Hollow\n        [\"186206\"] = 1, -- Cruel Bonecrusher\n        [\"185691\"] = 1, -- Vicious Hyena\n        [\"185534\"] = 1, -- Bonebolt Hunter\n        [\"185508\"] = 1, -- Claw Fighter\n        [\"189299\"] = 2, -- Decaying Slime\n        [\"189363\"] = 2, --Infected Slasher\n        [\"186284\"] = 1, -- Gutchewer Bear\n        [\"130024\"] = 2, --Soggy Shiprat\n        [\"129526\"] = 2, --Bilge Rat Swabby \n        \n        -- Vortex Pinical\n        [\"47238\"] = 2, -- Whipping Wind\n        [\"45477\"] = 1, -- Gust Soldier\n        [\"45924\"] = 1, -- Turbulent Squall\n        \n        -- Neltharion's Lair\n        [\"96247\"] = 2, -- Vileshard Crawler\n        [\"113\"] = 1, -- Mightstone Breaker\n        [\"90997\"] = 1, -- Mightstone Breaker 2\n        [\"102404\"] = 1, -- Stoneclaw Grubmaster\n        [\"91002\"] = 1, -- Rotdrool Grabber\n        [\"102430\"] = 2, --Tarspitter Slug\n        \n        -- The Underrot\n        [\"131402\"] = 2, -- Underrot Tick\n        [\"133663\"] = 1, -- Fanatical Headhunter\n        [\"133836\"] = 2, -- Reanimated Guardian\n        [\"270108\"] = 2, -- Rotting Spore\n        \n        -- Freehold\n        [\"128551\"] = 1, -- Irontide Mastiff\n        [\"126928\"] = 1, -- Irontide Corsair\n        [\"126918\"] = 1, -- Irontide Crackshot\n        [\"129788\"] = 1, -- Irontide Bonesaw\n        [\"129550\"] = 1, --Bilge Rat Padfoot\n        [\"129559\"] = 1, --Cutwater Duelist\n        [\"129548\"] = 1, --Blacktooth Brute\n        [\"130024\"] = 1, --Soggy Shiprat\n        [\"129526\"] = 1, --Bilge Rat Swabby\n        \n        -- Dragonflight M+ Season 1\n        \n        -- Temple of the Jade Serpent\n        [\"62358\"] = 2, -- Corrupt Droplet\n        -- [\"200126\"] = 1, -- Fallen Waterspeaker\n        [\"65317\"] = 1, -- Xiang\n        [\"59547\"] = 1, --Jiang\n        [\"58319\"] = 2, --Lesser Sha\n        [\"59598\"] = 2, --Lesser Sha\n        [\"59553\"] = 1, --The Songbird Queen\n        [\"59545\"] = 2, --Golden Beetle\n        [\"59544\"] = 1, --The Nodding Tiger\n        [\"59552\"] = 1, --The Crybaby Hozen\n        [\"200131\"] = 1, --Sha-Touched Guardian\n        [\"57109\"] = 2, --Minion of Doubt\n        [\"200388\"] = 2, --Malformed Sha\n        [\"200387\"] = 1, --Shambling Infester\n        [\"200137\"] = 1, --Depraved Mistweaver\n        \n        --The Nokhud Offensive\n        [\"192803\"] = 2, --War Ohuna\n        [\"195265\"] = 1, --Stormcaller Arynga\n        --[\"194317\"] = 1, --Stormcaller Boroo\n        [\"194315\"] = 1, --Stormcaller Solongo\n        [\"194316\"] = 1, --Stormcaller Zarii\n        [\"192794\"] = 2, --Nokhud Beastmaster\n        --[\"192796\"] = 1, --Nokhud Hornsounder\n        [\"192789\"] = 2, --Nokhud Longbow\n        -- [\"192800\"] = 1, --Nokhud Lancemaster\n        -- [\"191847\"] = 1, --Nokhud Plainstomper\n        --[\"192791\"] = 1, --Nokhud Warspear\n        [\"194898\"] = 2, --Primalist Arcblade\n        [\"194895\"] = 2, --Unstable Squall\n        [\"194896\"] = 2, --Primal Stormshield\n        -- [\"194897\"] = 2, --Stormsurge Totem\n        [\"195579\"] = 2, --Primal Gust\n        [\"195696\"] = 1, --Primalist Thunderbeast\n        [\"195855\"] = 2, --Risen Warrior\n        [\"195875\"] = 2, --Desecrated Bakar\n        [\"196645\"] = 2, --Desecrated Bakar\n        [\"195878\"] = 1, --Ukhel Beastcaller\n        [\"195876\"] = 2, --Descecrated Ohuna\n        --[\"195877\"] = 1, -- Risen Mystic\n        [\"195851\"] = 1, --Ukhel Deathspeaker\n        --[\"195927\"] = 1, --Soulharvester Galtmaa (same)\n        -- [\"195928\"] = 1, --Soulharvester Duuren (same)\n        -- [\"195929\"] = 1, --Soulharvester Tumen (same)\n        -- [\"195930\"] = 1, --Soulharvester Mandakh (same)\n        [\"193553\"] = 2, --Nokhud Warhound\n        [\"193555\"] = 2, --Nokhud Villager (female)\n        [\"186643\"] = 2, --Nokhud Villager (male)\n        [\"193544\"] = 2, --Nokhud Houndsman\n        [\"193565\"] = 1, --Nokhud Defender\n        -- [\"193457\"] = 1, --Balara\n        [\"196263\"] = 2, --Nokhud Neophyte\n        [\"199325\"] = 2, --Nokhud Stormcaller\n        [\"196484\"] = 2, --Nokhud Stormcaller\n        [\"199294\"] = 2, --Nokhud Stormcaster\n        [\"199320\"] = 2, --Nokhud Warspear (RP version)\n        [\"199321\"] = 2, --Nokhud Warspear (RP version)\n        \n        --Court of Stars\n        [\"105703\"] = 2, --Mana Wyrm,\n        -- [\"104251\"] = 1, --Duskwatch Sentry\n        [\"104246\"] = 1, --Duskwatch Guard\n        [\"111563\"] = 1, --Duskwatch Guard\n        [\"105705\"] = 2, --Bound Energy\n        [\"104295\"] = 1, --Blazing Imp\n        -- [\"105715\"] = 1, --Watchful Inquisitor\n        [\"104277\"] = 2, --Legion Hound\n        -- [\"104300\"] = 1, --Shadow Mistress\n        \n        --Shadowmoon Burial Grounds\n        [\"75715\"] = 1, --Reanimated Ritual Bones\n        [\"75451\"] = 2, --Defiled Spirit (non-casting)\n        [\"75506\"] = 1, --Shadowmoon Loyalist\n        [\"77006\"] = 2, --Corpse Skitterling\n        --[\"76446\"] = 2, --Subjugated Enslaver\n        [\"76444\"] = 2, --Subjugated Soul\n        --[\"75979\"] = 1, --Exhumed Spirit\n        --[\"75459\"] = 1, --Plagued Bat\n        \n        --Algeth'ar Academy\n        [\"196642\"] = 2, --Hungry Lasher\n        [\"197398\"] = 2, --Hungry Lasher\n        [\"197219\"] = 1, --Vile Lasher\n        [\"192329\"] = 2, --Territorial Eagle\n        [\"196694\"] = 2, --Arcane Forager\n        [\"196671\"] = 1, --Arcane Ravager\n        [\"196577\"] = 2, --Spellbound Battleaxe\n        [\"197904\"] = 2, --Spellbound Battleaxe\n        [\"196798\"] = 1, --Corrupted Manafiend\n        -- [\"196045\"] = 1, --Corrupted Manafiend\n        [\"196200\"] = 2, --Algeth'ar Echoknight\n        [\"196202\"] = 1, --Spectral Invoker\n        -- [\"196203\"] = 2, --Ethereal Restorer\n        \n        --The Azure Vault\n        [\"191313\"] = 2, --Bubbling Sapling\n        --[\"191164\"] = 1, --Arcane Tender\n        --[\"196115\"] = 1, --Arcane Tender\n        [\"196559\"] = 2, --Volatile Sapling\n        [\"187155\"] = 1, --Rune Seal Keeper\n        [\"187154\"] = 1, --Unstable Curator\n        [\"196116\"] = 1, --Crystal Fury\n        [\"196117\"] = 2, --Crystal Thrasher\n        [\"186740\"] = 2, --Arcane Construct\n        [\"189555\"] = 2, --Arcane Attendant\n        [\"190510\"] = 2, --Vault Guard\n        [\"191739\"] = 1, --Scalebane Liutenant\n        [\"187246\"] = 2, --Nullmagic Hornswog\n        [\"187242\"] = 2, --Tarasek Looter\n        [\"187240\"] = 1, --Draconid Breaker\n        \n        --Halls of Valor\n        [\"97087\"] = 2, --Valajar Champion\n        -- [\"95842\"] = 1, --Valajar Thundercaller\n        [\"96574\"] = 1, --Stormforged Sentinel\n        [\"95832\"] = 1, --Valajar Shieldmaiden\n        -- [\"101639\"] = 2, --Valajar Shieldmaiden\n        --  [\"101637\"] = 1, --Valajar Aspirant\n        -- [\"97197\"] = 1, --Valajar Purifier\n        [\"96640\"] = 1, --Valajar Marksman\n        [\"96611\"] = 2, --Angehoof Bull\n        [\"99922\"] = 2, --Ebonclaw Packmate\n        [\"96608\"] = 1, --Ebonclaw Worg\n        [\"97068\"] = 1, --Storm Drake\n        \n        --Ruby Life Pools\n        [\"188011\"] = 2, --Primal Terrasentry\n        --[\"188067\"] = 2, --Flashfrost Chillweaver\n        [\"188244\"] = 1, --Primal Juggernaut\n        [\"189893\"] = 2, --Infused Whelp\n        [\"187894\"] = 2, --Infused Whelp\n        [\"187897\"] = 1, --Defier Draghar\n        [\"194622\"] = 2, --Scorchling\n        [\"190205\"] = 2, --Scorchling\n        [\"197698\"] = 1, --Thunderhead\n        [\"190034\"] = 1, --Blazebound Destroyer\n        -- [\"190207\"] = 1, --Primalist Cinderweaver\n        [\"197697\"] = 1, --Flamegullet\n        [\"197509\"] = 2, --Primal Thundercloud\n        [\"197982\"] = 2, --Storm Warrior\n        [\"196102\"] = 2, --Conjured Lasher\n        \n        --Misc Dungeons\n        \n        --The Headless Horseman\n        [\"208521\"] = 1, --Pumpkin Soldier\n    }\nend",
},
["Time"] = 1724437836,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
["Enabled"] = true,
["party"] = true,
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/Ru_9FLVjI/15",
["Icon"] = 1041231,
["Enabled"] = true,
["Revision"] = 1965,
["semver"] = "1.0.14",
["Author"] = "Causese-Valdrakken",
["Desc"] = "Allows you to scale a creatures nameplate based on it's importance in the dungeon.",
["Prio"] = 99,
["version"] = 15,
["PlaterCore"] = 1,
["LastHookEdited"] = "Initialization",
["Options"] = {
{
["Type"] = 4,
["Key"] = "scale",
["Value"] = true,
["Name"] = "Enable Scaling",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Allows nameplates to scale based on priority.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set scaling value for mid priority.",
["Min"] = 0,
["Key"] = "midScale",
["Value"] = 0.75,
["Name"] = "Mid prio",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set scaling value for low priority.",
["Min"] = 0,
["Key"] = "lowScale",
["Value"] = 0.5,
["Name"] = "Low prio",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 4,
["Key"] = "color",
["Value"] = false,
["Name"] = "Enable Coloring",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Allows nameplates to be colored based on priority.",
},
{
["Type"] = 1,
["Key"] = "midColor",
["Value"] = {
1,
0.92941182851791,
0,
1,
},
["Name"] = "Mid prio",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Set scaling Set color for mid priority.",
},
{
["Type"] = 1,
["Key"] = "lowColor",
["Value"] = {
0.49803924560547,
0.49803924560547,
0.49803924560547,
1,
},
["Name"] = "Low prio",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Set scaling Set color for low priority.",
},
},
["Name"] = "Priority based scaling || Whiiskeyz",
},
{
["OptionsValues"] = {
["specialColors"] = {
{
"116",
"navy",
},
},
["noKickReadyColor"] = {
1,
0,
0.035294119268656,
1,
},
["kickOutOfRangeColor"] = {
0,
0.41960787773132,
1,
1,
},
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateInterruptId(unitFrame)\nend\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    unitFrame.castBar:UpdateCastColor()\nend",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateInterruptIDs()\n    modTable.updateInterruptId(unitFrame)\nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not envTable.lastUpdateTime or (envTable.lastUpdateTime < modTable.lastUpdateTime) then\n        modTable.setCastColorFunction (unitFrame)\n        envTable.lastUpdateTime = modTable.lastUpdateTime\n    end\nend",
["Initialization"] = "function (modTable)\n    \n    --Disable for classic - for now\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        function modTable.updateInterruptIDs () end\n        function modTable.setCastColorFunction (unitFrame) end\n        function modTable.updateInterruptId (unitFrame) end\n        return\n    end\n    \n    -- settings:\n    local noKickReadyColor = modTable.config.noKickReadyColor or \"blue\"\n    local kickReadyInTimeColor = modTable.config.kickReadyInTimeColor or \"purple\"\n    local kickOutOfRangeColor = modTable.config.kickOutOfRangeColor or \"orange\"\n    local kickOutOfRangeEnabled = modTable.config.kickOutOfRangeEnabled\n    local kickReadyInTimeGraceTime = modTable.config.kickReadyInTimeGraceTime or 0.5 --sec - additional time on the CD to account for reaction, lag, etc\n    local checkCovenant = true\n    local showSpark = modTable.config.showSpark\n    local sparkColor = modTable.config.sparkColor\n    local sparkWidth = modTable.config.sparkWidth\n    local sparkTexture = modTable.config.sparkTexture\n    \n    local specialCastColorsEnabled = modTable.config.specialColorsEnabled\n    local specialColorsData = modTable.config.specialColors\n    local platerCastColorsEnabled = modTable.config.platerCastColorsEnabled\n    local specialColorsForNonInterruptibleEnabled = modTable.config.specialColorsForNonInterruptibleEnabled\n    local specialColors = {}\n    \n    if platerCastColorsEnabled or specialColorsForNonInterruptibleEnabled then\n        for id, colorData in pairs(Plater.db.profile.cast_colors) do\n            if colorData and colorData[1] and colorData[2] then\n                specialColors[tonumber(id) or id] = {Plater:ParseColors(colorData[2])}\n            end\n        end\n    end\n    if specialCastColorsEnabled or specialColorsForNonInterruptibleEnabled then\n        for id, color in pairs(specialColorsData) do\n            specialColors[tonumber(id) or id] = {Plater:ParseColors(color)}\n        end\n    end\n    local useSpecial = specialCastColorsEnabled or platerCastColorsEnabled\n    \n    \n    -- functions:\n    \n    -- determine interrupt spell according to spec\n    function modTable.updateInterruptIDs ()\n        local specId = GetSpecializationInfo(GetSpecialization())\n        modTable.knownSpecID = specId\n        local interruptIDs = {} -- contains: [spellID] = <is player ability>, false meaning pet or weird workarounds needed\n        if Plater.PlayerClass == \"ROGUE\" then\n            interruptIDs[1766] = true\n        elseif Plater.PlayerClass == \"DEATHKNIGHT\" then\n            interruptIDs[47528] = true\n        elseif Plater.PlayerClass == \"DEMONHUNTER\" then\n            interruptIDs[183752] = true\n        elseif Plater.PlayerClass == \"DRUID\" then\n            if specId == 103 or specId == 104 or specId == 105 then\n                interruptIDs[106839] = true -- feral/guardian/resto\n            elseif specId == 102 then\n                interruptIDs[78675] = true -- moonkin\n            end\n        elseif Plater.PlayerClass == \"HUNTER\" then\n            if specId == 255 then\n                interruptIDs[187707] = true -- SV\n            else\n                interruptIDs[147362] = true -- BM/MS\n            end\n        elseif Plater.PlayerClass == \"MONK\" then\n            interruptIDs[116705] = true --WW/BM/MW\n        elseif Plater.PlayerClass == \"PALADIN\" then\n            interruptIDs[96231] = true --prot/ret/holy\n            if specId == 66 then\n                interruptIDs[31935] = true --prot avenger's shield\n                if checkCovenant and IsPlayerSpell(304971) then\n                    interruptIDs[304971] = true --kyrian\n                end\n            end\n        elseif Plater.PlayerClass == \"SHAMAN\" then\n            interruptIDs[57994] = true\n        elseif Plater.PlayerClass == \"WARRIOR\" then\n            interruptIDs[6552] = true\n        elseif Plater.PlayerClass == \"MAGE\" then\n            interruptIDs[2139] = true\n        elseif Plater.PlayerClass == \"PRIEST\" then\n            if specId == 258 then\n                interruptIDs[15487] = true\n            end\n        elseif Plater.PlayerClass == \"WARLOCK\" then\n            interruptIDs[119910] = 119898 --Spell Lock (command ability)\n            if IsPlayerSpell(108503) then --GoSac\n                interruptIDs[132409] = 119898 --sacrificed Spell Lock (command ability)\n            end\n            if IsPlayerSpell(212619) then --Call Felhunter (PVP ability)\n                interruptIDs[212619] = true\n            end\n            if specId == 266 then\n                interruptIDs[119914] = 119898 --demo/fel guard  Axe Toss (command ability)\n            end\n        elseif Plater.PlayerClass == \"EVOKER\" then\n            interruptIDs[351338] = true --quell talent\n        end\n        modTable.interruptSpellIDs = interruptIDs\n    end\n    \n    function modTable.updateInterruptId (unitFrame)\n        local specId = GetSpecializationInfo(GetSpecialization())\n        if not modTable.interruptSpellIDs or modTable.knownSpecID ~= specId then\n            modTable.updateInterruptIDs()\n        end\n        unitFrame.castBar.interruptSpellIDs = modTable.interruptSpellIDs\n    end\n    \n    function modTable.setCastColorFunction (unitFrame)\n        -- create spark (if needed)\n        local castBar = unitFrame.castBar\n        if not castBar.InterruptSpark then\n            castBar.InterruptSpark = castBar:CreateTexture (nil, \"overlay\")\n            castBar.InterruptSpark:SetDrawLayer (\"overlay\", 4)\n            castBar.InterruptSpark:SetBlendMode (\"ADD\")\n            castBar.InterruptSpark:SetHeight(castBar:GetHeight() + 6)\n        end\n        castBar.InterruptSpark:SetTexture(Plater.SparkTextures[sparkTexture])\n        castBar.InterruptSpark:SetVertexColor(Plater:ParseColors(sparkColor))\n        castBar.InterruptSpark:SetWidth(sparkWidth)\n        \n        -- overwrite the color function:\n        castBar.GetCastColor = function (self)\n            \n            self.InterruptSpark:Hide()\n            \n            local interruptCD, interruptReadyInTime = nil, false\n            local interruptDur, interruptStart = 0, 0\n            local spellOutOfRange = false --skip per default\n            if self.interruptSpellIDs and self.unit and UnitCanAttack(\"player\", self.unit) then\n                \n                for interruptSpellId, playerAbility in pairs(self.interruptSpellIDs) do\n                    if playerAbility == true then\n                        \n                        if IsSpellKnown(interruptSpellId) then\n                            local cdStart, cdDur =  GetSpellCooldown(interruptSpellId)\n                            local tmpInterruptCD = (cdStart > 0 and  cdDur - (GetTime() - cdStart)) or 0\n                            if not interruptCD or (tmpInterruptCD < interruptCD) then\n                                interruptCD = tmpInterruptCD\n                                interruptDur = cdDur\n                                interruptStart = cdStart\n                                spellOutOfRange = IsSpellInRange(GetSpellInfo(interruptSpellId), self.unit) == 0\n                            end\n                        end\n                    else\n                        if type(playerAbility) == \"number\" then\n                            -- workaround for spell overrides (on WL command ability, etc.)\n                            if FindSpellOverrideByID(playerAbility) == interruptSpellId then\n                                local cdStart, cdDur =  GetSpellCooldown(interruptSpellId)\n                                local tmpInterruptCD = (cdStart > 0 and  cdDur - (GetTime() - cdStart)) or 0\n                                if not interruptCD or  (tmpInterruptCD < interruptCD) then\n                                    interruptCD = tmpInterruptCD\n                                    interruptDur = cdDur\n                                    interruptStart = cdStart\n                                    spellOutOfRange = IsSpellInRange(GetSpellInfo(interruptSpellId), self.unit) == 0\n                                end \n                            end\n                        end\n                    end\n                end\n                \n                if not interruptCD then\n                    interruptCD = 0\n                end\n                \n                if self.channeling then\n                    interruptReadyInTime = (interruptCD + kickReadyInTimeGraceTime) < self.value\n                else\n                    interruptReadyInTime = (interruptCD + kickReadyInTimeGraceTime) < (self.maxValue - self.value)\n                end\n            end\n            \n            if not interruptCD then\n                interruptCD = 0\n            end\n            \n            if (not self.canInterrupt) then\n                return (specialColorsForNonInterruptibleEnabled and (specialColors[self.spellName] or specialColors[self.spellID])) or self.Colors.NonInterruptible\n                \n            elseif (self.failed) then\n                return self.Colors.Failed\n                \n            elseif (self.interrupted) then\n                return self.Colors.Interrupted\n                \n            elseif (self.finished) then\n                return self.Colors.Finished\n                \n            elseif interruptCD > 0 and interruptReadyInTime then\n                if showSpark then\n                    self.InterruptSpark:Show()\n                    local sparkPosition = (interruptStart + interruptDur - self.spellStartTime + kickReadyInTimeGraceTime)/self.maxValue\n                    if self.channeling then\n                        sparkPosition = 1-sparkPosition\n                    end\n                    self.InterruptSpark:SetPoint (\"center\", self, \"left\", sparkPosition  * self:GetWidth(), 0)\n                end\n                return kickReadyInTimeColor\n                \n            elseif interruptCD > 0 then\n                return noKickReadyColor\n                \n            elseif kickOutOfRangeEnabled and spellOutOfRange then\n                return kickOutOfRangeColor\n                \n            elseif (self.channeling) then\n                return (useSpecial and (specialColors[self.spellName] or specialColors[self.spellID])) or self.Colors.Channeling\n                \n            else\n                return (useSpecial and (specialColors[self.spellName] or specialColors[self.spellID])) or self.Colors.Casting\n                \n            end\n        end\n    end\n    \n    modTable.lastUpdateTime = time()\n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateInterruptId(unitFrame)\n    modTable.setCastColorFunction(unitFrame)\nend",
},
["Time"] = 1718375350,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/jHilJiXiY/40",
["Icon"] = 132219,
["Enabled"] = false,
["Revision"] = 805,
["semver"] = "1.3.0",
["Author"] = "Viash-Thrall",
["Desc"] = "Sets the cast bar color to the specified one if your interrupt spell is not ready. Uses other Plater color settings otherwise.",
["Prio"] = 99,
["version"] = 40,
["PlaterCore"] = 1,
["Name"] = "Interrupt not ready Cast Color",
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 5,
["Key"] = "option8",
["Value"] = "General:",
["Name"] = "General:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "noKickReadyColor",
["Value"] = {
0,
0,
1,
1,
},
["Name"] = "Kick not Ready Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "kickReadyInTimeColor",
["Value"] = {
0.50196078431373,
0,
1,
1,
},
["Name"] = "Kick Ready in Time Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "kickOutOfRangeColor",
["Value"] = {
1,
0.54901960784314,
0,
1,
},
["Name"] = "Kick out of Range Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "kickOutOfRangeEnabled",
["Value"] = false,
["Name"] = "Check 'Out Of Range'",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "",
["Min"] = 0,
["Key"] = "kickReadyInTimeGraceTime",
["Value"] = 0.5,
["Name"] = "Reaction grace Time",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 4,
["Key"] = "specialColorsEnabled",
["Value"] = false,
["Name"] = "Enable special Colors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "platerCastColorsEnabled",
["Value"] = false,
["Name"] = "Enable Plater Cast Colors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "specialColorsForNonInterruptibleEnabled",
["Value"] = false,
["Name"] = "Use Cast Colors for not-interruptible",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Option 10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option7",
["Value"] = "Spark:",
["Name"] = "Spark:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showSpark",
["Value"] = true,
["Name"] = "Show Spark",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0,
1,
0,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "",
["Min"] = 4,
["Key"] = "sparkWidth",
["Value"] = 12,
["Name"] = "Spark Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 8,
["Desc"] = "",
["Min"] = 1,
["Key"] = "sparkTexture",
["Value"] = 5,
["Name"] = "Spark Texure",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 7,
["Key"] = "specialColors",
["Value"] = {
{
"116",
"navy",
},
},
["Name"] = "Special Cast Colors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "",
},
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateTargetName(unitFrame)\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateTargetName(unitFrame)\nend\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateTargetName(unitFrame)\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateTargetName(unitFrame) \nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateTargetName(unitFrame)\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    local ignoreTanks = false\n    local ignoreNonPlayers = false\n    \n    -- text settings:\n    local useClassColors = false\n    local textSize = 8\n    local alpha = 0.8\n    local textColor = \"gold\"\n    local textFont = \"accidental presidency\"\n    local textOutline = \"OUTLINE\"\n    --local textShadowColor = \"green\"\n    \n    local anchor = {\n        side =8, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 0, --x offset\n        y = 45, --y offset\n    };\n    \n    \n    \n    ---- functions\n    local DF = _G [\"DetailsFramework\"]\n    \n    if not unitFrame.CurrentTargetLabel then\n        unitFrame.CurrentTargetLabel = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize);\n        if textFont then\n            DF:SetFontFace (unitFrame.CurrentTargetLabel, textFont)\n        end\n        if textOutline then\n            DF:SetFontOutline (unitFrame.CurrentTargetLabel, textOutline)\n        end\n        if textShadowColor then\n            local r, g, b, a = DF:ParseColors (textShadowColor)\n            DF:SetFontShadow (unitFrame.CurrentTargetLabel, r, g, b, a, 1, -1)\n        end\n        Plater.SetAnchor (unitFrame.CurrentTargetLabel, anchor, unitFrame.healthBar);\n        unitFrame.CurrentTargetLabel:SetAlpha(alpha or 1)\n    end\n    \n    \n    function envTable.updateTargetName(unitFrame)\n        unitFrame.CurrentTargetLabel:SetText(\"\");\n        if not unitFrame.namePlateUnitToken or unitFrame.IsSelf then\n            return\n        end\n        local unitTarget = unitFrame.namePlateUnitToken .. \"target\"\n        local targetName = UnitName (unitTarget)\n        local targetIsPlayer = UnitIsPlayer(unitTarget)\n        local isTank = Plater.GetTanks()[targetName or \"\"]\n        if (targetName and (not (ignoreTanks and isTank)) and (targetIsPlayer or not ignoreNonPlayers)) then\n            local _, class = UnitClass (unitTarget)\n            if not class or not useClassColors then\n                unitFrame.CurrentTargetLabel:SetText(targetName)\n                if textColor then\n                    unitFrame.CurrentTargetLabel:SetTextColor(DF:ParseColors(textColor))\n                end\n            else\n                targetName = Plater.SetTextColorByClass (unitTarget, targetName)\n                unitFrame.CurrentTargetLabel:SetText(targetName)\n            end\n        end\n        unitFrame.CurrentTargetLabel:SetAlpha(alpha or 1)\n    end\n    \nend",
},
["Time"] = 1700503395,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/0x9uZS3OS/12",
["Icon"] = 134331,
["Enabled"] = true,
["Revision"] = 196,
["semver"] = "1.0.11",
["Author"] = "Irashi-Antonidas",
["Desc"] = "Adds the current target as a text to the plate.",
["Prio"] = 99,
["version"] = 12,
["PlaterCore"] = 1,
["Name"] = "Target Name on Plate",
["LastHookEdited"] = "Constructor",
["Options"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 24,
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Author"] = "Izimode-Azralon",
["Options"] = {
},
["Desc"] = "Edit the Constructor script setting the font you want in the FONT = \"\", then /reload.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --added this event just to run the constructor script\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --insert here the font you want to change then /reeload\n    --after the reload, check if the font has changed and disable this script\n    \n    local FONT = \"Accidental Presidency\"\n    \n    local profile = Plater.db.profile\n    local actorTables = profile.plate_config\n    \n    for plateType, plateTable in pairs (actorTables) do\n        \n        plateTable.actorname_text_font = FONT\n        plateTable.spellname_text_font = FONT\n        plateTable.spellpercent_text_font = FONT\n        plateTable.level_text_font = FONT\n        plateTable.percent_text_font = FONT\n        plateTable.big_actortitle_text_font = FONT\n        plateTable.big_actorname_text_font = FONT\n        plateTable.power_percent_text_font = FONT\n        \n    end\n    \n    profile.castbar_target_font = FONT\n    profile.aura_timer_text_font = FONT    \n    profile.aura_stack_font = FONT    \n    \nend\n\n\n",
},
["Prio"] = 99,
["Time"] = 1718311656,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["LastHookEdited"] = "Constructor",
["Name"] = "Change All Fonts",
["Icon"] = 134331,
["PlaterCore"] = 1,
},
{
["OptionsValues"] = {
["specialColors"] = {
{
"116",
"navy",
},
},
["noKickReadyColor"] = {
1,
0,
0.14509804546833,
1,
},
["kickOutOfRangeColor"] = {
0,
0.19607844948769,
1,
1,
},
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateInterruptId(unitFrame)\nend\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    unitFrame.castBar:UpdateCastColor()\nend",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateInterruptIDs()\n    modTable.updateInterruptId(unitFrame)\nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not envTable.lastUpdateTime or (envTable.lastUpdateTime < modTable.lastUpdateTime) then\n        modTable.setCastColorFunction (unitFrame)\n        envTable.lastUpdateTime = modTable.lastUpdateTime\n    end\nend",
["Initialization"] = "function (modTable)\n    \n    -- settings:\n    local noKickReadyColor = modTable.config.noKickReadyColor or \"blue\"\n    local kickReadyInTimeColor = modTable.config.kickReadyInTimeColor or \"purple\"\n    local kickOutOfRangeColor = modTable.config.kickOutOfRangeColor or \"orange\"\n    local kickOutOfRangeEnabled = modTable.config.kickOutOfRangeEnabled\n    local kickReadyInTimeGraceTime = modTable.config.kickReadyInTimeGraceTime or 0.5 --sec - additional time on the CD to account for reaction, lag, etc\n    local checkCovenant = true\n    local enableSigil = false\n    local showSpark = modTable.config.showSpark\n    local sparkColor = modTable.config.sparkColor\n    local sparkWidth = modTable.config.sparkWidth\n    local sparkTexture = modTable.config.sparkTexture\n    local textureChangeNotReady = modTable.config.textureChangeNotReady\n    local defaultTexture\n    local notReadyTexture\n    local LSM = LibStub:GetLibrary (\"LibSharedMedia-3.0\")\n    if not LSM then\n        textureChangeNotReady = false\n    else\n        defaultTexture = LSM:Fetch (\"statusbar\", Plater.db.profile.cast_statusbar_texture)\n        notReadyTexture = LSM:Fetch (\"statusbar\", modTable.config.notReadyTexture) or modTable.config.notReadyTexture ~= \"\" and modTable.config.notReadyTexture or defaultTexture\n    end\n    \n    local specialCastColorsEnabled = modTable.config.specialColorsEnabled\n    local specialColorsData = modTable.config.specialColors\n    local platerCastColorsEnabled = modTable.config.platerCastColorsEnabled\n    local specialColorsForNonInterruptibleEnabled = modTable.config.specialColorsForNonInterruptibleEnabled\n    local specialColors = {}\n    local additionalInterruptColors = {\n        [31935] = {Plater:ParseColors(\"greenyellow\")}, --prot avenger's shield\n        --[375576] = {Plater:ParseColors(\"greenyellow\")}, --paladin kyrian bell\n    }\n    \n    if platerCastColorsEnabled or specialColorsForNonInterruptibleEnabled then\n        for id, colorData in pairs(Plater.db.profile.cast_colors) do\n            if colorData and colorData[1] and colorData[2] then\n                specialColors[tonumber(id) or id] = {Plater:ParseColors(colorData[2])}\n            end\n        end\n    end\n    if specialCastColorsEnabled or specialColorsForNonInterruptibleEnabled then\n        for id, color in pairs(specialColorsData) do\n            specialColors[tonumber(id) or id] = {Plater:ParseColors(color)}\n        end\n    end\n    local useSpecial = specialCastColorsEnabled or platerCastColorsEnabled\n    \n    \n    -- functions:\n    \n    -- determine interrupt spell according to spec\n    function modTable.updateInterruptIDs ()\n        local specId = \"N/A\"\n        if WOW_PROJECT_ID == WOW_PROJECT_MAINLINE then\n            specId = GetSpecializationInfo(GetSpecialization())\n        end\n        modTable.knownSpecID = specId\n        local interruptIDs = {} -- contains: [spellID] = <is player ability>, false meaning pet or weird workarounds needed\n        if WOW_PROJECT_ID == WOW_PROJECT_MAINLINE then\n            if Plater.PlayerClass == \"ROGUE\" then\n                interruptIDs[1766] = true\n            elseif Plater.PlayerClass == \"DEATHKNIGHT\" then\n                interruptIDs[47528] = true\n            elseif Plater.PlayerClass == \"DEMONHUNTER\" then\n                interruptIDs[183752] = true\n                if specId == 581 then\n                    interruptIDs[202137] = enableSigil\n                end\n            elseif Plater.PlayerClass == \"DRUID\" then\n                if specId == 103 or specId == 104 or specId == 105 then\n                    interruptIDs[106839] = true -- feral/guardian/resto\n                elseif specId == 102 then\n                    interruptIDs[78675] = true -- moonkin\n                end\n            elseif Plater.PlayerClass == \"HUNTER\" then\n                if specId == 255 then\n                    interruptIDs[187707] = true -- SV\n                else\n                    interruptIDs[147362] = true -- BM/MS\n                end\n            elseif Plater.PlayerClass == \"MONK\" then\n                interruptIDs[116705] = true --WW/BM/MW\n            elseif Plater.PlayerClass == \"PALADIN\" then\n                interruptIDs[96231] = true --prot/ret/holy\n                if specId == 66 then\n                    interruptIDs[31935] = true --prot avenger's shield\n                    if IsPlayerSpell(375576) then\n                        interruptIDs[375576] = true --Divine Toll\n                    end\n                end\n            elseif Plater.PlayerClass == \"SHAMAN\" then\n                interruptIDs[57994] = true\n            elseif Plater.PlayerClass == \"WARRIOR\" then\n                interruptIDs[6552] = true\n                if modTable.isTalentLearned(90307) then --Disrupting Shout\n                    interruptIDs[90307] = \"386071\"\n                end\n            elseif Plater.PlayerClass == \"MAGE\" then\n                interruptIDs[2139] = true\n            elseif Plater.PlayerClass == \"PRIEST\" then\n                if specId == 258 then\n                    interruptIDs[15487] = true\n                end\n            elseif Plater.PlayerClass == \"WARLOCK\" then\n                interruptIDs[119910] = 119898 --Spell Lock (command ability)\n                if IsPlayerSpell(108503) then --GoSac\n                    interruptIDs[132409] = 119898 --sacrificed Spell Lock (command ability)\n                end\n                if IsPlayerSpell(212619) then --Call Felhunter (PVP ability)\n                    interruptIDs[212619] = true\n                end\n                if specId == 266 then\n                    interruptIDs[119914] = 119898 --demo/fel guard  Axe Toss (command ability)\n                end\n            elseif Plater.PlayerClass == \"EVOKER\" then\n                interruptIDs[351338] = true --quell talent\n            end\n        else -- classic\n            if Plater.PlayerClass == \"ROGUE\" then\n                interruptIDs[1766] = true\n            elseif Plater.PlayerClass == \"DEATHKNIGHT\" then\n                interruptIDs[47528] = true\n                interruptIDs[47476] = true\n            elseif Plater.PlayerClass == \"DRUID\" then\n                interruptIDs[16979] = true\n                interruptIDs[8983] = true\n            elseif Plater.PlayerClass == \"HUNTER\" then\n                interruptIDs[34490] = true\n            elseif Plater.PlayerClass == \"SHAMAN\" then\n                interruptIDs[57994] = true\n            elseif Plater.PlayerClass == \"WARRIOR\" then\n                interruptIDs[6552] = true\n                interruptIDs[72] = true\n            elseif Plater.PlayerClass == \"MAGE\" then\n                interruptIDs[2139] = true\n            elseif Plater.PlayerClass == \"PRIEST\" then\n                interruptIDs[15487] = true\n            elseif Plater.PlayerClass == \"WARLOCK\" then\n                interruptIDs[24259] = true --Spell Lock\n            end\n        end\n        modTable.interruptSpellIDs = interruptIDs\n    end\n    \n    function modTable.updateInterruptId (unitFrame)\n        local specId = \"N/A\"\n        if WOW_PROJECT_ID == WOW_PROJECT_MAINLINE then\n            specId = GetSpecializationInfo(GetSpecialization())\n        end\n        if not modTable.interruptSpellIDs or modTable.knownSpecID ~= specId then\n            modTable.updateInterruptIDs()\n        end\n        unitFrame.castBar.interruptSpellIDs = modTable.interruptSpellIDs\n    end\n    \n    function modTable.isTalentLearned(nodeID)\n        if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then return false end\n        local talentConfig = C_ClassTalents.GetActiveConfigID()\n        local nodeInfo = talentConfig and nodeID and C_Traits.GetNodeInfo(talentConfig, nodeID)\n        return nodeInfo and nodeInfo.entryIDsWithCommittedRanks and nodeInfo.entryIDsWithCommittedRanks[1] and true or false\n    end\n    \n    local function isSpellOrTalentKnown(spellId)\n        if IsSpellKnown(spellId) then\n            return true\n        elseif modTable.isTalentLearned(spellId) then\n            return true\n        end\n    end\n    \n    local function setCastBarTexture(castBar, notReady)\n        if textureChangeNotReady then\n            local texture = notReady and notReadyTexture or defaultTexture\n            if castBar.curTextureNotInterrupt ~= texture then\n                castBar:SetStatusBarTexture (texture)\n                castBar.curTextureNotInterrupt = texture\n            end\n        end\n    end\n    \n    local GetSpellCooldown = GetSpellCooldown or function(spellID)\n        local spellCooldownInfo = C_Spell.GetSpellCooldown(spellID)\n        if spellCooldownInfo then\n            return spellCooldownInfo.startTime, spellCooldownInfo.duration, spellCooldownInfo.isEnabled, spellCooldownInfo.modRate\n        end\n    end\n    local IsSpellInRange = IsSpellInRange or C_Spell.IsSpellInRange\n    function modTable.setCastColorFunction (unitFrame)\n        -- create spark (if needed)\n        local castBar = unitFrame.castBar\n        if not castBar.InterruptSpark then\n            castBar.InterruptSpark = castBar:CreateTexture (nil, \"overlay\")\n            castBar.InterruptSpark:SetDrawLayer (\"overlay\", 4)\n            castBar.InterruptSpark:SetBlendMode (\"ADD\")\n            castBar.InterruptSpark:SetHeight(castBar:GetHeight() + 6)\n        end\n        castBar.InterruptSpark:SetTexture(Plater.SparkTextures[sparkTexture])\n        castBar.InterruptSpark:SetVertexColor(Plater:ParseColors(sparkColor))\n        castBar.InterruptSpark:SetWidth(sparkWidth)\n        \n        if not LSM then\n            textureChangeNotReady = false\n        else\n            defaultTexture = LSM:Fetch (\"statusbar\", Plater.db.profile.cast_statusbar_texture)\n            notReadyTexture = LSM:Fetch (\"statusbar\", modTable.config.notReadyTexture) or modTable.config.notReadyTexture ~= \"\" and modTable.config.notReadyTexture or defaultTexture\n        end\n        \n        -- overwrite the color function:\n        castBar.GetCastColor = function (self)\n            \n            self.InterruptSpark:Hide()\n            setCastBarTexture(self)\n            \n            local interruptCD, interruptReadyInTime = nil, false\n            local interruptDur, interruptStart = 0, 0\n            local usedInterruptSpellId\n            local spellOutOfRange = false --skip per default\n            if self.interruptSpellIDs and self.unit and UnitCanAttack(\"player\", self.unit) then\n                \n                for interruptSpellId, playerAbility in pairs(self.interruptSpellIDs) do\n                    if playerAbility == true or type(playerAbility) == \"string\"  then\n                        if isSpellOrTalentKnown(interruptSpellId) then\n                            interruptSpellId = tonumber(playerAbility) or interruptSpellId\n                            local cdStart, cdDur =  GetSpellCooldown(interruptSpellId)\n                            local tmpInterruptCD = (cdStart > 0 and  cdDur - (GetTime() - cdStart)) or 0\n                            --print(interruptSpellId, cdStart, cdDur, tmpInterruptCD)\n                            if not interruptCD or (tmpInterruptCD < interruptCD) then\n                                interruptCD = tmpInterruptCD\n                                interruptDur = cdDur\n                                interruptStart = cdStart\n                                spellOutOfRange = kickOutOfRangeEnabled and IsSpellInRange(GetSpellInfo(interruptSpellId), self.unit) == 0\n                            elseif tmpInterruptCD == 0 then\n                                if additionalInterruptColors[interruptSpellId] or not usedInterruptSpellId then\n                                    usedInterruptSpellId = interruptSpellId\n                                elseif not additionalInterruptColors[interruptSpellId] and additionalInterruptColors[usedInterruptSpellId] then\n                                    usedInterruptSpellId = interruptSpellId\n                                end\n                            end\n                        end\n                    else\n                        if type(playerAbility) == \"number\" then\n                            -- workaround for spell overrides (on WL command ability, etc.)\n                            if FindSpellOverrideByID(playerAbility) == interruptSpellId then\n                                local cdStart, cdDur =  GetSpellCooldown(interruptSpellId)\n                                local tmpInterruptCD = (cdStart > 0 and  cdDur - (GetTime() - cdStart)) or 0\n                                if not interruptCD or  (tmpInterruptCD < interruptCD) then\n                                    interruptCD = tmpInterruptCD\n                                    interruptDur = cdDur\n                                    interruptStart = cdStart\n                                    spellOutOfRange = kickOutOfRangeEnabled and IsSpellInRange(GetSpellInfo(interruptSpellId), self.unit) == 0\n                                elseif tmpInterruptCD == 0 then\n                                    if additionalInterruptColors[interruptSpellId] or not usedInterruptSpellId then\n                                        usedInterruptSpellId = interruptSpellId\n                                    elseif not additionalInterruptColors[interruptSpellId] and additionalInterruptColors[usedInterruptSpellId] then\n                                        usedInterruptSpellId = interruptSpellId\n                                    end\n                                end \n                            end\n                        end\n                    end\n                end\n                \n                if not interruptCD then\n                    interruptCD = 0\n                end\n                \n                if self.channeling then\n                    interruptReadyInTime = (interruptCD + kickReadyInTimeGraceTime) < self.value\n                else\n                    interruptReadyInTime = (interruptCD + kickReadyInTimeGraceTime) < (self.maxValue - self.value)\n                end\n            end\n            \n            if not interruptCD then\n                interruptCD = 0\n            end\n            \n            if (not self.canInterrupt) then\n                return (specialColorsForNonInterruptibleEnabled and (specialColors[self.spellName] or specialColors[self.spellID])) or self.Colors.NonInterruptible\n                \n            elseif (self.failed) then\n                return self.Colors.Failed\n                \n            elseif (self.interrupted) then\n                return self.Colors.Interrupted\n                \n            elseif (self.finished) then\n                return self.Colors.Finished\n                \n            elseif interruptCD > 0 and interruptReadyInTime then\n                if showSpark then\n                    self.InterruptSpark:Show()\n                    local sparkPosition = (interruptStart + interruptDur - self.spellStartTime + kickReadyInTimeGraceTime)/self.maxValue\n                    if self.channeling then\n                        sparkPosition = 1-sparkPosition\n                    end\n                    self.InterruptSpark:SetPoint (\"center\", self, \"left\", sparkPosition  * self:GetWidth(), 0)\n                end\n                setCastBarTexture(self, true)\n                return additionalInterruptColors[usedInterruptSpellId] or kickReadyInTimeColor\n                \n            elseif interruptCD > 0 then\n                setCastBarTexture(self, true)\n                return noKickReadyColor\n                \n            elseif kickOutOfRangeEnabled and spellOutOfRange then\n                return kickOutOfRangeColor\n                \n            elseif (self.channeling) then\n                return (useSpecial and (specialColors[self.spellName] or specialColors[self.spellID])) or self.Colors.Channeling\n                \n            else\n                return (useSpecial and (specialColors[self.spellName] or specialColors[self.spellID])) or self.Colors.Casting\n                \n            end\n        end\n    end\n    \n    modTable.lastUpdateTime = time()\n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateInterruptId(unitFrame)\n    modTable.setCastColorFunction(unitFrame)\nend",
},
["Time"] = 1724437635,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/jHilJiXiY/51",
["Icon"] = 132219,
["Enabled"] = true,
["Revision"] = 1007,
["semver"] = "1.3.11",
["Author"] = "Viash-Thrall",
["Desc"] = "Sets the cast bar color to the specified one if your interrupt spell is not ready. Uses other Plater color settings otherwise.",
["Prio"] = 99,
["version"] = 51,
["PlaterCore"] = 1,
["Name"] = "Interrupt not ready Cast Color",
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 5,
["Key"] = "option8",
["Value"] = "General:",
["Name"] = "General:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "noKickReadyColor",
["Value"] = {
0,
0,
1,
1,
},
["Name"] = "Kick not Ready Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "kickReadyInTimeColor",
["Value"] = {
0.50196078431373,
0,
1,
1,
},
["Name"] = "Kick Ready in Time Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "kickOutOfRangeColor",
["Value"] = {
1,
0.54901960784314,
0,
1,
},
["Name"] = "Kick out of Range Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "kickOutOfRangeEnabled",
["Value"] = false,
["Name"] = "Check 'Out Of Range'",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "",
["Min"] = 0,
["Key"] = "kickReadyInTimeGraceTime",
["Value"] = 0.5,
["Name"] = "Reaction grace Time",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 4,
["Key"] = "specialColorsEnabled",
["Value"] = false,
["Name"] = "Enable special Colors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "platerCastColorsEnabled",
["Value"] = false,
["Name"] = "Enable Plater Cast Colors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "specialColorsForNonInterruptibleEnabled",
["Value"] = false,
["Name"] = "Use Cast Colors for not-interruptible",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "textureChangeNotReady",
["Value"] = false,
["Name"] = "Change Texture for \"interrupt not ready\"",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 3,
["Key"] = "notReadyTexture",
["Value"] = "Details Flat",
["Name"] = "Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Use either a texture name (LSM) or texture path",
},
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Option 10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option7",
["Value"] = "Spark:",
["Name"] = "Spark:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showSpark",
["Value"] = true,
["Name"] = "Show Spark",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0,
1,
0,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "",
["Min"] = 4,
["Key"] = "sparkWidth",
["Value"] = 12,
["Name"] = "Spark Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 8,
["Desc"] = "",
["Min"] = 1,
["Key"] = "sparkTexture",
["Value"] = 5,
["Name"] = "Spark Texure",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 7,
["Key"] = "specialColors",
["Value"] = {
{
"116",
"navy",
},
},
["Name"] = "Special Cast Colors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "",
},
},
},
},
["last_news_time"] = 1669801147,
["cast_statusbar_fadeout_time"] = 0.48999997973442,
["aura_timer_decimals"] = true,
["aura_width"] = 22,
["aura_height2"] = 14,
["ghost_auras"] = {
["auras"] = {
["WARLOCK"] = {
{
[980] = true,
[172] = true,
},
},
["PRIEST"] = {
[3] = {
[589] = true,
[34914] = true,
},
},
},
},
["script_data_trash"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1724197831,
["NpcNames"] = {
},
["Options"] = {
},
["url"] = "",
["Icon"] = 610472,
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["Revision"] = 83,
["semver"] = "",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Name"] = "Aura is Shield [P]",
["Prio"] = 99,
["SpellIds"] = {
343470,
423228,
},
["PlaterCore"] = 1,
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["__TrashAt"] = 1724932337,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    for i = 1, 40 do\n        local auraInfo = C_UnitAuras.GetBuffDataByIndex(i)\n        if (auraInfo) then\n            local spellId = auraInfo.spellId\n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        else\n            break\n        end\n    end\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1724881991,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 82,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["NpcNames"] = {
},
["Name"] = "Aura is Shield [P]",
["SpellIds"] = {
343470,
423228,
},
["PlaterCore"] = 1,
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["__TrashAt"] = 1725052822,
},
},
["cast_colors"] = {
[215433] = {
true,
"white",
"",
},
[373803] = {
true,
"white",
"",
},
[192288] = {
true,
"white",
"",
},
[397914] = {
true,
"white",
"",
},
[198934] = {
true,
"white",
},
[392451] = {
true,
"white",
"",
},
[371984] = {
true,
"white",
"",
},
[392576] = {
true,
"white",
"",
},
[198962] = {
true,
"white",
"",
},
[192563] = {
true,
"white",
"",
},
[114646] = {
true,
"white",
"",
},
[396018] = {
true,
"white",
"",
},
[372683] = {
true,
"white",
"",
},
[397801] = {
true,
"white",
"",
},
[396073] = {
true,
"white",
"",
},
[373017] = {
true,
"white",
"",
},
[198959] = {
true,
"white",
"",
},
[198595] = {
true,
"white",
"",
},
[198750] = {
true,
"white",
"",
},
[392640] = {
true,
"white",
"",
},
[397888] = {
true,
"white",
"",
},
[384194] = {
true,
"white",
"",
},
[199726] = {
true,
"white",
"",
},
},
["pet_width_scale"] = 0.99999994039536,
["ui_parent_cast_strata"] = "MEDIUM",
["quick_hide"] = true,
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
},
["enable_masque_support"] = true,
["extra_icon_anchor"] = {
["x"] = 4,
},
["range_check_alpha"] = 0.7999999523162842,
["click_space"] = {
115,
},
["extra_icon_auras"] = {
277242,
},
["aura2_grow_direction"] = 1,
["ui_parent_cast_level"] = 10,
["semver"] = "1.0.55",
["ui_parent_buff2_level"] = 10,
["range_check_in_range_or_target_alpha_friendlies"] = 0.89999997615814,
["aura_frame2_anchor"] = {
["y"] = 15.899993896484,
["side"] = 7,
},
["extra_icon_show_enrage"] = true,
["aura_alpha"] = 0.84999996423721,
["cast_statusbar_spark_color"] = {
0.98823535442352,
[3] = 0.94117653369904,
},
["aura_cooldown_edge_texture"] = "Interface\\GLUES\\loadingOld",
["castbar_icon_x_offset"] = 1,
["indicator_friendlyfaction"] = true,
["pet_height_scale"] = 0.99999994039536,
["aura_x_offset"] = 0,
["first_run3"] = true,
["ui_parent_scale_tune"] = 1.5,
["ui_parent_buff_strata"] = "LOW",
["healthbar_framelevel"] = 0,
["aura_consolidate"] = true,
["ui_parent_buff_level"] = 10,
["health_statusbar_bgtexture"] = "PlaterBackground",
["indicator_raidmark_anchor"] = {
["x"] = -40,
},
["extra_icon_width"] = 22,
["tank"] = {
["colors"] = {
["pulling_from_tank"] = {
0.8117647767067,
0.63921570777893,
},
["anothertank"] = {
0.72941176470588,
0.91764705882353,
},
["aggro"] = {
0.50196081399918,
0.50196081399918,
},
["noaggro"] = {
nil,
0.047058828175068,
},
["nocombat"] = {
0.50588238239288,
0.0039215688593686,
},
["pulling"] = {
0.93333339691162,
[3] = 0.75294125080109,
},
},
},
["health_statusbar_texture"] = "Minimalist",
["hook_auto_imported"] = {
["Color Automation"] = 1,
["Blockade Encounter"] = 1,
["Cast Bar Icon Config"] = 2,
["Hide Neutral Units"] = 1,
["Aura Reorder"] = 3,
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Bwonsamdi Reaping"] = 1,
["Jaina Encounter"] = 6,
["Execute Range"] = 1,
["Attacking Specific Unit"] = 2,
["Combo Points"] = 6,
["Targetting Alpha"] = 3,
["Target Color"] = 3,
["Extra Border"] = 2,
["Monk Statue"] = 2,
},
["castbar_target_show"] = true,
["cast_statusbar_color"] = {
nil,
0.85882359743118,
nil,
0.96000000089407,
},
["update_throttle"] = 0.099999994039536,
["minor_width_scale"] = 0.99999994039536,
["castbar_target_text_size"] = 8,
["aura_frame1_anchor"] = {
["y"] = 15.899993896484,
["side"] = 1,
},
["tocversion"] = 110002,
["aura_timer_text_font"] = "Accidental Presidency",
["not_affecting_combat_alpha"] = 0.7999999523162842,
["aura_height"] = 14,
["use_health_animation"] = true,
["cast_statusbar_bgtexture"] = "BantoBar",
["aura2_x_offset"] = 0,
["target_indicator"] = "NONE",
["target_shady_alpha"] = 0.59999996423721,
["usePlaterWidget"] = false,
["saved_cvars"] = {
["nameplateShowOnlyNames"] = "1",
["nameplateOverlapV"] = "2.2400000095367",
["ShowNamePlateLoseAggroFlash"] = "1",
["nameplateShowEnemyMinus"] = "1",
["NamePlateClassificationScale"] = "1",
["nameplateShowFriendlyTotems"] = "0",
["nameplatePersonalHideDelaySeconds"] = "0.2",
["nameplateShowDebuffsOnFriendly"] = "0",
["nameplatePersonalShowInCombat"] = "1",
["nameplatePersonalShowWithTarget"] = "0",
["nameplateMinAlpha"] = "0.90135484",
["nameplateResourceOnTarget"] = "0",
["nameplateLargerScale"] = "1.0999999046326",
["nameplateMaxDistance"] = "100",
["nameplateShowFriendlyMinions"] = "0",
["nameplateSelfScale"] = "1",
["nameplateTargetBehindMaxDistance"] = "30",
["SoftTargetInteract"] = "0",
["nameplateShowEnemies"] = "1",
["NamePlateVerticalScale"] = "2.7",
["nameplateSelectedAlpha"] = "1",
["nameplateShowSelf"] = "0",
["nameplatePersonalShowAlways"] = "1",
["nameplateMotionSpeed"] = "0.05",
["nameplateGlobalScale"] = "1",
["nameplateShowEnemyMinions"] = "0",
["nameplateShowEnemyPets"] = "1",
["nameplateShowFriendlyNPCs"] = "1",
["nameplateSelectedScale"] = "1.15",
["nameplateShowFriendlyPets"] = "0",
["nameplateShowFriends"] = "0",
["nameplateMinAlphaDistance"] = "-158489.31924611",
["nameplateMotion"] = "1",
["nameplateShowEnemyGuardians"] = "1",
["nameplateMinScale"] = "1",
["nameplateOccludedAlphaMult"] = "1",
["nameplateOtherTopInset"] = "0.085",
["NamePlateHorizontalScale"] = "1",
["nameplateSelfBottomInset"] = "0.33",
["nameplateShowEnemyTotems"] = "1",
["nameplateShowFriendlyGuardians"] = "0",
["nameplateSelfAlpha"] = "1",
["nameplateSelfTopInset"] = "0.57687740325928",
["ShowClassColorInNameplate"] = "1",
["nameplateShowAll"] = "1",
["SoftTargetIconGameObject"] = "0",
},
["cast_statusbar_spark_width"] = 25,
["cast_statusbar_spark_offset"] = -13,
["login_counter"] = 2723,
["extra_icon_caster_name"] = false,
["aura_cooldown_show_swipe"] = false,
["npc_colors"] = {
[40788] = {
true,
false,
"mediumpurple",
},
[169421] = {
true,
false,
"gold",
},
[190403] = {
true,
false,
"mediumpurple",
},
[195265] = {
true,
false,
"mediumpurple",
},
[100991] = {
true,
false,
"fuchsia",
},
[190404] = {
true,
false,
"mediumpurple",
},
[190405] = {
true,
false,
"mediumpurple",
},
[133345] = {
true,
false,
"goldenrod",
},
[185032] = {
true,
false,
"mediumpurple",
},
[210108] = {
true,
false,
"mediumpurple",
},
[213179] = {
true,
false,
"mediumpurple",
},
[164563] = {
true,
false,
"blue",
},
[210109] = {
true,
false,
"mediumpurple",
},
[169425] = {
true,
false,
"gold",
},
[190407] = {
true,
false,
"deepskyblue",
},
[168658] = {
true,
false,
"fuchsia",
},
[165076] = {
true,
false,
"blue",
},
[169426] = {
true,
false,
"gold",
},
[200387] = {
true,
false,
"mediumpurple",
},
[180429] = {
true,
false,
"mediumpurple",
},
[217531] = {
true,
false,
"mediumpurple",
},
[98691] = {
true,
false,
"blue",
},
[169428] = {
true,
false,
"gold",
},
[180431] = {
true,
false,
"deepskyblue",
},
[217533] = {
true,
false,
"mediumpurple",
},
[164567] = {
true,
false,
"deepskyblue",
},
[169429] = {
true,
false,
"gold",
},
[141283] = {
true,
false,
"navajowhite",
},
[180432] = {
true,
false,
"blue",
},
[169430] = {
true,
false,
"gold",
},
[212673] = {
true,
false,
"mediumpurple",
},
[141284] = {
true,
false,
"gold",
},
[180433] = {
true,
false,
"fuchsia",
},
[131817] = {
false,
false,
"magenta",
},
[102019] = {
true,
false,
"fuchsia",
},
[189901] = {
true,
false,
"mediumpurple",
},
[141285] = {
true,
false,
"lightgreen",
},
[131818] = {
false,
false,
"plum",
},
[213954] = {
true,
false,
"mediumpurple",
},
[228539] = {
true,
false,
"deepskyblue",
},
[196043] = {
true,
false,
"fuchsia",
},
[168153] = {
true,
false,
"fuchsia",
},
[131819] = {
true,
false,
"deepskyblue",
},
[196044] = {
true,
false,
"fuchsia",
},
[100485] = {
true,
false,
"deepskyblue",
},
[176598] = {
true,
false,
"blue",
},
[102788] = {
true,
false,
"mediumpurple",
},
[129527] = {
true,
false,
"deepskyblue",
},
[196045] = {
true,
false,
"deepskyblue",
},
[101637] = {
true,
false,
"mediumpurple",
},
[175576] = {
true,
false,
"fuchsia",
},
[184020] = {
true,
false,
"mediumpurple",
},
[39960] = {
true,
false,
"WARRIOR",
},
[100486] = {
true,
false,
"fuchsia",
},
[44566] = {
true,
false,
"mediumpurple",
},
[178392] = {
true,
false,
"fuchsia",
},
[131823] = {
true,
false,
"mediumpurple",
},
[224962] = {
true,
false,
"fuchsia",
},
[98696] = {
true,
false,
"mediumpurple",
},
[129529] = {
true,
false,
"fuchsia",
},
[113537] = {
true,
false,
"mediumpurple",
},
[131825] = {
true,
false,
"mediumpurple",
},
[178139] = {
true,
false,
"mediumpurple",
},
[133361] = {
true,
false,
"fuchsia",
},
[164578] = {
true,
false,
"mediumpurple",
},
[150250] = {
true,
false,
"deepskyblue",
},
[178141] = {
true,
false,
"blue",
},
[137713] = {
false,
false,
"paleturquoise",
},
[150251] = {
true,
false,
"blue",
},
[39450] = {
true,
false,
"maroon",
},
[137458] = {
true,
false,
"deepskyblue",
},
[205265] = {
true,
false,
"WARRIOR",
},
[126845] = {
true,
false,
"fuchsia",
},
[168420] = {
true,
false,
"blue",
},
[150253] = {
true,
false,
"mediumpurple",
},
[168932] = {
true,
false,
"gold",
},
[82579] = {
true,
false,
"deepskyblue",
},
[129788] = {
true,
false,
"fuchsia",
},
[190426] = {
true,
false,
"fuchsia",
},
[137716] = {
false,
false,
"blue",
},
[177889] = {
true,
false,
"fuchsia",
},
[168934] = {
true,
false,
"fuchsia",
},
[217039] = {
true,
false,
"mediumpurple",
},
[45912] = {
true,
false,
"deepskyblue",
},
[177891] = {
true,
false,
"mediumpurple",
},
[223181] = {
true,
false,
"WARRIOR",
},
[86547] = {
true,
false,
"blue",
},
[177892] = {
true,
false,
"blue",
},
[223182] = {
true,
false,
"deepskyblue",
},
[168425] = {
true,
false,
"fuchsia",
},
[197595] = {
true,
false,
"mediumpurple",
},
[40923] = {
true,
false,
"WARRIOR",
},
[94224] = {
true,
false,
"fuchsia",
},
[136186] = {
true,
false,
"honeydew",
},
[39388] = {
true,
false,
"WARRIOR",
},
[172265] = {
true,
false,
"deepskyblue",
},
[160495] = {
true,
false,
"deepskyblue",
},
[218324] = {
true,
false,
"mediumpurple",
},
[192481] = {
true,
false,
"fuchsia",
},
[81432] = {
true,
false,
"deepskyblue",
},
[171500] = {
true,
false,
"WARRIOR",
},
[196576] = {
true,
false,
"fuchsia",
},
[127106] = {
false,
false,
"peru",
},
[168942] = {
true,
false,
"blue",
},
[165872] = {
true,
false,
"fuchsia",
},
[131585] = {
true,
false,
"blue",
},
[134144] = {
true,
false,
"lightgreen",
},
[163058] = {
true,
false,
"blue",
},
[102287] = {
true,
false,
"mediumpurple",
},
[131586] = {
true,
false,
"mediumpurple",
},
[205790] = {
true,
false,
"WARRIOR",
},
[101008] = {
true,
false,
"fuchsia",
},
[135169] = {
true,
false,
"fuchsia",
},
[131587] = {
true,
false,
"deepskyblue",
},
[191206] = {
true,
false,
"deepskyblue",
},
[40925] = {
true,
false,
"mediumpurple",
},
[98706] = {
true,
false,
"mediumpurple",
},
[86552] = {
true,
false,
"deepskyblue",
},
[165108] = {
true,
false,
"fuchsia",
},
[162038] = {
true,
false,
"mediumpurple",
},
[130435] = {
false,
false,
"magenta",
},
[45915] = {
true,
false,
"fuchsia",
},
[81819] = {
true,
false,
"deepskyblue",
},
[184300] = {
true,
false,
"mediumpurple",
},
[162039] = {
true,
false,
"deepskyblue",
},
[170483] = {
true,
false,
"fuchsia",
},
[76446] = {
true,
false,
"blue",
},
[184301] = {
true,
false,
"deepskyblue",
},
[162040] = {
true,
false,
"fuchsia",
},
[130436] = {
false,
false,
"aqua",
},
[134150] = {
true,
false,
"navajowhite",
},
[114316] = {
true,
false,
"deepskyblue",
},
[81820] = {
true,
false,
"fuchsia",
},
[213216] = {
true,
false,
"mediumpurple",
},
[173044] = {
true,
false,
"fuchsia",
},
[224731] = {
true,
false,
"deepskyblue",
},
[139269] = {
true,
false,
"deepskyblue",
},
[137478] = {
true,
false,
"gold",
},
[156157] = {
true,
false,
"blue",
},
[131849] = {
true,
false,
"blue",
},
[95766] = {
true,
false,
"blue",
},
[114317] = {
true,
false,
"deepskyblue",
},
[204262] = {
true,
false,
"fuchsia",
},
[127111] = {
true,
false,
"deepskyblue",
},
[131850] = {
true,
false,
"fuchsia",
},
[138247] = {
true,
false,
"WARRIOR",
},
[98965] = {
true,
false,
"mediumpurple",
},
[175861] = {
true,
false,
"fuchsia",
},
[178165] = {
true,
false,
"fuchsia",
},
[82590] = {
true,
false,
"blue",
},
[212453] = {
true,
false,
"fuchsia",
},
[39392] = {
true,
false,
"mediumpurple",
},
[170490] = {
true,
false,
"deepskyblue",
},
[164861] = {
true,
false,
"blue",
},
[114319] = {
true,
false,
"blue",
},
[162047] = {
true,
false,
"mediumpurple",
},
[96664] = {
true,
false,
"blue",
},
[134157] = {
false,
false,
"peru",
},
[216293] = {
true,
false,
"deepskyblue",
},
[129928] = {
true,
false,
"deepskyblue",
},
[137484] = {
true,
false,
"gold",
},
[95769] = {
true,
false,
"fuchsia",
},
[171772] = {
true,
false,
"blue",
},
[155908] = {
true,
false,
"fuchsia",
},
[174843] = {
true,
false,
"mediumpurple",
},
[205804] = {
true,
false,
"mediumpurple",
},
[84767] = {
true,
false,
"mediumpurple",
},
[137486] = {
true,
false,
"gold",
},
[138254] = {
true,
false,
"WARRIOR",
},
[128650] = {
true,
false,
"mediumpurple",
},
[214761] = {
true,
false,
"mediumpurple",
},
[178171] = {
true,
false,
"fuchsia",
},
[180474] = {
true,
false,
"fuchsia",
},
[131858] = {
true,
false,
"blue",
},
[138255] = {
true,
false,
"deepskyblue",
},
[210156] = {
true,
false,
"mediumpurple",
},
[214762] = {
true,
false,
"deepskyblue",
},
[182778] = {
true,
false,
"fuchsia",
},
[95771] = {
true,
false,
"deepskyblue",
},
[128651] = {
true,
false,
"mediumpurple",
},
[129547] = {
true,
false,
"deepskyblue",
},
[98970] = {
true,
false,
"mediumpurple",
},
[187897] = {
true,
false,
"mediumpurple",
},
[138002] = {
true,
false,
"WARRIOR",
},
[45919] = {
true,
false,
"mediumpurple",
},
[186107] = {
true,
false,
"fuchsia",
},
[129548] = {
false,
false,
"deepskyblue",
},
[206066] = {
true,
false,
"fuchsia",
},
[127757] = {
true,
false,
"mediumpurple",
},
[131863] = {
true,
false,
"mediumpurple",
},
[162057] = {
true,
false,
"mediumpurple",
},
[131864] = {
true,
false,
"mediumpurple",
},
[136214] = {
false,
false,
"plum",
},
[206068] = {
true,
false,
"WARRIOR",
},
[107288] = {
true,
false,
"deepskyblue",
},
[80805] = {
true,
false,
"mediumpurple",
},
[184319] = {
true,
false,
"fuchsia",
},
[133912] = {
true,
false,
"fuchsia",
},
[164873] = {
true,
false,
"fuchsia",
},
[82597] = {
true,
false,
"fuchsia",
},
[190206] = {
true,
false,
"blue",
},
[191230] = {
true,
false,
"fuchsia",
},
[190207] = {
true,
false,
"fuchsia",
},
[59546] = {
true,
false,
"deepskyblue",
},
[220401] = {
true,
false,
"WARRIOR",
},
[99358] = {
true,
false,
"deepskyblue",
},
[192767] = {
true,
false,
"mediumpurple",
},
[191232] = {
true,
false,
"blue",
},
[224240] = {
true,
false,
"blue",
},
[163086] = {
true,
false,
"blue",
},
[184580] = {
true,
false,
"blue",
},
[129552] = {
true,
false,
"deepskyblue",
},
[206074] = {
true,
false,
"WARRIOR",
},
[80936] = {
true,
false,
"blue",
},
[184581] = {
true,
false,
"fuchsia",
},
[168717] = {
true,
false,
"deepskyblue",
},
[134174] = {
true,
false,
"honeydew",
},
[114584] = {
true,
false,
"mediumpurple",
},
[184582] = {
true,
false,
"deepskyblue",
},
[59547] = {
true,
false,
"mediumpurple",
},
[168718] = {
true,
false,
"blue",
},
[129553] = {
true,
false,
"mediumpurple",
},
[214264] = {
true,
false,
"blue",
},
[99360] = {
true,
false,
"blue",
},
[45922] = {
true,
false,
"fuchsia",
},
[98081] = {
true,
false,
"fuchsia",
},
[150297] = {
true,
false,
"deepskyblue",
},
[84520] = {
true,
false,
"mediumpurple",
},
[165138] = {
true,
false,
"WARRIOR",
},
[40357] = {
true,
false,
"fuchsia",
},
[80938] = {
true,
false,
"mediumpurple",
},
[95779] = {
true,
false,
"mediumpurple",
},
[186122] = {
true,
false,
"blue",
},
[184331] = {
true,
false,
"mediumpurple",
},
[153882] = {
true,
false,
"deepskyblue",
},
[193799] = {
true,
false,
"fuchsia",
},
[196102] = {
true,
false,
"blue",
},
[163862] = {
true,
false,
"blue",
},
[40166] = {
true,
false,
"mediumpurple",
},
[224249] = {
true,
false,
"mediumpurple",
},
[189706] = {
false,
false,
"yellow",
},
[186124] = {
true,
false,
"deepskyblue",
},
[180495] = {
true,
false,
"fuchsia",
},
[223994] = {
true,
false,
"deepskyblue",
},
[186125] = {
true,
false,
"fuchsia",
},
[165911] = {
true,
false,
"mediumpurple",
},
[201222] = {
true,
false,
"mediumpurple",
},
[223995] = {
true,
false,
"blue",
},
[184335] = {
true,
false,
"fuchsia",
},
[201223] = {
true,
false,
"blue",
},
[193291] = {
true,
false,
"fuchsia",
},
[216320] = {
true,
false,
"mediumpurple",
},
[194315] = {
true,
false,
"mediumpurple",
},
[165913] = {
true,
false,
"fuchsia",
},
[137511] = {
true,
false,
"WARRIOR",
},
[40167] = {
true,
false,
"fuchsia",
},
[195851] = {
true,
false,
"blue",
},
[222974] = {
true,
false,
"WARRIOR",
},
[193293] = {
true,
false,
"mediumpurple",
},
[114334] = {
true,
false,
"mediumpurple",
},
[194317] = {
true,
false,
"mediumpurple",
},
[172312] = {
true,
false,
"deepskyblue",
},
[138281] = {
true,
false,
"mediumpurple",
},
[45477] = {
true,
false,
"blue",
},
[125977] = {
true,
false,
"fuchsia",
},
[187154] = {
true,
false,
"deepskyblue",
},
[167964] = {
true,
false,
"fuchsia",
},
[187155] = {
true,
false,
"deepskyblue",
},
[134701] = {
true,
false,
"fuchsia",
},
[80816] = {
true,
false,
"deepskyblue",
},
[167965] = {
true,
false,
"blue",
},
[137516] = {
true,
false,
"WARRIOR",
},
[144169] = {
true,
false,
"mediumpurple",
},
[216326] = {
true,
false,
"blue",
},
[40936] = {
true,
false,
"mediumpurple",
},
[165919] = {
true,
false,
"mediumpurple",
},
[137517] = {
true,
false,
"blue",
},
[144170] = {
true,
false,
"deepskyblue",
},
[115488] = {
true,
false,
"blue",
},
[171805] = {
true,
false,
"blue",
},
[167967] = {
true,
false,
"blue",
},
[216328] = {
true,
false,
"mediumpurple",
},
[163618] = {
true,
false,
"fuchsia",
},
[192788] = {
true,
false,
"fuchsia",
},
[213770] = {
true,
false,
"mediumpurple",
},
[168992] = {
true,
false,
"deepskyblue",
},
[220423] = {
true,
false,
"mediumpurple",
},
[196115] = {
true,
false,
"fuchsia",
},
[163619] = {
true,
false,
"blue",
},
[83761] = {
true,
false,
"mediumpurple",
},
[163620] = {
true,
false,
"mediumpurple",
},
[135474] = {
true,
false,
"blue",
},
[59552] = {
true,
false,
"fuchsia",
},
[189464] = {
true,
false,
"fuchsia",
},
[196117] = {
true,
false,
"mediumpurple",
},
[163621] = {
true,
false,
"mediumpurple",
},
[182045] = {
true,
false,
"fuchsia",
},
[198933] = {
true,
false,
"mediumpurple",
},
[133685] = {
true,
false,
"deepskyblue",
},
[189466] = {
true,
false,
"mediumpurple",
},
[216333] = {
true,
false,
"blue",
},
[165414] = {
true,
false,
"deepskyblue",
},
[163623] = {
true,
false,
"WARRIOR",
},
[133430] = {
true,
false,
"cornflowerblue",
},
[189467] = {
true,
false,
"blue",
},
[214287] = {
true,
false,
"fuchsia",
},
[83763] = {
true,
false,
"deepskyblue",
},
[59553] = {
true,
false,
"mediumpurple",
},
[97197] = {
true,
false,
"deepskyblue",
},
[133432] = {
true,
false,
"gold",
},
[45928] = {
true,
false,
"blue",
},
[83892] = {
true,
false,
"fuchsia",
},
[163882] = {
true,
false,
"mediumpurple",
},
[192796] = {
true,
false,
"fuchsia",
},
[203799] = {
true,
false,
"deepskyblue",
},
[216337] = {
true,
false,
"WARRIOR",
},
[188703] = {
false,
false,
"yellow",
},
[215826] = {
true,
false,
"fuchsia",
},
[189471] = {
true,
false,
"deepskyblue",
},
[216338] = {
true,
false,
"mediumpurple",
},
[83893] = {
true,
false,
"deepskyblue",
},
[189472] = {
true,
false,
"deepskyblue",
},
[216339] = {
true,
false,
"deepskyblue",
},
[210966] = {
true,
false,
"deepskyblue",
},
[101549] = {
true,
false,
"blue",
},
[205337] = {
true,
false,
"fuchsia",
},
[168747] = {
true,
false,
"fuchsia",
},
[216340] = {
true,
false,
"fuchsia",
},
[83894] = {
true,
false,
"blue",
},
[192800] = {
true,
false,
"blue",
},
[197406] = {
true,
false,
"fuchsia",
},
[201756] = {
true,
false,
"fuchsia",
},
[216341] = {
true,
false,
"WARRIOR",
},
[216342] = {
true,
false,
"fuchsia",
},
[100527] = {
true,
false,
"fuchsia",
},
[156212] = {
true,
false,
"deepskyblue",
},
[163121] = {
true,
false,
"blue",
},
[224276] = {
true,
false,
"mediumpurple",
},
[45930] = {
true,
false,
"deepskyblue",
},
[216856] = {
true,
false,
"fuchsia",
},
[223253] = {
true,
false,
"deepskyblue",
},
[162099] = {
true,
false,
"fuchsia",
},
[189478] = {
true,
false,
"mediumpurple",
},
[186664] = {
true,
false,
"deepskyblue",
},
[212764] = {
true,
false,
"WARRIOR",
},
[135234] = {
true,
false,
"WARRIOR",
},
[195877] = {
true,
false,
"fuchsia",
},
[184107] = {
true,
false,
"mediumpurple",
},
[135235] = {
true,
false,
"goldenrod",
},
[163126] = {
true,
false,
"deepskyblue",
},
[163894] = {
true,
false,
"blue",
},
[75966] = {
true,
false,
"fuchsia",
},
[199717] = {
true,
false,
"mediumpurple",
},
[180015] = {
true,
false,
"blue",
},
[81212] = {
true,
false,
"mediumpurple",
},
[136005] = {
false,
false,
"blue",
},
[99891] = {
true,
false,
"mediumpurple",
},
[163128] = {
true,
false,
"deepskyblue",
},
[168246] = {
true,
false,
"WARRIOR",
},
[136006] = {
false,
false,
"blue",
},
[102962] = {
true,
false,
"fuchsia",
},
[135239] = {
false,
false,
"paleturquoise",
},
[164921] = {
true,
false,
"deepskyblue",
},
[45932] = {
true,
false,
"fuchsia",
},
[135240] = {
true,
false,
"blue",
},
[166969] = {
true,
false,
"deepskyblue",
},
[177716] = {
true,
false,
"deepskyblue",
},
[115757] = {
true,
false,
"mediumpurple",
},
[83389] = {
true,
false,
"mediumpurple",
},
[166970] = {
true,
false,
"blue",
},
[75713] = {
true,
false,
"fuchsia",
},
[166971] = {
true,
false,
"fuchsia",
},
[152898] = {
true,
false,
"fuchsia",
},
[83390] = {
true,
false,
"deepskyblue",
},
[164414] = {
true,
false,
"deepskyblue",
},
[189234] = {
true,
false,
"mediumpurple",
},
[220195] = {
true,
false,
"deepskyblue",
},
[212775] = {
true,
false,
"deepskyblue",
},
[135245] = {
true,
false,
"mediumpurple",
},
[97720] = {
true,
false,
"fuchsia",
},
[220196] = {
true,
false,
"mediumpurple",
},
[75459] = {
true,
false,
"fuchsia",
},
[134990] = {
true,
false,
"honeydew",
},
[167998] = {
true,
false,
"mediumpurple",
},
[138061] = {
true,
false,
"deepskyblue",
},
[220197] = {
true,
false,
"mediumpurple",
},
[164929] = {
true,
false,
"mediumpurple",
},
[104246] = {
true,
false,
"blue",
},
[212778] = {
true,
false,
"fuchsia",
},
[81985] = {
true,
false,
"fuchsia",
},
[131666] = {
true,
false,
"deepskyblue",
},
[40177] = {
true,
false,
"mediumpurple",
},
[220199] = {
true,
false,
"WARRIOR",
},
[185656] = {
true,
false,
"fuchsia",
},
[131667] = {
true,
false,
"mediumpurple",
},
[138064] = {
false,
false,
"blue",
},
[65317] = {
true,
false,
"mediumpurple",
},
[152905] = {
true,
false,
"fuchsia",
},
[104247] = {
true,
false,
"fuchsia",
},
[216363] = {
true,
false,
"WARRIOR",
},
[216619] = {
true,
false,
"mediumpurple",
},
[131669] = {
true,
false,
"WARRIOR",
},
[176959] = {
true,
false,
"deepskyblue",
},
[45935] = {
true,
false,
"fuchsia",
},
[131670] = {
true,
false,
"palegreen",
},
[213806] = {
true,
false,
"fuchsia",
},
[216365] = {
true,
false,
"WARRIOR",
},
[205363] = {
true,
false,
"deepskyblue",
},
[100539] = {
true,
false,
"blue",
},
[168007] = {
true,
false,
"blue",
},
[179010] = {
true,
false,
"deepskyblue",
},
[134232] = {
true,
false,
"goldenrod",
},
[205366] = {
true,
false,
"WARRIOR",
},
[214066] = {
true,
false,
"deepskyblue",
},
[115765] = {
true,
false,
"fuchsia",
},
[164427] = {
true,
false,
"WARRIOR",
},
[208438] = {
true,
false,
"deepskyblue",
},
[135258] = {
true,
false,
"blue",
},
[179269] = {
true,
false,
"fuchsia",
},
[187969] = {
true,
false,
"deepskyblue",
},
[184131] = {
true,
false,
"deepskyblue",
},
[101437] = {
true,
false,
"fuchsia",
},
[131677] = {
true,
false,
"deepskyblue",
},
[165197] = {
true,
false,
"mediumpurple",
},
[208440] = {
true,
false,
"mediumpurple",
},
[184132] = {
true,
false,
"fuchsia",
},
[195135] = {
true,
false,
"fuchsia",
},
[92610] = {
true,
false,
"fuchsia",
},
[84550] = {
true,
false,
"mediumpurple",
},
[196671] = {
true,
false,
"mediumpurple",
},
[170572] = {
true,
false,
"blue",
},
[136541] = {
true,
false,
"deepskyblue",
},
[208698] = {
true,
false,
"fuchsia",
},
[75979] = {
true,
false,
"fuchsia",
},
[156244] = {
true,
false,
"mediumpurple",
},
[201790] = {
true,
false,
"deepskyblue",
},
[171341] = {
true,
false,
"deepskyblue",
},
[155221] = {
true,
false,
"deepskyblue",
},
[214840] = {
true,
false,
"blue",
},
[135263] = {
true,
false,
"deepskyblue",
},
[156245] = {
true,
false,
"mediumpurple",
},
[128434] = {
true,
false,
"fuchsia",
},
[197697] = {
true,
false,
"mediumpurple",
},
[199233] = {
true,
false,
"mediumpurple",
},
[201792] = {
true,
false,
"mediumpurple",
},
[171343] = {
true,
false,
"fuchsia",
},
[186696] = {
true,
false,
"fuchsia",
},
[128435] = {
true,
false,
"maroon",
},
[98370] = {
true,
false,
"fuchsia",
},
[162133] = {
true,
false,
"fuchsia",
},
[176974] = {
true,
false,
"fuchsia",
},
[163157] = {
true,
false,
"mediumpurple",
},
[115642] = {
true,
false,
"blue",
},
[211262] = {
true,
false,
"deepskyblue",
},
[131685] = {
true,
false,
"deepskyblue",
},
[199748] = {
true,
false,
"fuchsia",
},
[157017] = {
true,
false,
"blue",
},
[220730] = {
true,
false,
"mediumpurple",
},
[98243] = {
true,
false,
"mediumpurple",
},
[211263] = {
true,
false,
"mediumpurple",
},
[195399] = {
true,
false,
"fuchsia",
},
[84554] = {
true,
false,
"fuchsia",
},
[44404] = {
true,
false,
"fuchsia",
},
[77006] = {
false,
false,
"mediumpurple",
},
[133990] = {
true,
false,
"WARRIOR",
},
[136549] = {
true,
false,
"deepskyblue",
},
[115388] = {
true,
false,
"fuchsia",
},
[219198] = {
true,
false,
"deepskyblue",
},
[137830] = {
true,
false,
"deepskyblue",
},
[130485] = {
false,
false,
"peru",
},
[136295] = {
false,
false,
"peru",
},
[186191] = {
true,
false,
"deepskyblue",
},
[127799] = {
true,
false,
"blue",
},
[192333] = {
true,
false,
"mediumpurple",
},
[133482] = {
true,
false,
"maroon",
},
[208198] = {
true,
false,
"fuchsia",
},
[131436] = {
true,
false,
"mediumpurple",
},
[205384] = {
true,
false,
"fuchsia",
},
[134251] = {
true,
false,
"honeydew",
},
[194894] = {
true,
false,
"deepskyblue",
},
[189265] = {
true,
false,
"fuchsia",
},
[194895] = {
false,
false,
"deepskyblue",
},
[164702] = {
true,
false,
"fuchsia",
},
[190034] = {
true,
false,
"mediumpurple",
},
[178008] = {
false,
false,
"yellow",
},
[225601] = {
true,
false,
"WARRIOR",
},
[130488] = {
true,
false,
"lightsalmon",
},
[165471] = {
true,
false,
"blue",
},
[114624] = {
true,
false,
"mediumpurple",
},
[194897] = {
true,
false,
"fuchsia",
},
[52019] = {
true,
false,
"fuchsia",
},
[216648] = {
true,
false,
"mediumpurple",
},
[216649] = {
true,
false,
"mediumpurple",
},
[83025] = {
true,
false,
"blue",
},
[225605] = {
true,
false,
"fuchsia",
},
[40633] = {
true,
false,
"deepskyblue",
},
[187224] = {
true,
false,
"deepskyblue",
},
[134514] = {
true,
false,
"lightgreen",
},
[114626] = {
true,
false,
"fuchsia",
},
[225606] = {
true,
false,
"blue",
},
[96587] = {
true,
false,
"deepskyblue",
},
[203857] = {
true,
false,
"fuchsia",
},
[83026] = {
true,
false,
"mediumpurple",
},
[198996] = {
true,
false,
"mediumpurple",
},
[114627] = {
true,
false,
"blue",
},
[198997] = {
true,
false,
"mediumpurple",
},
[195927] = {
true,
false,
"mediumpurple",
},
[198998] = {
true,
false,
"mediumpurple",
},
[40634] = {
true,
false,
"deepskyblue",
},
[189531] = {
true,
false,
"fuchsia",
},
[195928] = {
true,
false,
"mediumpurple",
},
[165479] = {
true,
false,
"mediumpurple",
},
[198999] = {
true,
false,
"mediumpurple",
},
[203861] = {
true,
false,
"mediumpurple",
},
[195929] = {
true,
false,
"mediumpurple",
},
[199000] = {
true,
false,
"mediumpurple",
},
[195930] = {
true,
false,
"mediumpurple",
},
[114629] = {
true,
false,
"blue",
},
[186208] = {
true,
false,
"fuchsia",
},
[180323] = {
true,
false,
"fuchsia",
},
[219984] = {
true,
false,
"mediumpurple",
},
[116549] = {
true,
false,
"deepskyblue",
},
[218961] = {
true,
false,
"fuchsia",
},
[87252] = {
true,
false,
"mediumpurple",
},
[164461] = {
true,
false,
"blue",
},
[134012] = {
true,
false,
"lightsalmon",
},
[181861] = {
true,
false,
"mediumpurple",
},
[180070] = {
true,
false,
"fuchsia",
},
[129600] = {
true,
false,
"fuchsia",
},
[101326] = {
true,
false,
"fuchsia",
},
[157810] = {
true,
false,
"deepskyblue",
},
[164463] = {
true,
false,
"deepskyblue",
},
[102094] = {
true,
false,
"deepskyblue",
},
[114632] = {
true,
false,
"deepskyblue",
},
[99664] = {
true,
false,
"fuchsia",
},
[197985] = {
true,
false,
"fuchsia",
},
[104270] = {
true,
false,
"mediumpurple",
},
[114633] = {
true,
false,
"mediumpurple",
},
[135552] = {
true,
false,
"fuchsia",
},
[129602] = {
true,
false,
"mediumpurple",
},
[224853] = {
true,
false,
"WARRIOR",
},
[111563] = {
true,
false,
"blue",
},
[205151] = {
true,
false,
"WARRIOR",
},
[197219] = {
true,
false,
"mediumpurple",
},
[187240] = {
true,
false,
"mediumpurple",
},
[154744] = {
true,
false,
"fuchsia",
},
[171376] = {
true,
false,
"blue",
},
[205152] = {
true,
false,
"mediumpurple",
},
[205408] = {
true,
false,
"deepskyblue",
},
[191847] = {
true,
false,
"deepskyblue",
},
[179821] = {
true,
false,
"fuchsia",
},
[196198] = {
true,
false,
"blue",
},
[115019] = {
true,
false,
"deepskyblue",
},
[100818] = {
true,
false,
"fuchsia",
},
[207969] = {
true,
false,
"fuchsia",
},
[186220] = {
true,
false,
"deepskyblue",
},
[180335] = {
true,
false,
"deepskyblue",
},
[213343] = {
true,
false,
"mediumpurple",
},
[150142] = {
true,
false,
"deepskyblue",
},
[104273] = {
true,
false,
"mediumpurple",
},
[126918] = {
false,
false,
"gold",
},
[180336] = {
true,
false,
"deepskyblue",
},
[168310] = {
true,
false,
"fuchsia",
},
[115020] = {
true,
false,
"mediumpurple",
},
[101075] = {
true,
false,
"fuchsia",
},
[166264] = {
true,
false,
"WARRIOR",
},
[134024] = {
true,
false,
"fuchsia",
},
[196202] = {
true,
false,
"blue",
},
[126919] = {
true,
false,
"blue",
},
[174197] = {
true,
false,
"deepskyblue",
},
[205158] = {
true,
false,
"mediumpurple",
},
[40319] = {
true,
false,
"mediumpurple",
},
[196203] = {
true,
false,
"deepskyblue",
},
[135049] = {
true,
false,
"fuchsia",
},
[166266] = {
true,
false,
"WARRIOR",
},
[150146] = {
true,
false,
"fuchsia",
},
[128455] = {
true,
false,
"fuchsia",
},
[132491] = {
false,
false,
"palegreen",
},
[120651] = {
true,
false,
"gold",
},
[128967] = {
true,
false,
"deepskyblue",
},
[136330] = {
true,
false,
"fuchsia",
},
[115406] = {
true,
false,
"deepskyblue",
},
[186226] = {
true,
false,
"fuchsia",
},
[39616] = {
true,
false,
"WARRIOR",
},
[214117] = {
true,
false,
"fuchsia",
},
[135052] = {
true,
false,
"WARRIOR",
},
[168572] = {
true,
false,
"blue",
},
[136076] = {
true,
false,
"lightcoral",
},
[40320] = {
true,
false,
"mediumpurple",
},
[213607] = {
true,
false,
"WARRIOR",
},
[189555] = {
true,
false,
"blue",
},
[128969] = {
true,
false,
"mediumpurple",
},
[186741] = {
true,
false,
"fuchsia",
},
[183671] = {
true,
false,
"fuchsia",
},
[157572] = {
true,
false,
"deepskyblue",
},
[137614] = {
true,
false,
"deepskyblue",
},
[223844] = {
true,
false,
"fuchsia",
},
[164737] = {
true,
false,
"fuchsia",
},
[154758] = {
true,
false,
"fuchsia",
},
[104278] = {
true,
false,
"fuchsia",
},
[137103] = {
true,
false,
"fuchsia",
},
[162691] = {
true,
false,
"mediumpurple",
},
[163459] = {
true,
false,
"blue",
},
[180091] = {
true,
false,
"mediumpurple",
},
[40577] = {
true,
false,
"mediumpurple",
},
[109908] = {
true,
false,
"fuchsia",
},
[165251] = {
true,
false,
"fuchsia",
},
[102232] = {
true,
false,
"fuchsia",
},
[165763] = {
true,
false,
"deepskyblue",
},
[180348] = {
true,
false,
"blue",
},
[129227] = {
false,
false,
"maroon",
},
[168578] = {
true,
false,
"deepskyblue",
},
[162693] = {
true,
false,
"mediumpurple",
},
[189816] = {
true,
false,
"deepskyblue",
},
[166276] = {
true,
false,
"mediumpurple",
},
[170882] = {
true,
false,
"blue",
},
[188026] = {
true,
false,
"fuchsia",
},
[215405] = {
true,
false,
"mediumpurple",
},
[187771] = {
true,
false,
"blue",
},
[174210] = {
true,
false,
"deepskyblue",
},
[169861] = {
true,
false,
"blue",
},
[215407] = {
true,
false,
"mediumpurple",
},
[180864] = {
true,
false,
"fuchsia",
},
[183423] = {
true,
false,
"deepskyblue",
},
[179841] = {
true,
false,
"deepskyblue",
},
[150160] = {
true,
false,
"mediumpurple",
},
[173189] = {
true,
false,
"deepskyblue",
},
[179842] = {
true,
false,
"fuchsia",
},
[204918] = {
true,
false,
"fuchsia",
},
[134041] = {
true,
false,
"WARRIOR",
},
[173190] = {
true,
false,
"deepskyblue",
},
[126928] = {
false,
false,
"navajowhite",
},
[88163] = {
true,
false,
"fuchsia",
},
[137625] = {
true,
false,
"deepskyblue",
},
[86372] = {
true,
false,
"blue",
},
[186242] = {
true,
false,
"blue",
},
[137626] = {
true,
false,
"deepskyblue",
},
[179334] = {
true,
false,
"fuchsia",
},
[122963] = {
true,
false,
"mediumpurple",
},
[199037] = {
true,
false,
"deepskyblue",
},
[150165] = {
true,
false,
"deepskyblue",
},
[189314] = {
false,
false,
"white",
},
[179847] = {
true,
false,
"fuchsia",
},
[176521] = {
true,
false,
"blue",
},
[205435] = {
true,
false,
"mediumpurple",
},
[205691] = {
true,
false,
"blue",
},
[180104] = {
true,
false,
"deepskyblue",
},
[190340] = {
true,
false,
"deepskyblue",
},
[176523] = {
true,
false,
"mediumpurple",
},
[150168] = {
true,
false,
"fuchsia",
},
[95842] = {
true,
false,
"deepskyblue",
},
[122965] = {
true,
false,
"mediumpurple",
},
[127315] = {
true,
false,
"fuchsia",
},
[165010] = {
true,
false,
"mediumpurple",
},
[190342] = {
true,
false,
"fuchsia",
},
[135329] = {
true,
false,
"mediumpurple",
},
[136353] = {
false,
false,
"royalblue",
},
[179852] = {
true,
false,
"blue",
},
[131492] = {
true,
false,
"fuchsia",
},
[168594] = {
true,
false,
"mediumpurple",
},
[111068] = {
true,
false,
"mediumpurple",
},
[139425] = {
false,
false,
"honeydew",
},
[164501] = {
true,
false,
"mediumpurple",
},
[213885] = {
true,
false,
"fuchsia",
},
[118489] = {
true,
false,
"fuchsia",
},
[190345] = {
true,
false,
"blue",
},
[122967] = {
true,
false,
"mediumpurple",
},
[173714] = {
true,
false,
"mediumpurple",
},
[213119] = {
true,
false,
"mediumpurple",
},
[122968] = {
true,
false,
"mediumpurple",
},
[45572] = {
true,
false,
"fuchsia",
},
[154014] = {
true,
false,
"deepskyblue",
},
[118491] = {
true,
false,
"deepskyblue",
},
[165529] = {
true,
false,
"blue",
},
[188302] = {
false,
false,
"yellow",
},
[122969] = {
true,
false,
"deepskyblue",
},
[129366] = {
true,
false,
"WARRIOR",
},
[206214] = {
true,
false,
"mediumpurple",
},
[101476] = {
true,
false,
"fuchsia",
},
[144293] = {
true,
false,
"mediumpurple",
},
[122970] = {
true,
false,
"blue",
},
[166299] = {
true,
false,
"fuchsia",
},
[129367] = {
true,
false,
"fuchsia",
},
[144294] = {
true,
false,
"deepskyblue",
},
[129879] = {
true,
false,
"fuchsia",
},
[213893] = {
true,
false,
"fuchsia",
},
[75506] = {
true,
false,
"deepskyblue",
},
[114783] = {
true,
false,
"deepskyblue",
},
[164510] = {
true,
false,
"fuchsia",
},
[213894] = {
true,
false,
"blue",
},
[208521] = {
true,
false,
"deepskyblue",
},
[154020] = {
true,
false,
"deepskyblue",
},
[213895] = {
true,
false,
"blue",
},
[177817] = {
true,
false,
"blue",
},
[98280] = {
true,
false,
"blue",
},
[122972] = {
true,
false,
"deepskyblue",
},
[41096] = {
true,
false,
"fuchsia",
},
[129369] = {
true,
false,
"mediumpurple",
},
[144298] = {
true,
false,
"blue",
},
[39625] = {
true,
false,
"mediumpurple",
},
[101991] = {
true,
false,
"mediumpurple",
},
[122973] = {
true,
false,
"fuchsia",
},
[129370] = {
true,
false,
"deepskyblue",
},
[134158] = {
true,
false,
"navajowhite",
},
[206064] = {
true,
false,
"deepskyblue",
},
[175517] = {
true,
false,
"blue",
},
[138465] = {
true,
false,
"deepskyblue",
},
[170480] = {
true,
false,
"mediumpurple",
},
[168156] = {
true,
false,
"fuchsia",
},
[85232] = {
true,
false,
"mediumpurple",
},
[190174] = {
true,
false,
"fuchsia",
},
[178142] = {
true,
false,
"deepskyblue",
},
[81522] = {
true,
false,
"mediumpurple",
},
[225479] = {
true,
false,
"deepskyblue",
},
[134139] = {
true,
false,
"gold",
},
[190359] = {
true,
false,
"blue",
},
[131812] = {
true,
false,
"fuchsia",
},
[211341] = {
true,
false,
"deepskyblue",
},
[129371] = {
true,
false,
"fuchsia",
},
[96512] = {
true,
false,
"mediumpurple",
},
[164926] = {
true,
false,
"mediumpurple",
},
[132532] = {
true,
false,
"palegreen",
},
[213217] = {
true,
false,
"fuchsia",
},
[131824] = {
true,
false,
"mediumpurple",
},
[163622] = {
true,
false,
"WARRIOR",
},
[104251] = {
true,
false,
"fuchsia",
},
[164517] = {
true,
false,
"mediumpurple",
},
[204536] = {
true,
false,
"blue",
},
[164557] = {
true,
false,
"mediumpurple",
},
[81984] = {
true,
false,
"mediumpurple",
},
[173729] = {
true,
false,
"fuchsia",
},
[134137] = {
true,
false,
"deepskyblue",
},
[211087] = {
true,
false,
"mediumpurple",
},
[206070] = {
true,
false,
"mediumpurple",
},
[129372] = {
true,
false,
"blue",
},
[151773] = {
true,
false,
"blue",
},
[206063] = {
true,
false,
"WARRIOR",
},
[193944] = {
true,
false,
"deepskyblue",
},
[195842] = {
true,
false,
"deepskyblue",
},
[190362] = {
true,
false,
"fuchsia",
},
[196548] = {
true,
false,
"fuchsia",
},
[40586] = {
true,
false,
"mediumpurple",
},
[173016] = {
true,
false,
"deepskyblue",
},
[165137] = {
true,
false,
"mediumpurple",
},
[199368] = {
true,
false,
"fuchsia",
},
[199124] = {
true,
false,
"deepskyblue",
},
[168418] = {
true,
false,
"deepskyblue",
},
[164562] = {
true,
false,
"fuchsia",
},
[211089] = {
true,
false,
"mediumpurple",
},
[224609] = {
true,
false,
"mediumpurple",
},
[136249] = {
false,
false,
"plum",
},
[162729] = {
true,
false,
"WARRIOR",
},
[200137] = {
true,
false,
"deepskyblue",
},
[137521] = {
true,
false,
"WARRIOR",
},
[186658] = {
true,
false,
"deepskyblue",
},
[128652] = {
true,
false,
"mediumpurple",
},
[134418] = {
true,
false,
"deepskyblue",
},
[212403] = {
true,
false,
"deepskyblue",
},
[40765] = {
true,
false,
"mediumpurple",
},
[213905] = {
true,
false,
"WARRIOR",
},
[183425] = {
true,
false,
"blue",
},
[224219] = {
true,
false,
"deepskyblue",
},
[130909] = {
false,
false,
"blue",
},
[139422] = {
true,
false,
"gold",
},
[222923] = {
true,
false,
"WARRIOR",
},
[169927] = {
true,
false,
"fuchsia",
},
[129374] = {
true,
false,
"mediumpurple",
},
[167731] = {
true,
false,
"deepskyblue",
},
[134417] = {
true,
false,
"gold",
},
[129758] = {
true,
false,
"fuchsia",
},
[184140] = {
true,
false,
"fuchsia",
},
[192786] = {
true,
false,
"blue",
},
[216336] = {
true,
false,
"WARRIOR",
},
[131545] = {
true,
false,
"mediumpurple",
},
[115407] = {
true,
false,
"blue",
},
[184022] = {
true,
false,
"deepskyblue",
},
[105704] = {
true,
false,
"deepskyblue",
},
[165410] = {
true,
false,
"mediumpurple",
},
[183707] = {
true,
false,
"deepskyblue",
},
[98538] = {
true,
false,
"mediumpurple",
},
[155824] = {
true,
false,
"blue",
},
[98542] = {
true,
false,
"mediumpurple",
},
[221979] = {
true,
false,
"blue",
},
[197671] = {
true,
false,
"blue",
},
[134331] = {
true,
false,
"gold",
},
[114804] = {
true,
false,
"blue",
},
[150292] = {
true,
false,
"blue",
},
[190368] = {
true,
false,
"fuchsia",
},
[144168] = {
true,
false,
"blue",
},
[176551] = {
true,
false,
"deepskyblue",
},
[115395] = {
true,
false,
"mediumpurple",
},
[168443] = {
true,
false,
"fuchsia",
},
[220193] = {
true,
false,
"blue",
},
[59873] = {
true,
false,
"mediumpurple",
},
[104300] = {
true,
false,
"fuchsia",
},
[151476] = {
true,
false,
"mediumpurple",
},
[82039] = {
true,
false,
"blue",
},
[194816] = {
true,
false,
"mediumpurple",
},
[199325] = {
true,
false,
"deepskyblue",
},
[156226] = {
true,
false,
"deepskyblue",
},
[223357] = {
true,
false,
"blue",
},
[198326] = {
true,
false,
"mediumpurple",
},
[188067] = {
true,
false,
"blue",
},
[190370] = {
true,
false,
"deepskyblue",
},
[168109] = {
true,
false,
"deepskyblue",
},
[59555] = {
true,
false,
"fuchsia",
},
[130400] = {
true,
false,
"deepskyblue",
},
[197535] = {
true,
false,
"mediumpurple",
},
[138063] = {
false,
false,
"blue",
},
[198047] = {
true,
false,
"mediumpurple",
},
[137405] = {
true,
false,
"fuchsia",
},
[190371] = {
true,
false,
"blue",
},
[75899] = {
true,
false,
"fuchsia",
},
[205212] = {
true,
false,
"fuchsia",
},
[212765] = {
true,
false,
"deepskyblue",
},
[187192] = {
true,
false,
"mediumpurple",
},
[204560] = {
true,
false,
"fuchsia",
},
[194487] = {
true,
false,
"deepskyblue",
},
[115640] = {
true,
false,
"fuchsia",
},
[197905] = {
true,
false,
"deepskyblue",
},
[224221] = {
true,
false,
"fuchsia",
},
[222700] = {
true,
false,
"fuchsia",
},
[140447] = {
true,
false,
"deepskyblue",
},
[203678] = {
true,
false,
"mediumpurple",
},
[136934] = {
true,
false,
"navajowhite",
},
[186229] = {
true,
false,
"mediumpurple",
},
[194467] = {
true,
false,
"blue",
},
[190373] = {
true,
false,
"deepskyblue",
},
[155830] = {
true,
false,
"deepskyblue",
},
[151127] = {
true,
false,
"fuchsia",
},
[186420] = {
true,
false,
"deepskyblue",
},
[201788] = {
true,
false,
"fuchsia",
},
[98810] = {
true,
false,
"mediumpurple",
},
[81603] = {
true,
false,
"mediumpurple",
},
[206140] = {
true,
false,
"mediumpurple",
},
[135007] = {
true,
false,
"gold",
},
[155831] = {
true,
false,
"fuchsia",
},
[99366] = {
true,
false,
"deepskyblue",
},
[163524] = {
true,
false,
"fuchsia",
},
[205727] = {
true,
false,
"deepskyblue",
},
[134338] = {
true,
false,
"navajowhite",
},
[214443] = {
true,
false,
"fuchsia",
},
[179388] = {
true,
false,
"deepskyblue",
},
[169905] = {
true,
false,
"blue",
},
[224271] = {
true,
false,
"deepskyblue",
},
[192934] = {
true,
false,
"blue",
},
[136470] = {
true,
false,
"honeydew",
},
[168882] = {
true,
false,
"fuchsia",
},
[165556] = {
true,
false,
"fuchsia",
},
[82682] = {
true,
false,
"mediumpurple",
},
[90998] = {
true,
false,
"blue",
},
[126848] = {
true,
false,
"deepskyblue",
},
[199749] = {
true,
false,
"mediumpurple",
},
[187768] = {
true,
false,
"deepskyblue",
},
[168627] = {
true,
false,
"deepskyblue",
},
[224152] = {
true,
false,
"blue",
},
[83578] = {
true,
false,
"mediumpurple",
},
[80935] = {
true,
false,
"deepskyblue",
},
[163458] = {
true,
false,
"deepskyblue",
},
[190377] = {
true,
false,
"fuchsia",
},
[192680] = {
true,
false,
"mediumpurple",
},
[135241] = {
true,
false,
"WARRIOR",
},
[157571] = {
true,
false,
"deepskyblue",
},
[198308] = {
true,
false,
"mediumpurple",
},
[195696] = {
true,
false,
"mediumpurple",
},
[210336] = {
false,
false,
"WARRIOR",
},
[196263] = {
true,
false,
"deepskyblue",
},
[186284] = {
true,
false,
"mediumpurple",
},
[135365] = {
true,
false,
"mediumpurple",
},
[131527] = {
true,
false,
"mediumpurple",
},
[130404] = {
true,
false,
"fuchsia",
},
[188244] = {
true,
false,
"mediumpurple",
},
[220003] = {
true,
false,
"mediumpurple",
},
[76104] = {
true,
false,
"mediumpurple",
},
[198311] = {
true,
false,
"mediumpurple",
},
[171799] = {
true,
false,
"fuchsia",
},
[114796] = {
true,
false,
"blue",
},
[84957] = {
true,
false,
"fuchsia",
},
[167607] = {
true,
false,
"mediumpurple",
},
[168886] = {
true,
false,
"deepskyblue",
},
[91000] = {
true,
false,
"mediumpurple",
},
[134599] = {
true,
false,
"gold",
},
[165560] = {
true,
false,
"fuchsia",
},
[213338] = {
true,
false,
"fuchsia",
},
[104275] = {
true,
false,
"mediumpurple",
},
[86684] = {
true,
false,
"deepskyblue",
},
[215968] = {
true,
false,
"deepskyblue",
},
[172981] = {
true,
false,
"mediumpurple",
},
[130661] = {
true,
false,
"lightgreen",
},
[134600] = {
false,
false,
"peru",
},
[207438] = {
true,
false,
"mediumpurple",
},
[190381] = {
true,
false,
"fuchsia",
},
[135048] = {
true,
false,
"WARRIOR",
},
[224732] = {
true,
false,
"fuchsia",
},
[198995] = {
true,
false,
"mediumpurple",
},
[196712] = {
true,
false,
"fuchsia",
},
[197857] = {
true,
false,
"deepskyblue",
},
[163520] = {
true,
false,
"mediumpurple",
},
[84400] = {
true,
false,
"fuchsia",
},
[179733] = {
true,
false,
"fuchsia",
},
[141938] = {
true,
false,
"deepskyblue",
},
[223646] = {
true,
false,
"WARRIOR",
},
[129208] = {
true,
false,
"mediumpurple",
},
[104274] = {
true,
false,
"mediumpurple",
},
[165483] = {
true,
false,
"fuchsia",
},
[157634] = {
true,
false,
"blue",
},
[114542] = {
true,
false,
"blue",
},
[40484] = {
true,
false,
"mediumpurple",
},
[183033] = {
true,
false,
"mediumpurple",
},
[144071] = {
true,
false,
"gold",
},
[133835] = {
true,
false,
"deepskyblue",
},
[220065] = {
true,
false,
"fuchsia",
},
[138187] = {
true,
false,
"deepskyblue",
},
[212389] = {
true,
false,
"deepskyblue",
},
[190128] = {
false,
false,
"yellow",
},
[84989] = {
true,
false,
"deepskyblue",
},
[92538] = {
true,
false,
"fuchsia",
},
[105715] = {
true,
false,
"blue",
},
[133836] = {
true,
false,
"blue",
},
[136139] = {
false,
false,
"peru",
},
[193373] = {
true,
false,
"blue",
},
[228538] = {
true,
false,
"blue",
},
[167612] = {
true,
false,
"blue",
},
[81236] = {
true,
false,
"deepskyblue",
},
[164707] = {
true,
false,
"mediumpurple",
},
[213932] = {
true,
false,
"deepskyblue",
},
[166589] = {
true,
false,
"fuchsia",
},
[187315] = {
true,
false,
"blue",
},
[129640] = {
true,
false,
"deepskyblue",
},
[91002] = {
true,
false,
"fuchsia",
},
[199595] = {
true,
false,
"mediumpurple",
},
[84990] = {
true,
false,
"blue",
},
[98949] = {
true,
false,
"mediumpurple",
},
[102095] = {
true,
false,
"fuchsia",
},
[56792] = {
true,
false,
"fuchsia",
},
[176565] = {
true,
false,
"deepskyblue",
},
[131009] = {
true,
false,
"fuchsia",
},
[183495] = {
true,
false,
"mediumpurple",
},
[114544] = {
true,
false,
"fuchsia",
},
[167963] = {
true,
false,
"blue",
},
[166079] = {
true,
false,
"WARRIOR",
},
[150143] = {
true,
false,
"blue",
},
[103344] = {
true,
false,
"mediumpurple",
},
[86526] = {
true,
false,
"blue",
},
[164920] = {
true,
false,
"fuchsia",
},
[171384] = {
true,
false,
"blue",
},
[99192] = {
true,
false,
"mediumpurple",
},
[165824] = {
true,
false,
"fuchsia",
},
[229537] = {
true,
false,
"fuchsia",
},
[134284] = {
true,
false,
"deepskyblue",
},
[115486] = {
true,
false,
"mediumpurple",
},
[184023] = {
true,
false,
"blue",
},
[122984] = {
true,
false,
"mediumpurple",
},
[204206] = {
true,
false,
"mediumpurple",
},
[75652] = {
true,
false,
"mediumpurple",
},
[129559] = {
true,
false,
"blue",
},
[165222] = {
true,
false,
"fuchsia",
},
[168384] = {
true,
false,
"blue",
},
[98681] = {
true,
false,
"blue",
},
[168318] = {
true,
false,
"mediumpurple",
},
[185528] = {
true,
false,
"blue",
},
[189878] = {
false,
false,
"yellow",
},
[165762] = {
true,
false,
"fuchsia",
},
[166275] = {
true,
false,
"deepskyblue",
},
[99359] = {
true,
false,
"fuchsia",
},
[176573] = {
true,
false,
"fuchsia",
},
[197698] = {
true,
false,
"mediumpurple",
},
[96574] = {
true,
false,
"mediumpurple",
},
[185529] = {
true,
false,
"fuchsia",
},
[175550] = {
true,
false,
"fuchsia",
},
[77700] = {
true,
false,
"deepskyblue",
},
[194469] = {
true,
false,
"blue",
},
[171184] = {
true,
false,
"mediumpurple",
},
[213892] = {
true,
false,
"deepskyblue",
},
[192464] = {
true,
false,
"fuchsia",
},
[164804] = {
true,
false,
"fuchsia",
},
[212681] = {
true,
false,
"deepskyblue",
},
[189266] = {
true,
false,
"deepskyblue",
},
[91006] = {
true,
false,
"blue",
},
[81864] = {
true,
false,
"blue",
},
[95834] = {
true,
false,
"fuchsia",
},
[176575] = {
true,
false,
"deepskyblue",
},
[170690] = {
true,
false,
"blue",
},
[214350] = {
true,
false,
"fuchsia",
},
[186246] = {
true,
false,
"deepskyblue",
},
[177808] = {
true,
false,
"mediumpurple",
},
[136483] = {
true,
false,
"blue",
},
[167876] = {
true,
false,
"fuchsia",
},
[114803] = {
true,
false,
"deepskyblue",
},
[164506] = {
true,
false,
"blue",
},
[191739] = {
true,
false,
"mediumpurple",
},
[213934] = {
true,
false,
"blue",
},
[114266] = {
true,
false,
"deepskyblue",
},
[189235] = {
true,
false,
"fuchsia",
},
[91007] = {
false,
false,
"fuchsia",
},
[169924] = {
true,
false,
"mediumpurple",
},
[101438] = {
true,
false,
"blue",
},
[122971] = {
true,
false,
"mediumpurple",
},
[165805] = {
true,
false,
"mediumpurple",
},
[144296] = {
true,
false,
"mediumpurple",
},
[177816] = {
true,
false,
"deepskyblue",
},
[212400] = {
true,
false,
"mediumpurple",
},
[166302] = {
true,
false,
"deepskyblue",
},
[155812] = {
true,
false,
"blue",
},
[194745] = {
true,
false,
"fuchsia",
},
[98792] = {
true,
false,
"deepskyblue",
},
[139949] = {
true,
false,
"honeydew",
},
[129517] = {
true,
false,
"fuchsia",
},
[167111] = {
true,
false,
"fuchsia",
},
[130012] = {
true,
false,
"fuchsia",
},
[91008] = {
true,
false,
"deepskyblue",
},
[189340] = {
true,
false,
"mediumpurple",
},
[206230] = {
true,
false,
"fuchsia",
},
[192955] = {
true,
false,
"fuchsia",
},
[191164] = {
true,
false,
"fuchsia",
},
[213937] = {
true,
false,
"mediumpurple",
},
[169159] = {
true,
false,
"gold",
},
[98275] = {
true,
false,
"fuchsia",
},
[150169] = {
true,
false,
"mediumpurple",
},
[221102] = {
true,
false,
"deepskyblue",
},
[76518] = {
true,
false,
"fuchsia",
},
[133593] = {
true,
false,
"honeydew",
},
[134629] = {
true,
false,
"navajowhite",
},
[98813] = {
true,
false,
"deepskyblue",
},
[167113] = {
true,
false,
"blue",
},
[189886] = {
true,
false,
"gold",
},
[151325] = {
true,
false,
"fuchsia",
},
[221103] = {
true,
false,
"mediumpurple",
},
[163122] = {
true,
false,
"WARRIOR",
},
[211261] = {
true,
false,
"mediumpurple",
},
[97068] = {
true,
false,
"mediumpurple",
},
[166396] = {
true,
false,
"blue",
},
[185537] = {
true,
false,
"blue",
},
[175992] = {
true,
false,
"fuchsia",
},
[131847] = {
true,
false,
"WARRIOR",
},
[75451] = {
true,
false,
"fuchsia",
},
[180473] = {
true,
false,
"blue",
},
[206065] = {
true,
false,
"fuchsia",
},
[216658] = {
true,
false,
"mediumpurple",
},
[132126] = {
true,
false,
"fuchsia",
},
[40825] = {
true,
false,
"mediumpurple",
},
[212405] = {
true,
false,
"WARRIOR",
},
[207177] = {
true,
false,
"mediumpurple",
},
[224516] = {
true,
false,
"WARRIOR",
},
[133436] = {
true,
false,
"gold",
},
[178630] = {
true,
false,
"deepskyblue",
},
[133852] = {
true,
false,
"blue",
},
[216364] = {
true,
false,
"deepskyblue",
},
[134364] = {
true,
false,
"honeydew",
},
[155090] = {
true,
false,
"deepskyblue",
},
[83846] = {
true,
false,
"mediumpurple",
},
[190401] = {
true,
false,
"mediumpurple",
},
[196798] = {
true,
false,
"blue",
},
[168396] = {
true,
false,
"mediumpurple",
},
[228015] = {
true,
false,
"mediumpurple",
},
[213942] = {
true,
false,
"deepskyblue",
},
[183497] = {
true,
false,
"blue",
},
[133870] = {
true,
false,
"fuchsia",
},
[138464] = {
true,
false,
"blue",
},
[200126] = {
true,
false,
"fuchsia",
},
[194316] = {
true,
false,
"mediumpurple",
},
[135167] = {
false,
false,
"peru",
},
[127879] = {
true,
false,
"blue",
},
[135204] = {
true,
false,
"honeydew",
},
},
["cast_statusbar_bgcolor"] = {
0,
0,
0,
0.79781,
},
["aura_tracker"] = {
["debuff"] = {
224991,
277950,
},
["buff_tracked"] = {
["227931"] = true,
["297133"] = true,
["163689"] = true,
["233210"] = true,
["280001"] = true,
},
["buff_banned"] = {
["206150"] = true,
["333553"] = true,
["61574"] = true,
["61573"] = true,
},
},
["disable_omnicc_on_auras"] = true,
["resources"] = {
["scale"] = 0.79999995231628,
["y_offset"] = 1,
["y_offset_target"] = 9,
},
["extra_icon_auras_mine"] = {
["224991"] = true,
},
["castbar_target_font"] = "Accidental Presidency",
["aura_stack_font"] = "Accidental Presidency",
["patch_version"] = 37,
["no_spellname_length_limit"] = true,
["range_check_in_range_or_target_alpha"] = 0.89999997615814,
["aura_timer_text_size"] = 10,
["extra_icon_show_timer"] = false,
["auto_toggle_combat"] = {
["enemy_ic"] = true,
["friendly_ic"] = true,
["blizz_healthbar_ic"] = true,
["friendly_ooc"] = true,
["blizz_healthbar_ooc"] = true,
["enemy_ooc"] = true,
},
["number_region_first_run"] = true,
["aura_sort"] = true,
["aura_grow_direction"] = 3,
["color_override_colors"] = {
[3] = {
nil,
0.2784313,
0.2078431,
},
[4] = {
1,
0.80784320831299,
0.2039215862751,
},
[5] = {
0.29019607843137,
1,
0.19607843137255,
},
},
["target_highlight_alpha"] = 1,
["news_frame"] = {
["PlaterNewsFrame"] = {
["scale"] = 1,
},
},
["hide_friendly_castbars"] = true,
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1,
},
},
["target_highlight_height"] = 18,
["version"] = 46,
["use_ui_parent"] = true,
["dps"] = {
["colors"] = {
["aggro"] = {
nil,
0.047058828175068,
},
["solo"] = {
0.50196078431373,
0.50196078431373,
},
["noaggro"] = {
0.50196081399918,
0.50196081399918,
},
["pulling"] = {
0.84705889225006,
0.61176472902298,
},
},
},
["health_selection_overlay_alpha"] = 0.2999999821186066,
["aura_width2"] = 22,
["health_statusbar_bgcolor"] = {
0.0431372,
0.0431372,
0.0431372,
1,
},
["castbar_target_anchor"] = {
["side"] = 11,
},
["cast_color_settings"] = {
["enabled"] = true,
["width"] = 12,
},
["script_auto_imported"] = {
["Aura - Is Cast Bar [P]"] = 1,
["Aura - Buff Alert"] = 15,
["Cast - Effect After Cast [P]"] = 2,
["Cast - Circular Swipe"] = 4,
["Aura - Debuff Alert"] = 12,
["Unit - Show Energy"] = 11,
["Cast - Castbar is Timer [P]"] = 2,
["Blink by Time Left"] = 1,
["Cast - Ultra Important"] = 14,
["Add - Health Markers [P]"] = 3,
["Cast - Small Alert"] = 12,
["Relics 9.2 M Dungeons"] = 2,
["Aura - Invalidate Unit"] = 1,
["Add - Important [P]"] = 4,
["Unit Power"] = 1,
["Unit - Main Target"] = 11,
["Aura - Blink Time Left"] = 13,
["Add - Explode on Die [P]"] = 1,
["Add - Tag Number [P]"] = 2,
["Unit - Health Markers"] = 12,
["Cast - Voidzone [P]"] = 2,
["Cast - Special Ability [P]"] = 3,
["Cast - Heroic Leap [P]"] = 3,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Spark Color [P]"] = 2,
["Cast - Heal Stun [P]"] = 2,
["Cast - Stop Casting"] = 4,
["Cast - Important Target [P]"] = 2,
["Unit - Important"] = 11,
["Cast - Glowing [P]"] = 10,
["Cast - Shield Interrupt"] = 2,
["Spiteful Affix"] = 3,
["Cast - Very Important"] = 15,
["Cast - AoE Hit All [P]"] = 3,
["Color Change"] = 1,
["Cast - Quick Flash"] = 2,
["Aura is Shield [P]"] = 5,
["Add - Warning [P]"] = 5,
["Cast - Simple Interrupt [P]"] = 2,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - Ongoing Cast [P]"] = 4,
["Cast - Important by Color [P]"] = 2,
["Cast - Heal Cut [P]"] = 3,
["Cast - Debuff [P]"] = 2,
["Auto Set Skull"] = 11,
["Cast - Alert + Timer [P]"] = 4,
["Add - Non Elite Trash [P]"] = 4,
["Countdown"] = 11,
["Aura Border Color"] = 1,
["Cast - On Going Cast [P]"] = 2,
["Cast - AoE With Range [P]"] = 2,
["Cast - Frontal Cone"] = 17,
["Fixate"] = 11,
["Cast - Tank Interrupt"] = 12,
["Cast - Shining Green [P]"] = 3,
["Explosion Affix M+"] = 14,
["Fixate On You"] = 11,
},
["cast_statusbar_texture"] = "Blizzard",
["extra_icon_height"] = 16,
["indicator_enemyclass"] = true,
["range_check_alpha_friendlies"] = 0.64999997615814,
},
},
}
PlaterLanguage = {
["language"] = "zhCN",
["version"] = 1,
}
PlaterLogs = {
["_general_logs"] = {
"2024-10-15 17:38:51 | INIT | Plater-v589-Retail | Framework v572 | 11.0.2 | zhCN | 彭浦新村",
"2024-10-15 17:37:54 | INIT | Plater-v589-Retail | Framework v572 | 11.0.2 | zhCN | 彭浦新村",
"2024-10-15 17:00:11 | INIT | Plater-v589-Retail | Framework v572 | 11.0.2 | zhCN | 彭浦新村",
"2024-10-15 16:57:52 | INIT | Plater-v589-Retail | Framework v572 | 11.0.2 | zhCN | 彭浦新村",
"2024-10-09 18:57:38 | INIT | Plater-v589-Retail | Framework v572 | 11.0.2 | zhCN | 彭浦新村",
"2024-10-09 18:56:01 | INIT | Plater-v589-Retail | Framework v572 | 11.0.2 | zhCN | 彭浦新村",
"2024-09-05 00:53:18 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | zhCN | 彭浦新村",
"2024-09-04 19:55:21 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | zhCN | 彭浦新村",
"2024-09-04 19:54:51 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | zhCN | 共康路",
"2024-09-04 18:16:08 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | zhCN | 彭浦新村",
"2024-09-03 20:42:17 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | zhCN | 彭浦新村",
"2024-09-02 23:39:58 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | zhCN | 彭浦新村",
"2024-09-02 19:21:31 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | zhCN | 彭浦新村",
"2024-09-02 01:50:43 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | zhCN | 彭浦新村",
"2024-09-02 01:48:34 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | zhCN | 彭浦新村",
"2024-09-02 00:58:56 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | zhCN | 彭浦新村",
"2024-09-01 20:32:56 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | zhCN | 彭浦新村",
"2024-09-01 20:32:18 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | zhCN | 彭浦新村",
"2024-09-01 20:10:01 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | zhCN | 彭浦新村",
},
["_error_logs"] = {
},
}
PlaterBackup = {
}
